{
  "series": {
"type": "Array",
"items": {
"anyOf": [
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>折线图</strong></p>\n<p>折线图是用折线将各个数据点<a href=\"#series-line.symbol\">标志</a>连接起来的图表，用于展现数据的变化趋势。可用于<a href=\"#grid\">直角坐标系</a>和<a href=\"#polar\">极坐标系</a>上。</p>\n<p><strong>Tip:</strong> 设置 <a href=\"#series-line.areaStyle\">areaStyle</a> 后可以绘制面积图。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'line'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-bar.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-bar.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n<ul>\n<li><p><code>&#39;polar&#39;</code></p>\n<p>  使用极坐标系，通过 <a href=\"#series-bar.polarIndex\">polarIndex</a> 指定相应的极坐标组件</p>\n</li>\n</ul>\n",
"defaultValue": "'cartesian2d'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"polarIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#polar\">极坐标系</a>的 index，在单个图表实例中存在多个极坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'circle'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-scatter.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 4
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"showSymbol": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示 symbol, 只有在 tooltip hover 的时候显示。</p>\n",
"defaultValue": true
},
"showAllSymbol": {
"type": [
"boolean"
],
"descriptionCN": "<p>标志图形默认只有主轴显示（随主轴标签间隔隐藏策略），如需全部显示可把 showAllSymbol 设为 <code>true</code>。</p>\n",
"defaultValue": false
},
"hoverAnimation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启 hover 在拐点标志上的提示动画效果。</p>\n",
"defaultValue": true
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"stack": {
"type": [
"string"
],
"descriptionCN": "<p>数据堆叠，同个类目轴上系列配置相同的<code>stack</code>值可以堆叠放置。</p>\n<p>下面示例可以通过右上角 <a href=\"#toolbox\">toolbox</a> 中的堆叠切换看效果：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/line-stack-tiled&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
"defaultValue": null
},
"clipOverflow": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否对超出部分裁剪，默认裁剪。</p>\n",
"defaultValue": true
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'top'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>折线拐点标志的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color",
"Function"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n<p>支持使用回调函数。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(params: Object) =&gt; Color\n</code></pre>\n<p>传入的是数据项 <code>seriesIndex</code>, <code>dataIndex</code>, <code>data</code>, <code>value</code> 等各个参数。</p>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"areaStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>区域填充样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>填充的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>填充的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"smooth": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否平滑曲线显示。</p>\n",
"defaultValue": false
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项通常为具体的数据项。数据格式有下面几种情况</p>\n<ol>\n<li><p>在坐标系一个轴为类目轴的时候，数据可以是一维的数值，数组长度等于所使用类目轴文本标签数组 <a href=\"#xAxis.data\">xAxis.data</a> 的长度，并且他们间是一一对应的，如下：</p>\n<pre><code class=\"lang-js\"> [12, 34, 56, 10, 23]\n</code></pre>\n</li>\n<li><p>在坐标系两个轴都为数值轴的时候，每个数据项需要是一个数组，并且至少有两个值表示直角坐标系上的 <code>x</code>， <code>y</code> 或者极坐标系上的 <code>radius</code>，<code>angle</code>，如下：</p>\n<pre><code class=\"lang-js\"> [[3.4, 4.5, 15], [4.2, 2.3, 20], [10.8, 9.5, 30], [7.2, 8.8, 18]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n</li>\n<li><p>在坐标系两个轴都为类目轴的时候，每个数据项也需要是一个数组，单个数据项至少要有两个值表示在两个轴上类目的索引或者类目的名称，如下：</p>\n<pre><code class=\"lang-js\"> [[0, 0, 2], [&#39;星期一&#39;, 2, 1], [2, 1, 2], [3, 3, 5]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n<p> 双类目轴的示例可以参考 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=scatter-punchCard\" target=\"_blank\">Github Punchcard</a> 示例。</p>\n</li>\n</ol>\n<p>当需要对个别数据标志进行个性化定义时，数组项可用对象，其中的<code>value</code> 像表示具体的数值，如：</p>\n<pre><code class=\"lang-js\">[\n    12, 34,\n    {\n        value : 56,\n        //自定义标签样式，仅对该数据项有效\n        label: {},\n        //自定义特殊 itemStyle，仅对该数据项有效\n        itemStyle:{}\n    },\n    10, 23\n]\n</code></pre>\n<p><strong>Tip: </strong>当某类目对应数据不存在时（ps：&#39;不存在&#39; 不代表值为 0），可用&#39;-&#39;表示，无数据在折线图中表现为该点是断开的，在其它图中表示为图形不存在。</p>\n",
"items": {
"type": "Object",
"properties": {
"value": {
"type": [
"number"
],
"descriptionCN": "<p>单个数据项的数值。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>单个数据标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'circle'"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>单个数据标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n",
"defaultValue": 4
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>单个数据标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>单个数据标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>单个拐点文本的样式设置。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "top"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>单个拐点标志的样式设置。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的颜色。</p>\n",
"defaultValue": "自适应"
},
"barBorderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的描边颜色。</p>\n",
"defaultValue": "'#000'"
},
"barBorderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的描边宽度，默认不描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的颜色。</p>\n",
"defaultValue": "自适应"
},
"barBorderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的描边颜色。</p>\n",
"defaultValue": "'#000'"
},
"barBorderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的描边宽度，默认不描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-line.markPoint.data.x\">x</a>, <a href=\"#series-line.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-line.markPoint.data.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-line.markPoint.data.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-line.markPoint.data.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;最大值&#39;,\n    type: &#39;max&#39;\n}, {\n    name: &#39;某个坐标&#39;,\n    coord: [10, 20]\n}, {\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-line.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-line.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-line.markLine.data.0.x\">x</a>, <a href=\"#series-line.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-line.markLine.data.0.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-line.markLine.data.0.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-line.markLine.data.0.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p>也可以是直接通过 <code>type</code> 设置该标线的类型，是最大值的线还是平均线。同样的，这时候可以通过使用 <code>valueIndex</code> 指定维度。</p>\n<pre><code>data: [\n    {\n        name: &#39;平均线&#39;,\n        // 支持 &#39;average&#39;, &#39;min&#39;, &#39;max&#39;\n        type: &#39;average&#39;\n    },\n    [{\n        // 起点和终点的项会共用一个 name\n        name: &#39;最小值到最大值&#39;,\n        type: &#39;min&#39;\n    }, {\n        type: &#39;max&#39;\n    }],\n    [{\n        name: &#39;两个坐标之间的标线&#39;,\n        coord: [10, 20]\n    }, {\n        coord: [20, 30]\n    }],\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "linear"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>柱状图</strong></p>\n<p>柱状图通过柱形的高度来表现数据的大小，用于有至少一个类目轴的<a href=\"#grid\">直角坐标系</a>上。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'bar'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-bar.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-bar.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n",
"defaultValue": "'cartesian2d'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n",
"defaultValue": "自适应"
},
"barBorderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的描边颜色。</p>\n",
"defaultValue": "'#000'"
},
"barBorderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的描边宽度，默认不描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的颜色。</p>\n",
"defaultValue": "自适应"
},
"barBorderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的描边颜色。</p>\n",
"defaultValue": "'#000'"
},
"barBorderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的描边宽度，默认不描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"stack": {
"type": [
"string"
],
"descriptionCN": "<p>数据堆叠，同个类目轴上系列配置相同的<code>stack</code>值可以堆叠放置。</p>\n",
"defaultValue": null
},
"barWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的宽度，不设时自适应</p>\n",
"defaultValue": "自适应"
},
"barMaxWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的最大宽度，不设时自适应</p>\n",
"defaultValue": "自适应"
},
"barMinHeight": {
"type": [
"number"
],
"descriptionCN": "<p>柱条最小高度，可用于防止某数据项的值过小而影响交互。</p>\n",
"defaultValue": 0
},
"barGap": {
"type": [
"string"
],
"descriptionCN": "<p>柱间距离，默认为柱形宽度的30%，可设固定值</p>\n",
"defaultValue": "'30%'"
},
"barCategoryGap": {
"type": [
"string"
],
"descriptionCN": "<p>类目间柱形距离，默认为类目间距的20%，可设固定值</p>\n",
"defaultValue": "'20%'"
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项通常为具体的数据项。数据格式有下面几种情况</p>\n<ol>\n<li><p>在坐标系一个轴为类目轴的时候，数据可以是一维的数值，数组长度等于所使用类目轴文本标签数组 <a href=\"#xAxis.data\">xAxis.data</a> 的长度，并且他们间是一一对应的，如下：</p>\n<pre><code class=\"lang-js\"> [12, 34, 56, 10, 23]\n</code></pre>\n</li>\n<li><p>在坐标系两个轴都为数值轴的时候，每个数据项需要是一个数组，并且至少有两个值表示直角坐标系上的 <code>x</code>， <code>y</code> 或者极坐标系上的 <code>radius</code>，<code>angle</code>，如下：</p>\n<pre><code class=\"lang-js\"> [[3.4, 4.5, 15], [4.2, 2.3, 20], [10.8, 9.5, 30], [7.2, 8.8, 18]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n</li>\n<li><p>在坐标系两个轴都为类目轴的时候，每个数据项也需要是一个数组，单个数据项至少要有两个值表示在两个轴上类目的索引或者类目的名称，如下：</p>\n<pre><code class=\"lang-js\"> [[0, 0, 2], [&#39;星期一&#39;, 2, 1], [2, 1, 2], [3, 3, 5]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n<p> 双类目轴的示例可以参考 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=scatter-punchCard\" target=\"_blank\">Github Punchcard</a> 示例。</p>\n</li>\n</ol>\n<p>当需要对个别数据标志进行个性化定义时，数组项可用对象，其中的<code>value</code> 像表示具体的数值，如：</p>\n<pre><code class=\"lang-js\">[\n    12, 34,\n    {\n        value : 56,\n        //自定义标签样式，仅对该数据项有效\n        label: {},\n        //自定义特殊 itemStyle，仅对该数据项有效\n        itemStyle:{}\n    },\n    10, 23\n]\n</code></pre>\n<p><strong>Tip: </strong>当某类目对应数据不存在时（ps：&#39;不存在&#39; 不代表值为 0），可用&#39;-&#39;表示，无数据在折线图中表现为该点是断开的，在其它图中表示为图形不存在。</p>\n",
"items": {
"type": "Object",
"properties": {
"value": {
"type": [
"number"
],
"descriptionCN": "<p>单个数据项的数值。</p>\n"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>单个柱条文本的样式设置。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "inside"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的颜色。</p>\n",
"defaultValue": "自适应"
},
"barBorderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的描边颜色。</p>\n",
"defaultValue": "'#000'"
},
"barBorderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的描边宽度，默认不描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的颜色。</p>\n",
"defaultValue": "自适应"
},
"barBorderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>柱条的描边颜色。</p>\n",
"defaultValue": "'#000'"
},
"barBorderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>柱条的描边宽度，默认不描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-bar.markPoint.data.x\">x</a>, <a href=\"#series-bar.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-bar.markPoint.data.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-bar.markPoint.data.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-bar.markPoint.data.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;最大值&#39;,\n    type: &#39;max&#39;\n}, {\n    name: &#39;某个坐标&#39;,\n    coord: [10, 20]\n}, {\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-bar.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n<p>prefix</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-bar.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-bar.markLine.data.0.x\">x</a>, <a href=\"#series-bar.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-bar.markLine.data.0.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-bar.markLine.data.0.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-bar.markLine.data.0.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p>也可以是直接通过 <code>type</code> 设置该标线的类型，是最大值的线还是平均线。同样的，这时候可以通过使用 <code>valueIndex</code> 指定维度。</p>\n<pre><code>data: [\n    {\n        name: &#39;平均线&#39;,\n        // 支持 &#39;average&#39;, &#39;min&#39;, &#39;max&#39;\n        type: &#39;average&#39;\n    },\n    [{\n        // 起点和终点的项会共用一个 name\n        name: &#39;最小值到最大值&#39;,\n        type: &#39;min&#39;\n    }, {\n        type: &#39;max&#39;\n    }],\n    [{\n        name: &#39;两个坐标之间的标线&#39;,\n        coord: [10, 20]\n    }, {\n        coord: [20, 30]\n    }],\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>饼图</strong></p>\n<p>饼图主要用于表现不同类目的数据在总和中的占比。每个的弧度表示数据数量的比例。</p>\n<p><strong>Tip:</strong> 饼图更适合表现数据相对于总数的百分比等关系。如果只是表示不同类目数据间的大小，建议使用 <a href=\"bar\" target=\"_blank\">柱状图</a>，人们对于微小的弧度差别相比于微小的长度差别更不敏感，或者也可以通过配置 <a href=\"#series-pie.roseType\">roseType</a> 显示成南丁格尔图，通过半径大小区分数据的大小。</p>\n<p><strong>下面是自定义南丁格尔图的示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=pie-custom&edit=1&reset=1\" width=\"500\" height=\"400\" ></iframe>\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'pie'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"hoverAnimation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启 hover 在扇区上的放大动画效果。</p>\n",
"defaultValue": true
},
"selectedMode": {
"type": [
"boolean",
"string"
],
"descriptionCN": "<p>选中模式，表示是否支持多个选中，默认关闭，支持布尔值和字符串，字符串取值可选<code>&#39;single&#39;</code>，<code>&#39;multiple&#39;</code>，分别表示单选还是多选。</p>\n",
"defaultValue": false
},
"selectedOffset": {
"type": [
"number"
],
"descriptionCN": "<p>选中扇区的偏移距离。</p>\n",
"defaultValue": 10
},
"clockwise": {
"type": [
"boolean"
],
"descriptionCN": "<p>饼图的扇区是否是顺时针排布。</p>\n",
"defaultValue": true
},
"startAngle": {
"type": [
"number"
],
"descriptionCN": "<p>起始角度，支持范围[0, 360]。</p>\n",
"defaultValue": 90
},
"minAngle": {
"type": [
"number"
],
"descriptionCN": "<p>最小的扇区角度，用于防止某个值过小导致扇区太小影响交互。</p>\n",
"defaultValue": 0
},
"roseType": {
"type": [
"boolean",
"string"
],
"descriptionCN": "<p>是否展示成南丁格尔图，通过半径区分数据大小。可选择两种模式：</p>\n<ul>\n<li><code>&#39;radius&#39;</code> 面积展现数据的百分比，半径展现数据的大小。</li>\n<li><code>&#39;area&#39;</code> 所有扇区面积相同，仅通过半径展现数据大小。</li>\n</ul>\n",
"defaultValue": false
},
"avoidLabelOverlap": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用防止标签重叠策略，默认开启，在标签拥挤重叠的情况下会挪动各个标签的位置，防止标签间的重叠。</p>\n<p>如果不需要开启该策略，例如<a href=\"http://echarts.baidu.com/gallery/editor.html?c=pie-doughnut\" target=\"_blank\">圆环图</a>这个例子中需要强制所有标签放在中心位置，可以将该值设为 <code>false</code>。</p>\n",
"defaultValue": true
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>饼图图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p><code>&#39;outside&#39;</code></p>\n<p>  饼图扇区外侧，通过<a href=\"#series-pie.labelLine\">视觉引导线</a>连到相应的扇区。</p>\n</li>\n<li><p><code>&#39;inside&#39;</code></p>\n<p>  饼图扇区内部。</p>\n</li>\n<li><p><code>&#39;inner&#39;</code> 同 <code>&#39;inside&#39;</code>。</p>\n</li>\n<li><p><code>&#39;center&#39;</code></p>\n<p>  在饼图中心位置。见<a href=\"http://echarts.baidu.com/gallery/editor.html?c=pie-doughnut\" target=\"_blank\">圆环图示例</a></p>\n</li>\n</ul>\n",
"defaultValue": "'outside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n     // 百分比\n     percent: number,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n     // 百分比\n     percent: number,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"labelLine": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的视觉引导线样式，在 <a href=\"#series-pie.label.normal.position\">label 位置</a> 设置为<code>&#39;outside&#39;</code>的时候会显示视觉引导线。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "<p>普通状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"length": {
"type": [
"number"
],
"descriptionCN": "<p>视觉引导线第一段的长度。</p>\n"
},
"length2": {
"type": [
"number"
],
"descriptionCN": "<p>视觉引导项第二段的长度。</p>\n"
},
"smooth": {
"type": [
"boolean",
"number"
],
"descriptionCN": "<p>是否平滑视觉引导线，默认不平滑，可以设置成 <code>true</code> 平滑显示，也可以设置为 0 到 1 的值，表示平滑程度。</p>\n",
"defaultValue": false
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "<p>高亮状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color",
"Function"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n<p>支持使用回调函数。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(params: Object) =&gt; Color\n</code></pre>\n<p>传入的是数据项 <code>seriesIndex</code>, <code>dataIndex</code>, <code>data</code>, <code>value</code> 等各个参数。</p>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 2
},
"center": {
"type": [
"Array"
],
"descriptionCN": "<p>饼图的中心（圆心）坐标，数组的第一项是横坐标，第二项是纵坐标。</p>\n<p>支持设置成百分比，设置成百分比时第一项是相对于容器宽度，第二项是相对于容器高度。</p>\n<p><strong>使用示例：</strong></p>\n<pre><code>// 设置成绝对的像素值\ncenter: [400, 300]\n// 设置成相对的百分比\ncenter: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>",
"defaultValue": "['50%', '50%']"
},
"radius": {
"type": [
"Array"
],
"descriptionCN": "<p>饼图的半径，数组的第一项是内半径，第二项是外半径。</p>\n<p>支持设置成百分比，相对于容器高宽中较小的一项的一半。</p>\n<p>可以将内半径设大显示成圆环图（Donut chart）。</p>\n",
"defaultValue": "[0, '75%']"
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项可以为单个数值，如：</p>\n<pre><code class=\"lang-js\">[12, 34, 56, 10, 23]\n</code></pre>\n<p>如果需要在数据中加入其它维度给 <a href=\"#visualMap\">visualMap</a> 组件用来映射到颜色等其它图形属性。每个数据项也可以是数组，如：</p>\n<pre><code class=\"lang-js\">[[12, 14], [34, 50], [56, 30], [10, 15], [23, 10]]\n</code></pre>\n<p>这时候可以将每项数组中的第二个值指定给 <a href=\"#visualMap\">visualMap</a> 组件。</p>\n<p>更多时候我们需要指定每个数据项的名称，这时候需要每个项为一个对象：</p>\n<pre><code class=\"lang-js\">[{\n    // 数据项的名称\n    name: &#39;数据1&#39;,\n    // 数据项值8\n    value: 10\n}, {\n    name: &#39;数据2&#39;,\n    value: 20\n}]\n</code></pre>\n<p>需要对个别内容指定进行个性化定义时：</p>\n<pre><code class=\"lang-js\">[{\n    name: &#39;数据1&#39;,\n    value: 10\n}, {\n    // 数据项名称\n    name: &#39;数据2&#39;,\n    value : 56,\n    //自定义特殊 tooltip，仅对该数据项有效\n    tooltip:{},\n    //自定义特殊itemStyle，仅对该item有效\n    itemStyle:{}\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>数据值。</p>\n"
},
"selected": {
"type": [
"boolean"
],
"descriptionCN": "<p>该数据项是否被选中。</p>\n",
"defaultValue": false
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>单个扇区的标签配置。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p><code>&#39;outside&#39;</code></p>\n<p>  饼图扇区外侧，通过<a href=\"#series-pie.labelLine\">视觉引导线</a>连到相应的扇区。</p>\n</li>\n<li><p><code>&#39;inside&#39;</code></p>\n<p>  饼图扇区内部。</p>\n</li>\n<li><p><code>&#39;inner&#39;</code> 同 <code>&#39;inside&#39;</code>。</p>\n</li>\n<li><p><code>&#39;center&#39;</code></p>\n<p>  在饼图中心位置。见<a href=\"http://echarts.baidu.com/gallery/editor.html?c=pie-doughnut\" target=\"_blank\">圆环图示例</a></p>\n</li>\n</ul>\n",
"defaultValue": "'outside'"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"labelLine": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "<p>普通状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"length": {
"type": [
"number"
],
"descriptionCN": "<p>视觉引导线第一段的长度。</p>\n"
},
"length2": {
"type": [
"number"
],
"descriptionCN": "<p>视觉引导项第二段的长度。</p>\n"
},
"smooth": {
"type": [
"boolean",
"number"
],
"descriptionCN": "<p>是否平滑视觉引导线，默认不平滑，可以设置成 <code>true</code> 平滑显示，也可以设置为 0 到 1 的值，表示平滑程度。</p>\n",
"defaultValue": false
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "<p>高亮状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-pie.markPoint.data.x\">x</a>, <a href=\"#series-pie.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-pie.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-pie.markLine.data.0.x\">x</a>, <a href=\"#series-pie.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<pre><code>data: [\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p>散点（气泡）图。<a href=\"#grid\">直角坐标系</a>上的散点图可以用来展现数据的 <code>x</code>，<code>y</code> 之间的关系，如果数据项有多个维度，其它维度的值可以通过不同大小的 <a href=\"#series-scatter.symbol\">symbol</a> 展现成气泡图，也可以用颜色来表现。这些可以配合 <a href=\"#visualMap\">visualMap</a> 组件完成。</p>\n<p>可以应用在<a href=\"#grid\">直角坐标系</a>，<a href=\"#polar\">极坐标系</a>，<a href=\"#geo\">地理坐标系</a>上。</p>\n<p><strong>Tip:</strong> ECharts 2.x 中在地图上通过 markPoint 标记大量数据点方式在 ECharts 3 中建议通过<a href=\"#geo\">地理坐标系</a>上的 scatter 实现。下面示例就是在中国地图上用散点图展现了空气质量的分布。并且用 <a href=\"#visualMap\">visualMap</a> 组件将 PM2.5 映射到了颜色。</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=scatter-map&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'scatter'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-bar.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-bar.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n<ul>\n<li><p><code>&#39;polar&#39;</code></p>\n<p>  使用极坐标系，通过 <a href=\"#series-bar.polarIndex\">polarIndex</a> 指定相应的极坐标组件</p>\n</li>\n</ul>\n<ul>\n<li><p><code>&#39;geo&#39;</code></p>\n<p>  使用地理坐标系，通过 <a href=\"#series-bar.geoIndex\">geoIndex</a> 指定相应的地理坐标系组件</p>\n</li>\n</ul>\n",
"defaultValue": "'cartesian2d'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"polarIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#polar\">极坐标系</a>的 index，在单个图表实例中存在多个极坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"geoIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#geo\">地理坐标系</a>的 index，在单个图表实例中存在多个地理坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"hoverAnimation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启鼠标 hover 的提示动画效果。</p>\n"
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'circle'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-scatter.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 10
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"large": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启大规模散点图的优化，在数据图形特别多的时候（&gt;=2k）可以开启。</p>\n<p>开启后配合 <a href=\"#series-scatter.largeThreshold\">largeThreshold</a> 在数据量大于指定阈值的时候对绘制进行优化。</p>\n<p>优化后不能自定义设置单个数据项的样式，不能交互。</p>\n",
"defaultValue": true
},
"largeThreshold": {
"type": [
"number"
],
"descriptionCN": "<p>开启绘制优化的阈值。</p>\n",
"defaultValue": 2000
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color",
"Function"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n<p>支持使用回调函数。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(params: Object) =&gt; Color\n</code></pre>\n<p>传入的是数据项 <code>seriesIndex</code>, <code>dataIndex</code>, <code>data</code>, <code>value</code> 等各个参数。</p>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项通常为具体的数据项。数据格式有下面几种情况</p>\n<ol>\n<li><p>在坐标系一个轴为类目轴的时候，数据可以是一维的数值，数组长度等于所使用类目轴文本标签数组 <a href=\"#xAxis.data\">xAxis.data</a> 的长度，并且他们间是一一对应的，如下：</p>\n<pre><code class=\"lang-js\"> [12, 34, 56, 10, 23]\n</code></pre>\n</li>\n<li><p>在坐标系两个轴都为数值轴的时候，每个数据项需要是一个数组，并且至少有两个值表示直角坐标系上的 <code>x</code>， <code>y</code> 或者极坐标系上的 <code>radius</code>，<code>angle</code>，如下：</p>\n<pre><code class=\"lang-js\"> [[3.4, 4.5, 15], [4.2, 2.3, 20], [10.8, 9.5, 30], [7.2, 8.8, 18]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n</li>\n<li><p>在坐标系两个轴都为类目轴的时候，每个数据项也需要是一个数组，单个数据项至少要有两个值表示在两个轴上类目的索引或者类目的名称，如下：</p>\n<pre><code class=\"lang-js\"> [[0, 0, 2], [&#39;星期一&#39;, 2, 1], [2, 1, 2], [3, 3, 5]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n<p> 双类目轴的示例可以参考 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=scatter-punchCard\" target=\"_blank\">Github Punchcard</a> 示例。</p>\n</li>\n</ol>\n<p>当需要对个别数据标志进行个性化定义时，数组项可用对象，其中的<code>value</code> 像表示具体的数值，如：</p>\n<pre><code class=\"lang-js\">[\n    12, 34,\n    {\n        value : 56,\n        //自定义标签样式，仅对该数据项有效\n        label: {},\n        //自定义特殊 itemStyle，仅对该数据项有效\n        itemStyle:{}\n    },\n    10, 23\n]\n</code></pre>\n<p><strong>Tip: </strong>当某类目对应数据不存在时（ps：&#39;不存在&#39; 不代表值为 0），可用&#39;-&#39;表示，无数据在折线图中表现为该点是断开的，在其它图中表示为图形不存在。</p>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"Array"
],
"descriptionCN": "<p>数据项值。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>单个数据标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>单个数据标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>单个数据标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>单个数据标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "inside"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>单个数据点（气泡）的样式设置。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-scatter.markPoint.data.x\">x</a>, <a href=\"#series-scatter.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-scatter.markPoint.data.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-scatter.markPoint.data.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-scatter.markPoint.data.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;最大值&#39;,\n    type: &#39;max&#39;\n}, {\n    name: &#39;某个坐标&#39;,\n    coord: [10, 20]\n}, {\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-scatter.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-scatter.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-scatter.markLine.data.0.x\">x</a>, <a href=\"#series-scatter.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-scatter.markLine.data.0.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-scatter.markLine.data.0.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-scatter.markLine.data.0.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p>也可以是直接通过 <code>type</code> 设置该标线的类型，是最大值的线还是平均线。同样的，这时候可以通过使用 <code>valueIndex</code> 指定维度。</p>\n<pre><code>data: [\n    {\n        name: &#39;平均线&#39;,\n        // 支持 &#39;average&#39;, &#39;min&#39;, &#39;max&#39;\n        type: &#39;average&#39;\n    },\n    [{\n        // 起点和终点的项会共用一个 name\n        name: &#39;最小值到最大值&#39;,\n        type: &#39;min&#39;\n    }, {\n        type: &#39;max&#39;\n    }],\n    [{\n        name: &#39;两个坐标之间的标线&#39;,\n        coord: [10, 20]\n    }, {\n        coord: [20, 30]\n    }],\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p>带有涟漪特效动画的散点（气泡）图。利用动画特效可以将某些想要突出的数据进行视觉突出。</p>\n<p><strong>Tip:</strong> ECharts 2.x 中在地图上通过 markPoint 实现地图特效在 ECharts 3 中建议通过地理坐标系上的 effectScatter 实现。</p>\n<p><strong>如下示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=effectScatter-map&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'effectScatter'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"effectType": {
"type": [
"string"
],
"descriptionCN": "<p>特效类型，目前只支持涟漪特效<code>&#39;ripple&#39;</code>。</p>\n",
"defaultValue": "'ripple'"
},
"showEffectOn": {
"type": [
"string"
],
"descriptionCN": "<p>配置何时显示特效。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code>&#39;render&#39;</code> 绘制完成后显示特效。</li>\n<li><code>&#39;emphasis&#39;</code> 高亮（hover）的时候显示特效。</li>\n</ul>\n",
"defaultValue": "'render'"
},
"rippleEffect": {
"type": [
"Object"
],
"descriptionCN": "<p>涟漪特效相关配置。</p>\n",
"properties": {
"period": {
"type": [
"number"
],
"descriptionCN": "<p>动画的时间。</p>\n",
"defaultValue": 4
},
"scale": {
"type": [
"number"
],
"descriptionCN": "<p>动画中波纹的最大缩放比例。</p>\n",
"defaultValue": 2.5
},
"brushType": {
"type": [
"string"
],
"descriptionCN": "<p>波纹的填充方式，可选 <code>&#39;stroke&#39;</code> 和 <code>&#39;fill&#39;</code>。</p>\n",
"defaultValue": "'fill'"
}
}
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-bar.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-bar.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n<ul>\n<li><p><code>&#39;polar&#39;</code></p>\n<p>  使用极坐标系，通过 <a href=\"#series-bar.polarIndex\">polarIndex</a> 指定相应的极坐标组件</p>\n</li>\n</ul>\n<ul>\n<li><p><code>&#39;geo&#39;</code></p>\n<p>  使用地理坐标系，通过 <a href=\"#series-bar.geoIndex\">geoIndex</a> 指定相应的地理坐标系组件</p>\n</li>\n</ul>\n",
"defaultValue": "'cartesian2d'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"polarIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#polar\">极坐标系</a>的 index，在单个图表实例中存在多个极坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"geoIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#geo\">地理坐标系</a>的 index，在单个图表实例中存在多个地理坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'circle'"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n",
"defaultValue": 10
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color",
"Function"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n<p>支持使用回调函数。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(params: Object) =&gt; Color\n</code></pre>\n<p>传入的是数据项 <code>seriesIndex</code>, <code>dataIndex</code>, <code>data</code>, <code>value</code> 等各个参数。</p>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项通常为具体的数据项。数据格式有下面几种情况</p>\n<ol>\n<li><p>在坐标系一个轴为类目轴的时候，数据可以是一维的数值，数组长度等于所使用类目轴文本标签数组 <a href=\"#xAxis.data\">xAxis.data</a> 的长度，并且他们间是一一对应的，如下：</p>\n<pre><code class=\"lang-js\"> [12, 34, 56, 10, 23]\n</code></pre>\n</li>\n<li><p>在坐标系两个轴都为数值轴的时候，每个数据项需要是一个数组，并且至少有两个值表示直角坐标系上的 <code>x</code>， <code>y</code> 或者极坐标系上的 <code>radius</code>，<code>angle</code>，如下：</p>\n<pre><code class=\"lang-js\"> [[3.4, 4.5, 15], [4.2, 2.3, 20], [10.8, 9.5, 30], [7.2, 8.8, 18]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n</li>\n<li><p>在坐标系两个轴都为类目轴的时候，每个数据项也需要是一个数组，单个数据项至少要有两个值表示在两个轴上类目的索引或者类目的名称，如下：</p>\n<pre><code class=\"lang-js\"> [[0, 0, 2], [&#39;星期一&#39;, 2, 1], [2, 1, 2], [3, 3, 5]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n<p> 双类目轴的示例可以参考 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=scatter-punchCard\" target=\"_blank\">Github Punchcard</a> 示例。</p>\n</li>\n</ol>\n<p>当需要对个别数据标志进行个性化定义时，数组项可用对象，其中的<code>value</code> 像表示具体的数值，如：</p>\n<pre><code class=\"lang-js\">[\n    12, 34,\n    {\n        value : 56,\n        //自定义标签样式，仅对该数据项有效\n        label: {},\n        //自定义特殊 itemStyle，仅对该数据项有效\n        itemStyle:{}\n    },\n    10, 23\n]\n</code></pre>\n<p><strong>Tip: </strong>当某类目对应数据不存在时（ps：&#39;不存在&#39; 不代表值为 0），可用&#39;-&#39;表示，无数据在折线图中表现为该点是断开的，在其它图中表示为图形不存在。</p>\n",
"items": {
"type": "Object",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>单个数据标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'circle'"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>单个数据标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n",
"defaultValue": 4
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>单个数据标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>单个数据标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "inside"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-effectScatter.markPoint.data.x\">x</a>, <a href=\"#series-effectScatter.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-effectScatter.markPoint.data.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-effectScatter.markPoint.data.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-effectScatter.markPoint.data.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;最大值&#39;,\n    type: &#39;max&#39;\n}, {\n    name: &#39;某个坐标&#39;,\n    coord: [10, 20]\n}, {\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-effectScatter.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n<p>prefix</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-effectScatter.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-effectScatter.markLine.data.0.x\">x</a>, <a href=\"#series-effectScatter.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-effectScatter.markLine.data.0.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n<li><p>直接用 <a href=\"#series-effectScatter.markLine.data.0.type\">type</a> 属性标注系列中的最大值，最小值。这时候可以使用 <a href=\"#series-effectScatter.markLine.data.0.valueIndex\">valueIndex</a> 指定是在哪个维度上的最大值，最小值。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p>也可以是直接通过 <code>type</code> 设置该标线的类型，是最大值的线还是平均线。同样的，这时候可以通过使用 <code>valueIndex</code> 指定维度。</p>\n<pre><code>data: [\n    {\n        name: &#39;平均线&#39;,\n        // 支持 &#39;average&#39;, &#39;min&#39;, &#39;max&#39;\n        type: &#39;average&#39;\n    },\n    [{\n        // 起点和终点的项会共用一个 name\n        name: &#39;最小值到最大值&#39;,\n        type: &#39;min&#39;\n    }, {\n        type: &#39;max&#39;\n    }],\n    [{\n        name: &#39;两个坐标之间的标线&#39;,\n        coord: [10, 20]\n    }, {\n        coord: [20, 30]\n    }],\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>特殊的标注类型，用于标注最大值最小值等。</p>\n<p><strong>可选:</strong></p>\n<ul>\n<li><code>&#39;min&#39;</code> 最大值。</li>\n<li><code>&#39;max&#39;</code> 最大值。</li>\n<li><code>&#39;average&#39;</code> 平均值。</li>\n</ul>\n"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><a href=\"https://en.wikipedia.org/wiki/Treemapping\" target=\"_blank\">Treemap</a> 是一种常见的表达『层级数据』『树状数据』的可视化形式。它主要用面积的方式，便于突出展现出『树』的各层级中重要的节点。</p>\n<p><strong>示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=treemap-obama&edit=1&reset=1\" width=\"700\" height=\"580\" ></iframe>\n\n\n\n<p><br>\n<strong>视觉映射：</strong></p>\n<p>treemap 首先是把数值映射到『面积』这种视觉元素上。</p>\n<p>此外，也支持对数据的其他维度进行视觉映射，例如映射到颜色、颜色明暗度上。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br>\n<br>\n<br>\n注：treemap 的配置项 和 ECharts2 相比有一些变化，一些不太成熟的配置方式不再支持或不再兼容：</p>\n<ul>\n<li><p><code>center/size</code> 方式的定位不再支持，而是统一使用 <code>left/top/bottom/right/width/height</code> 方式定位。</p>\n</li>\n<li><p><code>breadcrumb</code> 的配置被移动到了 <code>itemStyle.normal/itemStyle.emphasis</code> 外部，和 <code>itemStyle</code> 平级。</p>\n</li>\n<li><p><code>root</code> 的设置暂时不支持。目前可以使用 <code>zoom</code> 的方式来查看树更下层次的细节。</p>\n</li>\n<li><p><code>label</code> 的配置被移动到了 <code>itemStyle.normal/itemStyle.emphasis</code> 外部，和 <code>itemStyle</code> 平级。</p>\n</li>\n<li><p><code>itemStyle.normal.childBorderWidth</code>、<code>itemStyle.normal.childBorderColor</code>不再支持（因为这个配置方式只能定义两层的treemap）。统一使用 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 来进行各层级的定义。</p>\n</li>\n</ul>\n<p><br>\n<br></p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'treemap'"
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 2
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>treemap 组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>treemap 组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "middle"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>treemap 组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>treemap 组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
},
"width": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>treemap 组件的宽度。</p>\n",
"defaultValue": "80%"
},
"height": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>treemap 组件的高度。</p>\n",
"defaultValue": "80%"
},
"squareRatio": {
"type": [
"number"
],
"descriptionCN": "<p>期望矩形长宽比率。布局计算时会尽量向这个比率靠近。</p>\n<p>默认为黄金比：<code>0.5 * (1 + Math.sqrt(5))</code>。</p>\n"
},
"roam": {
"type": [
"boolean",
"string"
],
"descriptionCN": "<p>是否开启拖拽漫游（移动和缩放）。可取值有：</p>\n<ul>\n<li><code>false</code>：关闭。</li>\n<li><code>&#39;scale&#39;</code> 或 <code>&#39;zoom&#39;</code>：只能够缩放。</li>\n<li><code>&#39;move&#39;</code>：只能够平移。</li>\n<li><code>true</code>：缩放和平移均可。</li>\n</ul>\n",
"defaultValue": true
},
"nodeClick": {
"type": [
"boolean",
"string"
],
"descriptionCN": "<p>可取值为：</p>\n<ul>\n<li><code>false</code>：节点点击无反应。</li>\n<li><code>&#39;zoomToNode&#39;</code>：点击节点后缩放到节点。</li>\n<li><code>&#39;link&#39;</code>：如果节点数据中有 <a href=\"#series-treemap.data.link\">link</a> 点击节点后会进行超链接跳转。</li>\n</ul>\n",
"defaultValue": "'zoomToNode'"
},
"zoomToNodeRatio": {
"type": [
"number"
],
"descriptionCN": "<p>点击某个节点，会自动放大那个节点到合适的比例（节点占可视区域的面积比例），这个配置项就是这个比例。</p>\n",
"defaultValue": "0.32*0.32"
},
"levels": {
"type": [
"Array"
],
"descriptionCN": "<p><strong>多层配置</strong></p>\n<p>treemap 中采用『series』--『每个层级』--『每个节点』这样的『三级配置』。\n即我们可以对每个节点进行配置，也可以对树的每个层级进行配置，也可以 series 上设置全局配置。</p>\n<p>最常用的是『每个层级进行配置』，<code>levels</code> 配置项就是每个层级的配置。例如：</p>\n<pre><code class=\"lang-javascript\">levels: [\n    {...}, // 顶层配置\n    {...}, // 下一层配置\n    {...}, // 再下一层配置\n    ...\n]\n</code></pre>\n<p><br>\n<strong>视觉映射的规则</strong></p>\n<p>treemap中首要关注的是如何在视觉上较好得区分『不同层级』、『同层级中不同类别』。这需要合理得设置不同层级的『矩形颜色』、『边界粗细』、『边界颜色』甚至『矩形颜色饱和度』等。</p>\n<p>参见这个<a href=\"http://echarts.baidu.com/gallery/editor.html?c=treemap-disk&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，最顶层级用颜色区分，分成了『红』『绿』『蓝』等大块。每个颜色块中是下一个层级，使用颜色的饱和度来区分（参见 <code>colorSaturation</code>）。最外层的矩形边界是『白色』，下层级的矩形边界是当前区块颜色加上饱和度处理（参见 <code>borderColorSaturation</code>）。</p>\n<p>treemap是通过这样的规则来支持这种配置的：每个层级计算用户配置的 <code>color</code>、<code>colorSaturation</code>、<code>borderColor</code>、<code>colorSaturation</code>等视觉信息（在levels中配置），然后传递给子节点（子层级）。如果子节点没有配置，则继承父的配置，否则使用自己的配置）。</p>\n<p>这样，可以做到：父层级配置 <code>color</code> 列表，子层级配置 <code>colorSaturation</code>。父层级的每个节点会从 <code>color</code> 列表中得到一个颜色，子层级的节点会从 <code>colorSaturation</code> 中得到一个颜色，并且继承父节点得到的颜色，合成得到自己的最终颜色。</p>\n<p><br>\n<strong>维度与『额外的视觉映射』</strong></p>\n<p>例子：每一个 <code>value</code> 字段是一个 Array，其中每个项对应一个维度（dimension）。</p>\n<pre><code class=\"lang-javascript\">[\n    {\n        value: [434, 6969, 8382],\n        children: [\n            {\n                value: [1212, 4943, 5453],\n                id: &#39;someid-1&#39;,\n                name: &#39;description of this node&#39;,\n                children: [...]\n            },\n            {\n                value: [4545, 192, 439],\n                id: &#39;someid-2&#39;,\n                name: &#39;description of this node&#39;,\n                children: [...]\n            },\n            ...\n        ]\n    },\n    {\n        value: [23, 59, 12],\n        children: [...]\n    },\n    ...\n]\n</code></pre>\n<p>treemap 默认把第一个维度（Array 第一项）映射到『面积』上。而如果想表达更多信息，用户可以把其他的某一个维度（<a href=\"#series-treemap.viusalDimension\">series-treemap.visualDimension</a>），映射到其他的『视觉元素』上，比如颜色明暗等。参见<a href=\"http://echarts.baidu.com/gallery/editor.html?c=treemap-obama&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>中，legend选择 <code>Growth</code>时的状态。</p>\n<p><br></p>\n<p><strong>矩形边框/缝隙设置如何避免混淆</strong></p>\n<p>如果统一用一种颜色设置矩形的缝隙，那么当不同层级的矩形同时展示时可能会出现混淆。</p>\n<p>参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/treemap-borderColor&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，注意其中红色的区块中的子矩形其实是更深层级，和其他用白色缝隙区分的矩形不是在一个层级。所以，红色区块中矩形的分割线的颜色，我们在 <code>borderColorSaturation</code> 中设置为『加了饱和度变化的红颜色』，以示区别。</p>\n",
"defaultValue": "[]",
"items": {
"type": "Object",
"properties": {
"visualDimension": {
"type": [
"number"
],
"descriptionCN": "<p><code>treemap</code> 中支持对数据其他维度进行视觉映射。</p>\n<p>首先，treemap的数据格式（参见 <a href=\"#series-treemap.data\">series-treemap.data</a>）中，每个节点的 <code>value</code> 都可以是数组。数组每项是一个『维度』（dimension）。<code>visualDimension</code> 指定了额外的『视觉映射』使用的是数组的哪一项。默认为第 <code>0</code> 项。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>visualDimension</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": 0
},
"color": {
"type": [
"Array"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色 选取列表。默认为空时，选取系统color列表。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>color</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n"
},
"colorAlpha": {
"type": [
"Array"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色透明度 选取范围。数值范围 0 ~ 1。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorAlpha</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色饱和度 选取范围。数值范围 0 ~ 1。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorSaturation</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"colorMappingBy": {
"type": [
"string"
],
"descriptionCN": "<p>表示同一层级节点，在颜色列表中（参见 <code>color</code> 属性）选择时，按照什么来选择。可选值：</p>\n<ul>\n<li><code>&#39;value&#39;</code>：</li>\n</ul>\n<p>将节点的值（即 <a href=\"#series-treemap.data.value\">series-treemap.data.value</a>）映射到颜色列表中。这样得到的颜色，反应了节点值的大小。\n可以使用 <code>visualDimension</code> 属性来设置，用 <code>data</code> 中那个纬度的值来映射。</p>\n<ul>\n<li><code>&#39;index&#39;</code>：</li>\n</ul>\n<p>将节点的 <code>index</code>（序号）映射到颜色列表中。即同一层级中，第一个节点取颜色列表中第一个颜色，第二个节点取第二个。这样得到的颜色，便于区分相邻节点。</p>\n<ul>\n<li><code>&#39;id&#39;</code>：</li>\n</ul>\n<p>将节点的 <code>id</code>（即 <a href=\"#series-treemap.data.id\">series-treemap.data.id</a>）映射到颜色列表中。<code>id</code> 是用户指定的，这样能够使得，在treemap 通过 setOption 变化数值时，同一 <code>id</code> 映射到同一颜色，保持一致性。参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=treemap-obama&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorMappingBy</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": "'index'"
},
"visibleMin": {
"type": [
"number"
],
"descriptionCN": "<p>如果某个节点的矩形的面积，小于这个数值（单位：px平方），这个节点就不显示。</p>\n<p>如果不加这个限制，很小的节点会影响显示效果。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>visibleMin</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": 10
},
"childrenVisibleMin": {
"type": [
"number"
],
"descriptionCN": "<p>如果某个节点的矩形面积，小于这个数值（单位：px平方），则不显示这个节点的子节点。</p>\n<p>这能够在矩形面积不足够大时候，隐藏节点的细节。当用户用鼠标缩放节点时，如果面积大于此阈值，又会显示子节点。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>childrenVisibleMin</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p><code>label</code> 描述了每个矩形中，文本标签的样式。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>label</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n<p><br></p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示文本标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "['50%', '50%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"ellipsis": {
"type": [
"boolean"
],
"descriptionCN": "<p>当文字超出矩形边界的时候，是否超出部分替换为省略号。</p>\n",
"defaultValue": true
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "'#fff'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
},
"align": {
"type": [
"string"
],
"descriptionCN": "<p>文字水平对齐方式，可选值 <code>&#39;center&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'center'"
},
"baseline": {
"type": [
"string"
],
"descriptionCN": "<p>文字竖直对齐方式，可选值 <code>&#39;middle&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'middle'"
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示文本标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "['50%', '50%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"ellipsis": {
"type": [
"boolean"
],
"descriptionCN": "<p>当文字超出矩形边界的时候，是否超出部分替换为省略号。</p>\n",
"defaultValue": true
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "'#fff'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
},
"align": {
"type": [
"string"
],
"descriptionCN": "<p>文字水平对齐方式，可选值 <code>&#39;center&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'center'"
},
"baseline": {
"type": [
"string"
],
"descriptionCN": "<p>文字竖直对齐方式，可选值 <code>&#39;middle&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'middle'"
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>itemStyle</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n<p><br></p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形的颜色。默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色。</p>\n",
"defaultValue": null
},
"colorAlpha": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的透明度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形边框线宽。为 0 时无边框。</p>\n",
"defaultValue": 0
},
"gapWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形内部子矩形的间隔距离。</p>\n",
"defaultValue": 0
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "'#fff',"
},
"borderColorSaturation": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n<p>注意：</p>\n<p>如果设置此属性，则 <code>borderColor</code> 的设置无效，而是：取当前节点计算出的颜色（比如从父节点遗传而来），在此颜色值上设置 <code>borderColorSaturation</code> 得到最终颜色。这种方式，能够做出『不同区块有不同色调的矩形间隔线』的效果，能够便于区分层级。</p>\n<p><br></p>\n<p><strong>矩形边框/缝隙设置如何避免混淆</strong></p>\n<p>如果统一用一种颜色设置矩形的缝隙，那么当不同层级的矩形同时展示时可能会出现混淆。</p>\n<p>参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/treemap-borderColor&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，注意其中红色的区块中的子矩形其实是更深层级，和其他用白色缝隙区分的矩形不是在一个层级。所以，红色区块中矩形的分割线的颜色，我们在 <code>borderColorSaturation</code> 中设置为『加了饱和度变化的红颜色』，以示区别。</p>\n",
"defaultValue": null
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形的颜色。默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色。</p>\n",
"defaultValue": null
},
"colorAlpha": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的透明度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形边框线宽。为 0 时无边框。</p>\n",
"defaultValue": 0
},
"gapWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形内部子矩形的间隔距离。</p>\n",
"defaultValue": 0
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "'#fff',"
},
"borderColorSaturation": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n<p>注意：</p>\n<p>如果设置此属性，则 <code>borderColor</code> 的设置无效，而是：取当前节点计算出的颜色（比如从父节点遗传而来），在此颜色值上设置 <code>borderColorSaturation</code> 得到最终颜色。这种方式，能够做出『不同区块有不同色调的矩形间隔线』的效果，能够便于区分层级。</p>\n<p><br></p>\n<p><strong>矩形边框/缝隙设置如何避免混淆</strong></p>\n<p>如果统一用一种颜色设置矩形的缝隙，那么当不同层级的矩形同时展示时可能会出现混淆。</p>\n<p>参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/treemap-borderColor&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，注意其中红色的区块中的子矩形其实是更深层级，和其他用白色缝隙区分的矩形不是在一个层级。所以，红色区块中矩形的分割线的颜色，我们在 <code>borderColorSaturation</code> 中设置为『加了饱和度变化的红颜色』，以示区别。</p>\n",
"defaultValue": null
}
}
}
}
}
}
}
},
"visualDimension": {
"type": [
"number"
],
"descriptionCN": "<p><code>treemap</code> 中支持对数据其他维度进行视觉映射。</p>\n<p>首先，treemap的数据格式（参见 <a href=\"#series-treemap.data\">series-treemap.data</a>）中，每个节点的 <code>value</code> 都可以是数组。数组每项是一个『维度』（dimension）。<code>visualDimension</code> 指定了额外的『视觉映射』使用的是数组的哪一项。默认为第 <code>0</code> 项。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>visualDimension</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": 0
},
"color": {
"type": [
"Array"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色 选取列表。默认为空时，选取系统color列表。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>color</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n"
},
"colorAlpha": {
"type": [
"Array"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色透明度 选取范围。数值范围 0 ~ 1。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorAlpha</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色饱和度 选取范围。数值范围 0 ~ 1。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorSaturation</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"colorMappingBy": {
"type": [
"string"
],
"descriptionCN": "<p>表示同一层级节点，在颜色列表中（参见 <code>color</code> 属性）选择时，按照什么来选择。可选值：</p>\n<ul>\n<li><code>&#39;value&#39;</code>：</li>\n</ul>\n<p>将节点的值（即 <a href=\"#series-treemap.data.value\">series-treemap.data.value</a>）映射到颜色列表中。这样得到的颜色，反应了节点值的大小。\n可以使用 <code>visualDimension</code> 属性来设置，用 <code>data</code> 中那个纬度的值来映射。</p>\n<ul>\n<li><code>&#39;index&#39;</code>：</li>\n</ul>\n<p>将节点的 <code>index</code>（序号）映射到颜色列表中。即同一层级中，第一个节点取颜色列表中第一个颜色，第二个节点取第二个。这样得到的颜色，便于区分相邻节点。</p>\n<ul>\n<li><code>&#39;id&#39;</code>：</li>\n</ul>\n<p>将节点的 <code>id</code>（即 <a href=\"#series-treemap.data.id\">series-treemap.data.id</a>）映射到颜色列表中。<code>id</code> 是用户指定的，这样能够使得，在treemap 通过 setOption 变化数值时，同一 <code>id</code> 映射到同一颜色，保持一致性。参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=treemap-obama&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorMappingBy</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": "'index'"
},
"visibleMin": {
"type": [
"number"
],
"descriptionCN": "<p>如果某个节点的矩形的面积，小于这个数值（单位：px平方），这个节点就不显示。</p>\n<p>如果不加这个限制，很小的节点会影响显示效果。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>visibleMin</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": 10
},
"childrenVisibleMin": {
"type": [
"number"
],
"descriptionCN": "<p>如果某个节点的矩形面积，小于这个数值（单位：px平方），则不显示这个节点的子节点。</p>\n<p>这能够在矩形面积不足够大时候，隐藏节点的细节。当用户用鼠标缩放节点时，如果面积大于此阈值，又会显示子节点。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>childrenVisibleMin</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p><code>label</code> 描述了每个矩形中，文本标签的样式。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>label</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n<p><br></p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示文本标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "['50%', '50%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"ellipsis": {
"type": [
"boolean"
],
"descriptionCN": "<p>当文字超出矩形边界的时候，是否超出部分替换为省略号。</p>\n",
"defaultValue": true
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "'#fff'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
},
"align": {
"type": [
"string"
],
"descriptionCN": "<p>文字水平对齐方式，可选值 <code>&#39;center&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'center'"
},
"baseline": {
"type": [
"string"
],
"descriptionCN": "<p>文字竖直对齐方式，可选值 <code>&#39;middle&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'middle'"
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示文本标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "['50%', '50%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"ellipsis": {
"type": [
"boolean"
],
"descriptionCN": "<p>当文字超出矩形边界的时候，是否超出部分替换为省略号。</p>\n",
"defaultValue": true
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "'#fff'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
},
"align": {
"type": [
"string"
],
"descriptionCN": "<p>文字水平对齐方式，可选值 <code>&#39;center&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'center'"
},
"baseline": {
"type": [
"string"
],
"descriptionCN": "<p>文字竖直对齐方式，可选值 <code>&#39;middle&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'middle'"
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>itemStyle</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n<p><br></p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形的颜色。默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色。</p>\n",
"defaultValue": null
},
"colorAlpha": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的透明度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形边框线宽。为 0 时无边框。</p>\n",
"defaultValue": 0
},
"gapWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形内部子矩形的间隔距离。</p>\n",
"defaultValue": 0
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "'#fff',"
},
"borderColorSaturation": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n<p>注意：</p>\n<p>如果设置此属性，则 <code>borderColor</code> 的设置无效，而是：取当前节点计算出的颜色（比如从父节点遗传而来），在此颜色值上设置 <code>borderColorSaturation</code> 得到最终颜色。这种方式，能够做出『不同区块有不同色调的矩形间隔线』的效果，能够便于区分层级。</p>\n<p><br></p>\n<p><strong>矩形边框/缝隙设置如何避免混淆</strong></p>\n<p>如果统一用一种颜色设置矩形的缝隙，那么当不同层级的矩形同时展示时可能会出现混淆。</p>\n<p>参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/treemap-borderColor&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，注意其中红色的区块中的子矩形其实是更深层级，和其他用白色缝隙区分的矩形不是在一个层级。所以，红色区块中矩形的分割线的颜色，我们在 <code>borderColorSaturation</code> 中设置为『加了饱和度变化的红颜色』，以示区别。</p>\n",
"defaultValue": null
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形的颜色。默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色。</p>\n",
"defaultValue": null
},
"colorAlpha": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的透明度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形边框线宽。为 0 时无边框。</p>\n",
"defaultValue": 0
},
"gapWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形内部子矩形的间隔距离。</p>\n",
"defaultValue": 0
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "'#fff',"
},
"borderColorSaturation": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n<p>注意：</p>\n<p>如果设置此属性，则 <code>borderColor</code> 的设置无效，而是：取当前节点计算出的颜色（比如从父节点遗传而来），在此颜色值上设置 <code>borderColorSaturation</code> 得到最终颜色。这种方式，能够做出『不同区块有不同色调的矩形间隔线』的效果，能够便于区分层级。</p>\n<p><br></p>\n<p><strong>矩形边框/缝隙设置如何避免混淆</strong></p>\n<p>如果统一用一种颜色设置矩形的缝隙，那么当不同层级的矩形同时展示时可能会出现混淆。</p>\n<p>参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/treemap-borderColor&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，注意其中红色的区块中的子矩形其实是更深层级，和其他用白色缝隙区分的矩形不是在一个层级。所以，红色区块中矩形的分割线的颜色，我们在 <code>borderColorSaturation</code> 中设置为『加了饱和度变化的红颜色』，以示区别。</p>\n",
"defaultValue": null
}
}
}
}
},
"breadcrumb": {
"type": [
"Object"
],
"descriptionCN": "<p>面包屑，能够显示当前节点的路径。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示面包屑。</p>\n",
"defaultValue": true
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>asdf 组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'center'"
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>asdf 组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>asdf 组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>asdf 组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": 0
},
"height": {
"type": [
"number"
],
"descriptionCN": "<p>面包屑的高度。.asdf <code>series-treemap.breadcrumb</code>撒地方撒地方阿斯顿发斯蒂芬阿萨德f分</p>\n",
"defaultValue": 22
},
"emptyItemWidth": {
"type": [
"number"
],
"descriptionCN": "<p>当面包屑没有内容时候，设个最小宽度。</p>\n",
"defaultValue": 25
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"*"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "rgba(0,0,0,0.7)"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "rgba(255,255,255,0.7)"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>boxplot描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 1
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n",
"defaultValue": 3
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "rgba(150,150,150,1)"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "#fff"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"*"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "rgba(0,0,0,0.7)"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "rgba(255,255,255,0.7)"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>boxplot描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 1
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n",
"defaultValue": 3
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "rgba(150,150,150,1)"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "#fff"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p><a href=\"#series-treemap.data\">series-treemap.data</a> 的数据格式是树状的，例如：</p>\n<pre><code class=\"lang-javascript\">[ // 注意，最外层是一个数组，而非从某个根节点开始。\n    {\n        value: 1212,\n        children: [\n            {\n                value: 2323,    // value字段的值，对应到面积大小。\n                                // 也可以是数组，如 [2323, 43, 55]，则数组第一项对应到面积大小。\n                                // 数组用于进行额外的视觉映射，详情参见 series-treemp.levels。\n                id: &#39;someid-1&#39;, // id 不是必须设置的。\n                                // 但是如果想使用 API 来改变某个节点，需要用 id 来定位。\n                name: &#39;description of this node&#39;, // 显示在矩形中的描述文字。\n                children: [...],\n                label: {        // 此节点特殊的 label 定义（如果需要的话）。\n                    ...         // label的格式参见 series-treemap.label。\n                },\n                itemStyle: {    // 此节点特殊的 itemStyle 定义（如果需要的话）。\n                    ...         // label的格式参见 series-treemap.itemStyle。\n                }\n            },\n            {\n                value: 4545,\n                id: &#39;someid-2&#39;,\n                name: &#39;description of this node&#39;,\n                children: [\n                    {\n                        value: 5656,\n                        id: &#39;someid-3&#39;,\n                        name: &#39;description of this node&#39;,\n                        children: [...]\n                    },\n                    ...\n                ]\n            }\n        ]\n    },\n    {\n        value: [23, 59, 12]\n        // 如果没有children，可以不写\n    },\n    ...\n]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"value": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>每个树节点的值，对应到面积大小。可以是number，也可以是数组，如 <code>[2323, 43, 55]</code>，则数组第一项对应到面积大小。</p>\n"
},
"id": {
"type": [
"string"
],
"descriptionCN": "<p>每个树节点的id。id 不是必须设置的。但是如果想使用 API 来改变某个节点，需要用 id 来定位。</p>\n"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>显示在矩形中的描述文字。</p>\n"
},
"visualDimension": {
"type": [
"number"
],
"descriptionCN": "<p><code>treemap</code> 中支持对数据其他维度进行视觉映射。</p>\n<p>首先，treemap的数据格式（参见 <a href=\"#series-treemap.data\">series-treemap.data</a>）中，每个节点的 <code>value</code> 都可以是数组。数组每项是一个『维度』（dimension）。<code>visualDimension</code> 指定了额外的『视觉映射』使用的是数组的哪一项。默认为第 <code>0</code> 项。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>visualDimension</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": 0
},
"color": {
"type": [
"Array"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色 选取列表。默认为空时，选取系统color列表。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>color</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n"
},
"colorAlpha": {
"type": [
"Array"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色透明度 选取范围。数值范围 0 ~ 1。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorAlpha</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>表示同一层级的节点的 颜色饱和度 选取范围。数值范围 0 ~ 1。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorSaturation</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"colorMappingBy": {
"type": [
"string"
],
"descriptionCN": "<p>表示同一层级节点，在颜色列表中（参见 <code>color</code> 属性）选择时，按照什么来选择。可选值：</p>\n<ul>\n<li><code>&#39;value&#39;</code>：</li>\n</ul>\n<p>将节点的值（即 <a href=\"#series-treemap.data.value\">series-treemap.data.value</a>）映射到颜色列表中。这样得到的颜色，反应了节点值的大小。\n可以使用 <code>visualDimension</code> 属性来设置，用 <code>data</code> 中那个纬度的值来映射。</p>\n<ul>\n<li><code>&#39;index&#39;</code>：</li>\n</ul>\n<p>将节点的 <code>index</code>（序号）映射到颜色列表中。即同一层级中，第一个节点取颜色列表中第一个颜色，第二个节点取第二个。这样得到的颜色，便于区分相邻节点。</p>\n<ul>\n<li><code>&#39;id&#39;</code>：</li>\n</ul>\n<p>将节点的 <code>id</code>（即 <a href=\"#series-treemap.data.id\">series-treemap.data.id</a>）映射到颜色列表中。<code>id</code> 是用户指定的，这样能够使得，在treemap 通过 setOption 变化数值时，同一 <code>id</code> 映射到同一颜色，保持一致性。参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=treemap-obama&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>colorMappingBy</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": "'index'"
},
"visibleMin": {
"type": [
"number"
],
"descriptionCN": "<p>如果某个节点的矩形的面积，小于这个数值（单位：px平方），这个节点就不显示。</p>\n<p>如果不加这个限制，很小的节点会影响显示效果。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>visibleMin</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": 10
},
"childrenVisibleMin": {
"type": [
"number"
],
"descriptionCN": "<p>如果某个节点的矩形面积，小于这个数值（单位：px平方），则不显示这个节点的子节点。</p>\n<p>这能够在矩形面积不足够大时候，隐藏节点的细节。当用户用鼠标缩放节点时，如果面积大于此阈值，又会显示子节点。</p>\n<p>关于视觉设置，详见 <a href=\"#series-treemap.levels\">series-treemap.levels</a>。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>childrenVisibleMin</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n",
"defaultValue": null
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p><code>label</code> 描述了每个矩形中，文本标签的样式。</p>\n<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>label</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n<p><br></p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示文本标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "['50%', '50%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"ellipsis": {
"type": [
"boolean"
],
"descriptionCN": "<p>当文字超出矩形边界的时候，是否超出部分替换为省略号。</p>\n",
"defaultValue": true
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "'#fff'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
},
"align": {
"type": [
"string"
],
"descriptionCN": "<p>文字水平对齐方式，可选值 <code>&#39;center&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'center'"
},
"baseline": {
"type": [
"string"
],
"descriptionCN": "<p>文字竖直对齐方式，可选值 <code>&#39;middle&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'middle'"
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示文本标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "['50%', '50%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"ellipsis": {
"type": [
"boolean"
],
"descriptionCN": "<p>当文字超出矩形边界的时候，是否超出部分替换为省略号。</p>\n",
"defaultValue": true
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "'#fff'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
},
"align": {
"type": [
"string"
],
"descriptionCN": "<p>文字水平对齐方式，可选值 <code>&#39;center&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'center'"
},
"baseline": {
"type": [
"string"
],
"descriptionCN": "<p>文字竖直对齐方式，可选值 <code>&#39;middle&#39;</code>、<code>&#39;right</code>、<code>&#39;left&#39;</code></p>\n",
"defaultValue": "'middle'"
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p><br></p>\n<blockquote>\n<p>注：treemap中 <code>itemStyle</code> 属性可能在多处地方存在：</p>\n<ul>\n<li><p>可以存在于 <a href=\"#series-treemap\">sereis-treemap</a> 根下，表示本系列全局的统一设置。</p>\n</li>\n<li><p>可以存在于 <a href=\"#series-treemap.levels\">series-treemap.levels</a> 的每个数组元素中，表示树每个层级的统一设置。</p>\n</li>\n<li><p>存在于 <a href=\"#series-treemap.data\">series-treemap.data</a> 的每个节点中，表示每个节点的特定设置。</p>\n</li>\n</ul>\n</blockquote>\n<p><br></p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形的颜色。默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色。</p>\n",
"defaultValue": null
},
"colorAlpha": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的透明度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形边框线宽。为 0 时无边框。</p>\n",
"defaultValue": 0
},
"gapWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形内部子矩形的间隔距离。</p>\n",
"defaultValue": 0
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "'#fff',"
},
"borderColorSaturation": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n<p>注意：</p>\n<p>如果设置此属性，则 <code>borderColor</code> 的设置无效，而是：取当前节点计算出的颜色（比如从父节点遗传而来），在此颜色值上设置 <code>borderColorSaturation</code> 得到最终颜色。这种方式，能够做出『不同区块有不同色调的矩形间隔线』的效果，能够便于区分层级。</p>\n<p><br></p>\n<p><strong>矩形边框/缝隙设置如何避免混淆</strong></p>\n<p>如果统一用一种颜色设置矩形的缝隙，那么当不同层级的矩形同时展示时可能会出现混淆。</p>\n<p>参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/treemap-borderColor&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，注意其中红色的区块中的子矩形其实是更深层级，和其他用白色缝隙区分的矩形不是在一个层级。所以，红色区块中矩形的分割线的颜色，我们在 <code>borderColorSaturation</code> 中设置为『加了饱和度变化的红颜色』，以示区别。</p>\n",
"defaultValue": null
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形的颜色。默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色。</p>\n",
"defaultValue": null
},
"colorAlpha": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的透明度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"colorSaturation": {
"type": [
"number"
],
"descriptionCN": "<p>矩形颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n",
"defaultValue": null
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形边框线宽。为 0 时无边框。</p>\n",
"defaultValue": 0
},
"gapWidth": {
"type": [
"number"
],
"descriptionCN": "<p>矩形内部子矩形的间隔距离。</p>\n",
"defaultValue": 0
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "'#fff',"
},
"borderColorSaturation": {
"type": [
"Color"
],
"descriptionCN": "<p>矩形边框的颜色的饱和度。取值范围是 0 ~ 1 之间的浮点数。</p>\n<p>注意：</p>\n<p>如果设置此属性，则 <code>borderColor</code> 的设置无效，而是：取当前节点计算出的颜色（比如从父节点遗传而来），在此颜色值上设置 <code>borderColorSaturation</code> 得到最终颜色。这种方式，能够做出『不同区块有不同色调的矩形间隔线』的效果，能够便于区分层级。</p>\n<p><br></p>\n<p><strong>矩形边框/缝隙设置如何避免混淆</strong></p>\n<p>如果统一用一种颜色设置矩形的缝隙，那么当不同层级的矩形同时展示时可能会出现混淆。</p>\n<p>参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/treemap-borderColor&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>，注意其中红色的区块中的子矩形其实是更深层级，和其他用白色缝隙区分的矩形不是在一个层级。所以，红色区块中矩形的分割线的颜色，我们在 <code>borderColorSaturation</code> 中设置为『加了饱和度变化的红颜色』，以示区别。</p>\n",
"defaultValue": null
}
}
}
}
},
"link": {
"type": [
"string"
],
"descriptionCN": "<p>点击此节点可跳转的超链接。须 <a href=\"#series-treemap.nodeClick\">series-treemap.nodeClick</a> 值为 <code>&#39;link&#39;</code> 时才生效。</p>\n<p>参见 <a href=\"#series-treemap.data.target\">series-treemap.data.target</a>。</p>\n"
},
"target": {
"type": [
"string"
],
"descriptionCN": "<p>意义同 <code>html</code> <code>&lt;a&gt;</code> 标签中的 <code>target</code>，参见 <a href=\"#series-treemap.data.link\">series-treemap.data.link</a>。可选值为：<code>&#39;blank&#39;</code> 或 <code>&#39;self&#39;</code>。</p>\n",
"defaultValue": "'blank'"
},
"children": {
"type": [
"Array"
],
"descriptionCN": "<p>子节点，递归定义，格式同 <a href=\"#series-treemap.data\">series-treemap.data</a>。</p>\n"
}
}
}
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1500
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "quinticInOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><a href=\"https://en.wikipedia.org/wiki/Box_plot\" target=\"_blank\">Boxplot</a> 中文可以称为『箱形图』、『盒须图』、『盒式图』、『盒状图』、『箱线图』。使用者知道概念，不需介绍。</p>\n<p><strong>示例如下：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=boxplot-light-velocity&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n<p><br>\n也支持多个 <code>series</code> 在同一个坐标系中，参见 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=boxplot-multi&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a>。</p>\n<p><br>\n<br></p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'boxplot'"
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-cartesian2d.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-cartesian2d.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n",
"defaultValue": "'cartesian2d'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"hoverAnimation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启 hover 在 box 上的动画效果。</p>\n",
"defaultValue": true
},
"layout": {
"type": [
"string"
],
"descriptionCN": "<p>布局方式，可选值：</p>\n<ul>\n<li><p><code>&#39;horizontal&#39;</code>：水平排布各个 box。</p>\n</li>\n<li><p><code>&#39;vertical&#39;</code>：竖直排布各个 box。</p>\n</li>\n</ul>\n<p>默认值根据当前坐标系状况决定：如果 <code>category</code> 轴为横轴，则水平排布；否则竖直排布；如果没有 <code>category</code> 轴则水平排布。</p>\n",
"defaultValue": null
},
"boxWidth": {
"type": [
"Array"
],
"descriptionCN": "<p>box 的宽度的上下限。数组的意思是：<code>[min, max]</code>。</p>\n<p>可以是绝对数值，如 <code>[7, 50]</code>，也可以是百分比，如 <code>[&#39;40%&#39;, &#39;90%&#39;]</code>。百分比的意思是，最大可能宽度（bandWidth）的百分之多少。</p>\n",
"defaultValue": "[7, 50]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>boxplot 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#fff"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>boxplot描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 1
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#fff"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>boxplot描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 2
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n",
"defaultValue": 5
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "rgba(0,0,0,0.4)"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 2
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 2
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>数据格式是如下的二维数组。</p>\n<pre><code class=\"lang-javascript\">[\n    [655, 850, 940, 980, 1175],\n    [672.5, 800, 845, 885, 1012.5],\n    [780, 840, 855, 880, 940],\n    [621.25, 767.5, 815, 865, 1011.25],\n    { // 数据项也可以是 Object，从而里面能含有对此数据项的特殊设置。\n        value: [713.75, 807.5, 810, 870, 963.75],\n        itemStyle: {...}\n    },\n    ...\n]\n</code></pre>\n<p>二维数组的每一数组项（上例中的每行）是渲染一个box，它含有五个量值，依次是：</p>\n<pre><code class=\"lang-javascript\">[min,  Q1,  median (or Q2),  Q3,  max]\n</code></pre>\n<p><strong>数据的处理</strong></p>\n<p>ECharts 并不内置对原始数据的处理，输入给 <code>boxplot</code> 的数据须是如上五个统计结果量值。</p>\n<p>但是 ECharts 也额外提供了简单的 <a href=\"https://github.com/ecomfe/echarts/tree/dev-3.0.0/extension/dataTool\" target=\"_blank\">原始数据处理函数</a>，如这个 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=boxplot-light-velocity&amp;edit=1&amp;reset=1\" target=\"_blank\">例子</a> 使用了<code>echarts.dataTool.prepareBoxplotData</code> 来进行简单的数据统计。</p>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"Array"
],
"descriptionCN": "<p>数据值。</p>\n<pre><code class=\"lang-javascript\">[min,  Q1,  median (or Q2),  Q3,  max]\n</code></pre>\n"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>boxplot 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": ""
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#fff"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>boxplot图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>boxplot描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 2
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n",
"defaultValue": 5
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "rgba(0,0,0,0.4)"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 2
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 2
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": ""
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-scatter.markPoint.data.x\">x</a>, <a href=\"#series-scatter.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-scatter.markPoint.data.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;某个坐标&#39;,\n    coord: [10, 20]\n}, {\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-scatter.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-scatter.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-scatter.markLine.data.0.x\">x</a>, <a href=\"#series-scatter.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-scatter.markLine.data.0.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<pre><code>data: [\n    [{\n        name: &#39;两个坐标之间的标线&#39;,\n        coord: [10, 20]\n    }, {\n        coord: [20, 30]\n    }],\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 800
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "elasticOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><a href=\"https://en.wikipedia.org/wiki/Candlestick_chart\" target=\"_blank\">Candlestick</a> 即我们常说的 <code>K线图</code>。</p>\n<p>在 ECharts3 中，同时支持 <code>&#39;candlestick&#39;</code> 和 <code>&#39;k&#39;</code>这两种 <code>&#39;series.type&#39;</code>（<code>&#39;k&#39;</code> 会被自动转为 <code>&#39;candlestick&#39;</code>）。</p>\n<p><strong>示例如下：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=candlestick-sh&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n\n<p><br>\n<strong>关于『涨』『跌』的颜色：</strong></p>\n<p>不同国家或地区对于 K线图 的颜色定义不一样，可能是『红涨绿跌』或『红涨蓝跌』（如大陆、台湾、日本、韩国等），可能是『绿涨红跌』（如西方国家、香港、新加坡等）。K线图也不一定要用红蓝、红绿来表示涨跌，也可以是『有色/无色』等表示方法。</p>\n<p>默认配置项，采用的是『红涨蓝跌』。如果想更改这个颜色配置，在这些配置项中更改即可：</p>\n<ul>\n<li><a href=\"#series-candlestick.itemStyle.normal.color\">series-candlestick.itemStyle.normal.color</a>：阳线填充色（即『涨』）</li>\n<li><a href=\"#series-candlestick.itemStyle.normal.color0\">series-candlestick.itemStyle.normal.color0</a>：阴线填充色（即『跌』）</li>\n<li><a href=\"#series-candlestick.itemStyle.normal.borderColor\">series-candlestick.itemStyle.normal.borderColor</a>：阳线边框色（即『涨』）</li>\n<li><a href=\"series-candlestick.itemStyle.normal.borderColor0\" target=\"_blank\">series-candlestick.itemStyle.normal.borderColor0</a>：阴线边框色（即『跌』）</li>\n</ul>\n<p><br>\n<br></p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'candlestick'"
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-cartesian2d.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-cartesian2d.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n",
"defaultValue": "'cartesian2d'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"hoverAnimation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启 hover 在 box 上的动画效果。</p>\n",
"defaultValue": true
},
"layout": {
"type": [
"string"
],
"descriptionCN": "<p>布局方式，可选值：</p>\n<ul>\n<li><p><code>&#39;horizontal&#39;</code>：水平排布各个 box。</p>\n</li>\n<li><p><code>&#39;vertical&#39;</code>：竖直排布各个 box。</p>\n</li>\n</ul>\n<p>默认值根据当前坐标系状况决定：如果 <code>category</code> 轴为横轴，则水平排布；否则竖直排布；如果没有 <code>category</code> 轴则水平排布。</p>\n",
"defaultValue": null
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>candlestick 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阳线</code> 图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#c23531"
},
"color0": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阴线</code> 图形的颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#314656"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阳线</code> 图形的描边颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#c23531"
},
"borderColor0": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阴线</code> 图形的描边颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#314656"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>candlestick 描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 1
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阳线</code> 图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#c23531"
},
"color0": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阴线</code> 图形的颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#314656"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阳线</code> 图形的描边颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#c23531"
},
"borderColor0": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阴线</code> 图形的描边颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#314656"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>candlestick 描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 2
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>数据格式是如下的二维数组。</p>\n<pre><code class=\"lang-javascript\">[\n    [2320.26, 2320.26, 2287.3,  2362.94],\n    [2300,    2291.3,  2288.26, 2308.38],\n    { // 数据项也可以是 Object，从而里面能含有对此数据项的特殊设置。\n        value: [2300,    2291.3,  2288.26, 2308.38],\n        itemStyle: {...}\n    },\n    ...\n]\n</code></pre>\n<p>二维数组的每一数组项（上例中的每行）是渲染一个box，它含有四个量值，依次是：</p>\n<pre><code class=\"lang-javascript\">[open, close, lowest, highest] （即：[开盘值, 收盘值, 最低值, 最高值]）\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"Array"
],
"descriptionCN": "<p>数据项值。</p>\n<pre><code class=\"lang-javascript\">[open, close, lowest, highest] （即：[开盘值, 收盘值, 最低值, 最高值]）\n</code></pre>\n"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>candlestick 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": ""
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阳线</code> 图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#c23531"
},
"color0": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阴线</code> 图形的颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#314656"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阳线</code> 图形的描边颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#c23531"
},
"borderColor0": {
"type": [
"Color"
],
"descriptionCN": "<p><code>阴线</code> 图形的描边颜色。支持的格式同 <code>color</code>。</p>\n",
"defaultValue": "#314656"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>candlestick 描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 2
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": ""
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-scatter.markPoint.data.x\">x</a>, <a href=\"#series-scatter.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-scatter.markPoint.data.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;某个坐标&#39;,\n    coord: [10, 20]\n}, {\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-scatter.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-scatter.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li><p>通过 <a href=\"#series-scatter.markLine.data.0.x\">x</a>, <a href=\"#series-scatter.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</p>\n</li>\n<li><p>用 <a href=\"#series-scatter.markLine.data.0.coord\">coord</a> 属性指定数据在相应坐标系上的坐标位置。</p>\n</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<pre><code>data: [\n    [{\n        name: &#39;两个坐标之间的标线&#39;,\n        coord: [10, 20]\n    }, {\n        coord: [20, 30]\n    }],\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"valueIndex": {
"type": [
"number"
],
"descriptionCN": "<p>在使用 <a href=\"#series-.markPoint.data.type\">type</a> 时有效，用于指定在哪个维度上指定最大值最小值，可以是 <code>0</code>（xAxis, radiusAxis），<code>1</code>（yAxis, angleAxis），默认使用第一个数值轴所在的维度。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点或终点的坐标。坐标格式视系列的坐标系而定，可以是<a href=\"#grid\">直角坐标系</a>上的 <code>x</code>, <code>y</code>，也可以是<a href=\"#polar\">极坐标系</a>上的 <code>radius</code>, <code>angle</code>。</p>\n<p><strong>注：</strong>在 ECharts 2.x 中会使用 <code>xAxis</code>，<code>yAxis</code> 标注直角坐标系上的位置，ECharts 3 中不再推荐使用。</p>\n"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "linear"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>热力图</strong></p>\n<p>热力图主要通过颜色去表现数值的大小，必须要配合 <a href=\"#visualMap\">visualMap</a> 组件使用。</p>\n<p>可以应用在<a href=\"#grid\">直角坐标系</a>以及<a href=\"#geo\">地理坐标系</a>上，这两个坐标系上的表现形式相差很大，直角坐标系上必须要使用两个类目轴。</p>\n<p>下面分别是直角坐标系和地理坐标系上应用的例子：</p>\n<p><strong>直角坐标系：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=heatmap-cartesian&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n<p><strong>地理坐标系：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=heatmap-map&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'heatmap'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-heatmap.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-heatmap.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n<ul>\n<li><p><code>&#39;geo&#39;</code></p>\n<p>  使用地理坐标系，通过 <a href=\"#series-heatmap.geoIndex\">geoIndex</a> 指定相应的地理坐标系组件</p>\n</li>\n</ul>\n",
"defaultValue": "'cartesian2d'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"geoIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#geo\">地理坐标系</a>的 index，在单个图表实例中存在多个地理坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"blurSize": {
"type": [
"number"
],
"descriptionCN": "<p>在地理坐标系(<a href=\"#series-heatmap.coordinateSystem\">coordinateSystem</a>: &#39;geo&#39;)上有效。</p>\n",
"defaultValue": 20
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项通常为具体的数据项。数据格式有下面几种情况</p>\n<ol>\n<li><p>在坐标系一个轴为类目轴的时候，数据可以是一维的数值，数组长度等于所使用类目轴文本标签数组 <a href=\"#xAxis.data\">xAxis.data</a> 的长度，并且他们间是一一对应的，如下：</p>\n<pre><code class=\"lang-js\"> [12, 34, 56, 10, 23]\n</code></pre>\n</li>\n<li><p>在坐标系两个轴都为数值轴的时候，每个数据项需要是一个数组，并且至少有两个值表示直角坐标系上的 <code>x</code>， <code>y</code> 或者极坐标系上的 <code>radius</code>，<code>angle</code>，如下：</p>\n<pre><code class=\"lang-js\"> [[3.4, 4.5, 15], [4.2, 2.3, 20], [10.8, 9.5, 30], [7.2, 8.8, 18]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n</li>\n<li><p>在坐标系两个轴都为类目轴的时候，每个数据项也需要是一个数组，单个数据项至少要有两个值表示在两个轴上类目的索引或者类目的名称，如下：</p>\n<pre><code class=\"lang-js\"> [[0, 0, 2], [&#39;星期一&#39;, 2, 1], [2, 1, 2], [3, 3, 5]]\n</code></pre>\n<p> 每一项数值数组从第三个值开始可以表示数据的其它维度，配合 <a href=\"#visualMap\">visualMap</a> 组件可以将指定的一个或多个维度映射到颜色，大小等多个图形属性上。</p>\n<p> 双类目轴的示例可以参考 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=scatter-punchCard\" target=\"_blank\">Github Punchcard</a> 示例。</p>\n</li>\n</ol>\n<p>当需要对个别数据标志进行个性化定义时，数组项可用对象，其中的<code>value</code> 像表示具体的数值，如：</p>\n<pre><code class=\"lang-js\">[\n    12, 34,\n    {\n        value : 56,\n        //自定义标签样式，仅对该数据项有效\n        label: {},\n        //自定义特殊 itemStyle，仅对该数据项有效\n        itemStyle:{}\n    },\n    10, 23\n]\n</code></pre>\n<p><strong>Tip: </strong>当某类目对应数据不存在时（ps：&#39;不存在&#39; 不代表值为 0），可用&#39;-&#39;表示，无数据在折线图中表现为该点是断开的，在其它图中表示为图形不存在。</p>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"Array"
],
"descriptionCN": "<p>数据项值。</p>\n"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>在直角坐标系(<a href=\"#series-heatmap.coordinateSystem\">coordinateSystem</a>: &#39;cartesian2d&#39;)上有效。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "inside"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>单个数据点的样式设置，在直角坐标系(<a href=\"#series-heatmap.coordinateSystem\">coordinateSystem</a>: &#39;cartesian2d&#39;)上有效。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>地图。</strong></p>\n<p>地图主要用于地理区域数据的可视化，配合 <a href=\"#visualMap\">visualMap</a> 组件用于展示不同区域的人口分布密度等数据。</p>\n<p>多个<a href=\"#series-map.map\">地图类型</a>相同的系列会在同一地图上显示，这时候使用第一个系列的配置项作为地图绘制的配置。</p>\n<p><strong>Tip: </strong>在 ECharts 3 中不再建议在地图类型的图表使用 <code>markLine</code> 和 <code>markPoint</code>。如果要实现点数据或者线数据的可视化，可以使用在<a href=\"#geo\">地理坐标系组件</a>上的<a href=\"#series-scatter\">散点图</a>和<a href=\"#series-lines\">线图</a>。</p>\n<p><strong>示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/map-example&reset=1&edit=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'map'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"map": {
"type": [
"string"
],
"descriptionCN": "<p>地图类型。</p>\n<p>ECharts 3 中因为地图精度的提高，不再内置地图数据增大代码体积，你可以在<a href=\"http://ecomfe.github.io/echarts-builder-web/map3.html\" target=\"_blank\">地图下载界面</a>下载到需要的地图文件引入并注册到 ECharts 中。</p>\n<p>ECharts 中提供了两种格式的地图数据，一种是可以直接 script 标签引入的 js 文件，引入后会自动注册地图名字和数据。还有一种是 JSON 文件，需要通过 jquery 等工具异步加载后手动注册。</p>\n<p>下面是两种类型的使用示例：</p>\n<p><strong> JavaScript 引入示例 </strong></p>\n<pre><code class=\"lang-html\">&lt;script src=&quot;echarts.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;map/js/china.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\nvar chart = echarts.init(document.getElmentById(&#39;main&#39;));\nchart.setOption({\n    series: [{\n        type: &#39;map&#39;,\n        map: &#39;china&#39;\n    }]\n});\n&lt;/script&gt;\n</code></pre>\n<p><strong> JSON 引入示例 </strong></p>\n<pre><code class=\"lang-js\">$.get(&#39;map/json/china.json&#39;, function (chinaJson) {\n    echarts.registerMap(&#39;china&#39;, chinaJson);\n    var chart = echarts.init(document.getElmentById(&#39;main&#39;));\n    chart.setOption({\n        series: [{\n            type: &#39;map&#39;,\n            map: &#39;china&#39;\n        }]\n    });\n});\n</code></pre>\n<p>ECharts 使用 <a href=\"http://geojson.org/\" target=\"_blank\">geoJSON</a> 格式的数据作为地图的轮廓，除了上述数据，你也可以通过其它手段获取地图的 <a href=\"http://geojson.org/\" target=\"_blank\">geoJSON</a> 数据注册到 ECharts 中。参见示例 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=map-usa\" target=\"_blank\">USA Population Estimates</a></p>\n",
"defaultValue": "''"
},
"roam": {
"type": [
"boolean",
"string"
],
"descriptionCN": "<p>是否开启鼠标缩放和平移漫游。默认不开启。如果只想要开启缩放或者平移，可以设置成 <code>&#39;scale&#39;</code> 或者 <code>&#39;move&#39;</code>。设置成 <code>true</code> 为都开启</p>\n",
"defaultValue": false
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否在普通状态下显示标签。</p>\n",
"defaultValue": false
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>普通状态下的标签文本样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否在高亮状态下显示标签。</p>\n",
"defaultValue": false
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>高亮状态下的标签文本样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>地图区域的多边形 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "<p>普通状态下的多边形样式。</p>\n",
"properties": {
"areaColor": {
"type": [
"Color"
],
"descriptionCN": "<p>地图区域的颜色。</p>\n",
"defaultValue": "'#eee'"
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "<p>高亮状态下的多边形样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 2
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
}
}
},
"mapValueCalculation": {
"type": [
"string"
],
"descriptionCN": "<p>多个拥有相同<a href=\"#series-map.map\">地图类型</a>的系列会使用同一个地图展现，如果多个系列都在同一个区域有值，ECharts 会对这些值统计得到一个数据。这个配置项就是用于配置统计的方式，目前有：</p>\n<ul>\n<li><code>&#39;sum&#39;</code>   取和。</li>\n<li><code>&#39;average&#39;</code> 取平均值。</li>\n<li><code>&#39;max&#39;</code>   取最大值。</li>\n<li><code>&#39;min&#39;</code>   取最小值。</li>\n</ul>\n",
"defaultValue": "'sum'"
},
"selectedMode": {
"type": [
"boolean",
"string"
],
"descriptionCN": "<p>选中模式，表示是否支持多个选中，默认关闭，支持布尔值和字符串，字符串取值可选 <code>&#39;single&#39;</code>，<code>&#39;multiple&#39;</code>。</p>\n",
"defaultValue": false
},
"showLegendSymbol": {
"type": [
"boolean"
],
"descriptionCN": "<p>在图例相应区域显示图例的颜色标识（系列标识的小圆点），存在 <a href=\"#legend\">legend</a> 组件时生效。</p>\n"
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>地图系列中的数据内容数组。数组项可以为单个数值，如：</p>\n<pre><code class=\"lang-js\">[12, 34, 56, 10, 23]\n</code></pre>\n<p>如果需要在数据中加入其它维度给 <a href=\"#visualMap\">visualMap</a> 组件用来映射到颜色等其它图形属性。每个数据项也可以是数组，如：</p>\n<pre><code class=\"lang-js\">[[12, 14], [34, 50], [56, 30], [10, 15], [23, 10]]\n</code></pre>\n<p>这时候可以将每项数组中的第二个值指定给 <a href=\"#visualMap\">visualMap</a> 组件。</p>\n<p>更多时候我们需要指定每个数据项的名称，这时候需要每个项为一个对象：</p>\n<pre><code class=\"lang-js\">[{\n    // 数据项的名称\n    name: &#39;数据1&#39;,\n    // 数据项值8\n    value: 10\n}, {\n    name: &#39;数据2&#39;,\n    value: 20\n}]\n</code></pre>\n<p>需要对个别内容指定进行个性化定义时：</p>\n<pre><code class=\"lang-js\">[{\n    name: &#39;数据1&#39;,\n    value: 10\n}, {\n    // 数据项名称\n    name: &#39;数据2&#39;,\n    value : 56,\n    //自定义特殊 tooltip，仅对该数据项有效\n    tooltip:{},\n    //自定义特殊itemStyle，仅对该item有效\n    itemStyle:{}\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据所对应的地图区域的名称，例如 <code>&#39;广东&#39;</code>，<code>&#39;浙江&#39;</code>。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>该区域的数据值。</p>\n"
}
}
}
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p>平行坐标系的系列。</p>\n<p><strong>平行坐标系介绍</strong></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Parallel_coordinates\" target=\"_blank\">平行坐标系（Parallel Coordinates）</a> 是一种常用的可视化高维数据的图表。</p>\n<p>例如 <a href=\"#series-parallel.data\">series-parallel.data</a> 中有如下数据：</p>\n<pre><code class=\"lang-javascript\">[\n    [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n    [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n    [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n    [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n    { // 数据项也可以是 Object，从而里面能含有对线条的特殊设置。\n        value: [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;]\n        lineStyle: {...},\n    }\n    ...\n]\n</code></pre>\n<p>数据中，每一行是一个『数据项』，每一列属于一个『维度』。（例如上面数据每一列的含义分别是：『日期』,『AQI指数』, 『PM2.5』, 『PM10』, 『一氧化碳值』, 『二氧化氮值』, 『二氧化硫值』）。</p>\n<p>平行坐标系适于对这种多维数据进行可视化分析。每一个维度（每一列）对应一个坐标轴，每一个『数据项』是一条线，贯穿多个坐标轴。在坐标轴上，可以进行数据选取等操作。如下：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/parallel-all&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n\n\n<p><strong>配置方式概要</strong></p>\n<p>『平行坐标系』的 <code>option</code> 基本配置如下例：</p>\n<pre><code class=\"lang-javascript\">option = {\n    parallelAxis: [                     // 这是一个个『坐标轴』的定义\n        {dim: 0, name: schema[0].text}, // 每个『坐标轴』有个 &#39;dim&#39; 属性，表示坐标轴的维度号。\n        {dim: 1, name: schema[1].text},\n        {dim: 2, name: schema[2].text},\n        {dim: 3, name: schema[3].text},\n        {dim: 4, name: schema[4].text},\n        {dim: 5, name: schema[5].text},\n        {dim: 6, name: schema[6].text},\n        {dim: 7, name: schema[7].text,\n            type: &#39;category&#39;,           // 坐标轴也可以支持类别型数据\n            data: [&#39;优&#39;, &#39;良&#39;, &#39;轻度污染&#39;, &#39;中度污染&#39;, &#39;重度污染&#39;, &#39;严重污染&#39;]\n        }\n    ],\n    parallel: {                         // 这是『坐标系』的定义\n        left: &#39;5%&#39;,                     // 平行坐标系的位置设置\n        right: &#39;13%&#39;,\n        bottom: &#39;10%&#39;,\n        top: &#39;20%&#39;,\n        parallelAxisdefaultValue: {          // 『坐标轴』的公有属性可以配置在这里避免重复书写\n            type: &#39;value&#39;,\n            nameLocation: &#39;end&#39;,\n            nameGap: 20\n        }\n    },\n    series: [                           // 这里三个系列共用一个平行坐标系\n        {\n            name: &#39;北京&#39;,\n            type: &#39;parallel&#39;,           // 这个系列类型是 &#39;parallel&#39;\n            data: [\n                [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n                [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n                ...\n            ]\n        },\n        {\n            name: &#39;上海&#39;,\n            type: &#39;parallel&#39;,\n            data: [\n                [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n                [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n                ...\n            ]\n        },\n        {\n            name: &#39;广州&#39;,\n            type: &#39;parallel&#39;,\n            data: [\n                [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n                [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;],\n                ...\n            ]\n        }\n    ]\n};\n</code></pre>\n<p>需要涉及到三个组件：<a href=\"#parallel\">parallel</a>、<a href=\"#parallelAxis\">parallelAxis</a>、<a href=\"#series-parallel\">series-parallel</a></p>\n<ul>\n<li><p><a href=\"#parallel\">parallel</a></p>\n<p>  这个配置项是平行坐标系的『坐标系』本身。一个系列（<code>series</code>）或多个系列（如上图中的『北京』、『上海』、『广州』分别各是一个系列）可以共用这个『坐标系』。</p>\n<p>  和其他坐标系一样，坐标系也可以创建多个。</p>\n<p>  位置设置，也是放在这里进行。</p>\n</li>\n<li><p><a href=\"#parallelAxis\">parallelAxis</a></p>\n<p>  这个是『坐标系』中的坐标轴的配置。自然，需要有多个坐标轴。</p>\n<p>  其中有 <a href=\"#parallelAxis.parallelIndex\">parallelAxis.parallelIndex</a> 属性，指定这个『坐标轴』在哪个『坐标系』中。默认使用第一个『坐标系』。</p>\n</li>\n<li><p><a href=\"#series-parallel\">series-parallel</a></p>\n<p>  这个是『系列』的定义。系列被画到『坐标系』上。</p>\n<p>  其中有 <a href=\"#series-parallel.parallelIndex\">series-parallel.parallelIndex</a> 属性，指定使用哪个『坐标系』。默认使用第一个『坐标系』。</p>\n</li>\n</ul>\n<p><strong>配置注意和最佳实践</strong></p>\n<p>配置多个 <a href=\"#parallelAxis\">parallelAxis</a> 时，有些值一样的属性，如果书写多遍则比较繁琐，那么可以放置在 <a href=\"#parallel.parallelAxisdefaultValue\">parallel.parallelAxisdefaultValue</a> 里。在坐标轴初始化前，<code>parallelAxisdefaultValue</code> 里的配置项，会分别融合进 <a href=\"#parallelAxis\">parallelAxis</a>，形成最终的坐标轴的配置。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'parallel'"
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;parallel&#39;</code></p>\n<p>  使用平行坐标系，通过 <a href=\"#series-parallel.parallelIndex\">parallelIndex</a> 指定相应的平行坐标系组件</p>\n</li>\n</ul>\n",
"defaultValue": "'parallel'"
},
"parallelIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#parallel\">平行坐标系</a>的 index，在单个图表实例中存在多个平行坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>线条样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 2
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n",
"defaultValue": 0.45
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 2
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n",
"defaultValue": 0.45
}
}
}
}
},
"inactiveOpacity": {
"type": [
"number"
],
"descriptionCN": "<p>框选时，未被选中的条线会设置成这个『透明度』（从而可以达到变暗的效果）。</p>\n",
"defaultValue": 0.05
},
"activeOpacity": {
"type": [
"number"
],
"descriptionCN": "<p>框选时，选中的条线会设置成这个『透明度』（从而可以达到高亮的效果）。</p>\n",
"defaultValue": 1
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>例如 <a href=\"#series-parallel.data\">series-parallel.data</a> 中有如下数据：</p>\n<pre><code class=\"lang-javascript\">[\n    [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n    [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n    [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n    [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n    { // 数据项也可以是 Object，从而里面能含有对线条的特殊设置。\n        value: [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;]\n        lineStyle: {...},\n    }\n    ...\n]\n</code></pre>\n<p>数据中，每一行是一个『数据项』，每一列属于一个『维度』。（例如上面数据每一列的含义分别是：『日期』,『AQI指数』, 『PM2.5』, 『PM10』, 『一氧化碳值』, 『二氧化氮值』, 『二氧化硫值』）。</p>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"Array"
],
"descriptionCN": "<p>数据项值。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>线条样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": ""
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 2
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n",
"defaultValue": 0.45
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": ""
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "linear"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>线图</strong></p>\n<p>用于带有起点和终点信息的线数据的绘制，主要用于地图上的航线，路线的可视化。</p>\n<p>ECharts 2.x 里会用地图上的 <code>markLine</code> 去绘制迁徙效果，在 ECharts 3 里建议使用单独的 <code>lines</code> 类型图表。</p>\n<p><strong>迁徙示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=geo-lines&edit=1&reset=1\" width=\"700\" height=\"500\" ></iframe>\n\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'lines'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"coordinateSystem": {
"type": [
"string"
],
"descriptionCN": "<p>该系列使用的坐标系，可选：</p>\n<ul>\n<li><p><code>&#39;cartesian2d&#39;</code></p>\n<p>  使用二维的直角坐标系（也称笛卡尔坐标系），通过 <a href=\"#series-lines.xAxisIndex\">xAxisIndex</a>, <a href=\"#series-lines.yAxisIndex\">yAxisIndex</a>指定相应的坐标轴组件。</p>\n</li>\n</ul>\n<ul>\n<li><p><code>&#39;geo&#39;</code></p>\n<p>  使用地理坐标系，通过 <a href=\"#series-lines.geoIndex\">geoIndex</a> 指定相应的地理坐标系组件</p>\n</li>\n</ul>\n",
"defaultValue": "'geo'"
},
"xAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#xAxis\">x 轴</a>的 index，在单个图表实例中存在多个 x 轴的时候有用。</p>\n",
"defaultValue": 0
},
"yAxisIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的 <a href=\"#yAxis\">y 轴</a>的 index，在单个图表实例中存在多个 y轴的时候有用。</p>\n",
"defaultValue": 0
},
"geoIndex": {
"type": [
"number"
],
"descriptionCN": "<p>使用的<a href=\"#geo\">地理坐标系</a>的 index，在单个图表实例中存在多个地理坐标系的时候有用。</p>\n",
"defaultValue": 0
},
"effect": {
"type": [
"Object"
],
"descriptionCN": "<p>线特效的配置。</p>\n<p><strong>注意：</strong> 所有带有尾迹特效的图表需要单独放在一个层，也就是需要单独设置 <a href=\"#series-lines.zlevel\">zlevel</a>，同时建议关闭该层的动画（<a href=\"#series-lines.animation\">animation</a>: false）。不然位于同个层的其它系列的图形，和动画的<a href=\"#series-lines.label\">标签</a>也会产生不必要的残影。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示特效。</p>\n",
"defaultValue": false
},
"period": {
"type": [
"number"
],
"descriptionCN": "<p>特效动画的时间，单位为 s。</p>\n",
"defaultValue": 4
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>特效图形的标记。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n<p>上面示例中就是使用自定义 path 的 symbol 表现飞机的图形。</p>\n<p><strong>Tip:</strong> symbol 的角度会随着轨迹的切线变化，如果使用自定义 path 的 symbol，需要保证 path 图形的朝向是朝上的，这样在 symbol 沿着轨迹运动的时候可以保证图形始终朝着运动的方向。</p>\n",
"defaultValue": "'circle'"
},
"symbolSize": {
"type": [
"Array",
"number"
],
"descriptionCN": "<p>特效标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n",
"defaultValue": 3
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>特效标记的颜色，默认取 <a href=\"#series-lines.lineStyle.normal.color\">lineStyle.normal.color</a>。</p>\n"
},
"trailLength": {
"type": [
"number"
],
"descriptionCN": "<p>特效尾迹的长度。取从 0 到 1 的值，数值越大尾迹越长。</p>\n",
"defaultValue": 0.2
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。 默认从<a href=\"#color\">option.color 调色盘</a> 获取颜色</p>\n<p>支持使用回调函数。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(params: Object) =&gt; Color\n</code></pre>\n<p>传入的是数据项 <code>seriesIndex</code>, <code>dataIndex</code>, <code>data</code>, <code>value</code> 等各个参数。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "'自适应'"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n",
"defaultValue": 0.5
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标签相关配置。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-lines.markPoint.data.x\">x</a>, <a href=\"#series-lines.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-lines.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-lines.markLine.data.0.x\">x</a>, <a href=\"#series-lines.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<pre><code>data: [\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>线数据集。</p>\n<p>每个数据项是一个数组，数组第一项是起点位置，第二项是终点位置，通过 <code>coord</code> 属性指定在相应的坐标系上的位置。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [\n    [{\n        coord: [10, 20],\n        // 数值大小\n        value: 10\n    }, {\n        coord: [20, 30]\n    }]\n]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>起点的名称。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>起点的坐标，可以是<a href=\"#grid\">直角坐标系</a>上的<code>[x, y]</code>，<a href=\"#geo\">地理坐标系</a>上的<code>[lng, lat]</code>。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>数据值。</p>\n"
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>终点的名称。</p>\n"
},
"coord": {
"type": [
"Array"
],
"descriptionCN": "<p>终点的坐标，可以是<a href=\"#grid\">直角坐标系</a>上的<code>[x, y]</code>，<a href=\"#geo\">地理坐标系</a>上的<code>[lng, lat]</code>。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
}
}
}
}
}
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>关系图</strong></p>\n<p>用于展现节点以及节点之间的关系数据。</p>\n<p><strong>注意：</strong> ECharts 2.x 中 <code>force</code> 类型的图表不再在 ECharts 3 中提供支持，转为统一使用 <code>graph</code> 去展现关系数据。如果要使用力引导布局，可以将 <a href=\"#series-graph.layout\">layout</a> 配置项设为<code>&#39;force&#39;</code>。</p>\n<p><strong>示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=graph&reset=1&edit=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'graph'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"hoverAnimation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启鼠标 hover 节点的提示动画效果。</p>\n"
},
"layout": {
"type": [
"string"
],
"descriptionCN": "<p>图的布局。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p><code>&#39;none&#39;</code> 不采用任何布局，使用<a href=\"#series-graph.data\">节点</a>中提供的 <a href=\"#series-graph.data.x\">x</a>， <a href=\"#series-graph.data.y\">y</a> 作为节点的位置。</p>\n</li>\n<li><p><code>&#39;circular&#39;</code> 采用环形布局，见示例 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=graph-circular-layout\" target=\"_blank\">Les Miserables</a>。</p>\n</li>\n<li><p><code>&#39;force&#39;</code> 采用力引导布局，见示例 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=graph-force\" target=\"_blank\">Force</a>，布局相关的配置项见 <a href=\"#series-graph.force\">graph.force</a></p>\n</li>\n</ul>\n",
"defaultValue": "'none'"
},
"force": {
"type": [
"Object"
],
"descriptionCN": "<p>力引导布局相关的配置项，力引导布局是模拟弹簧电荷模型在每两个节点之间添加一个斥力，每条边的两个节点之间添加一个引力，每次迭代节点会在各个斥力和引力的作用下移动位置，多次迭代后节点会静止在一个受力平衡的位置，达到整个模型的能量最小化。</p>\n<p>力引导布局的结果有良好的对称性和局部聚合性，也比较美观。</p>\n",
"properties": {
"initLayout": {
"type": [
"string"
],
"descriptionCN": "<p>进行力引导布局前的初始化布局，初始化布局会影响到力引导的效果。</p>\n<p>默认不进行任何布局，使用<a href=\"#series-graph.data\">节点</a>中提供的 <a href=\"#series-graph.data.x\">x</a>， <a href=\"#series-graph.data.y\">y</a> 作为节点的位置。如果不存在的话会随机生成一个位置。</p>\n<p>也可以选择使用环形布局 <code>&#39;circular&#39;</code>。</p>\n"
},
"repulsion": {
"type": [
"number"
],
"descriptionCN": "<p>节点之间的斥力因子。该值越大节点之间的斥力越大，两个节点间的距离也会越远。</p>\n",
"defaultValue": 50
},
"gravity": {
"type": [
"number"
],
"descriptionCN": "<p>节点受到的向中心的引力因子。该值越大节点越往中心点靠拢。</p>\n",
"defaultValue": 0.1
},
"edgeLength": {
"type": [
"number"
],
"descriptionCN": "<p>边的两个节点之间的距离，这个距离也会受 <a href=\"#series-graph.force.repulsion\">repulsion</a>。</p>\n",
"defaultValue": 30
},
"layoutAnimation": {
"type": [
"boolean"
],
"descriptionCN": "<p>因为力引导布局会在多次迭代后才会稳定，这个参数决定是否显示布局的迭代动画，浏览器端节点数据较多（&gt;100）的时候不建议关闭，布局过程会造成浏览器假死。</p>\n",
"defaultValue": true
}
}
},
"roam": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启鼠标缩放和平移漫游。默认不开启。如果只想要开启缩放或者平移，可以设置成 <code>&#39;scale&#39;</code> 或者 <code>&#39;move&#39;</code>。设置成 <code>true</code> 为都开启</p>\n",
"defaultValue": false
},
"nodeScaleRatio": {
"type": [
"number"
],
"descriptionCN": "<p>鼠标漫游缩放时节点的相应缩放比例，当设为<code>0</code>时节点不随着鼠标的缩放而缩放</p>\n",
"defaultValue": 0.6
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>关系图节点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'circle'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>关系图节点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 10
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>关系图节点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>关系图节点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color",
"Function"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n<p>支持使用回调函数。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(params: Object) =&gt; Color\n</code></pre>\n<p>传入的是数据项 <code>seriesIndex</code>, <code>dataIndex</code>, <code>data</code>, <code>value</code> 等各个参数。</p>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>关系边的公用线条样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "'#aaa'"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 1
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n",
"defaultValue": 0.5
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"categories": {
"type": [
"Array"
],
"descriptionCN": "<p>节点分类的类目，可选。</p>\n<p>如果节点有分类的话可以通过 <a href=\"#series-graph.data.category\">data[i].category</a> 指定每个节点的类目，类目的样式会被应用到节点样式上。<a href=\"#legend\">图例</a>也可以基于<code>categories</code>名字展现和筛选。</p>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>类目名称，用于和 <a href=\"#legend\">legend</a> 对应以及格式化 <a href=\"#tooltip\">tooltip</a> 的内容。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>该类目节点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>该类目节点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>该类目节点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>该类目节点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该类目节点的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该类目节点标签的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "inside"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项可以为单个数值，如：</p>\n<pre><code class=\"lang-js\">[12, 34, 56, 10, 23]\n</code></pre>\n<p>如果需要在数据中加入其它维度给 <a href=\"#visualMap\">visualMap</a> 组件用来映射到颜色等其它图形属性。每个数据项也可以是数组，如：</p>\n<pre><code class=\"lang-js\">[[12, 14], [34, 50], [56, 30], [10, 15], [23, 10]]\n</code></pre>\n<p>这时候可以将每项数组中的第二个值指定给 <a href=\"#visualMap\">visualMap</a> 组件。</p>\n<p>更多时候我们需要指定每个数据项的名称，这时候需要每个项为一个对象：</p>\n<pre><code class=\"lang-js\">[{\n    // 数据项的名称\n    name: &#39;数据1&#39;,\n    // 数据项值8\n    value: 10\n}, {\n    name: &#39;数据2&#39;,\n    value: 20\n}]\n</code></pre>\n<p>需要对个别内容指定进行个性化定义时：</p>\n<pre><code class=\"lang-js\">[{\n    name: &#39;数据1&#39;,\n    value: 10\n}, {\n    // 数据项名称\n    name: &#39;数据2&#39;,\n    value : 56,\n    //自定义特殊 tooltip，仅对该数据项有效\n    tooltip:{},\n    //自定义特殊itemStyle，仅对该item有效\n    itemStyle:{}\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>数据项值。</p>\n"
},
"category": {
"type": [
"number"
],
"descriptionCN": "<p>数据项所在类目的 index。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>该类目节点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>该类目节点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>该类目节点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>该类目节点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该节点的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该节点标签的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"nodes": {
"type": [
"Array"
],
"descriptionCN": "<p>同 <a href=\"#series-graph.data\">data</a></p>\n"
},
"links": {
"type": [
"Array"
],
"descriptionCN": "<p>节点间的关系数据。示例：</p>\n<pre><code class=\"lang-js\">links: [{\n    source: &#39;n1&#39;,\n    target: &#39;n2&#39;\n}, {\n    source: &#39;n2&#39;,\n    target: &#39;n3&#39;\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"source": {
"type": [
"string"
],
"descriptionCN": "<p>边的<a href=\"#series-graph.data.name\">源节点名称</a></p>\n"
},
"target": {
"type": [
"string"
],
"descriptionCN": "<p>边的<a href=\"#series-graph.data.name\">目标节点名称</a></p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>关系边的线条样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
},
"edges": {
"type": [
"Array"
],
"descriptionCN": "<p>同 <a href=\"#series-graph.links\">links</a></p>\n"
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-graph.markPoint.data.x\">x</a>, <a href=\"#series-graph.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-graph.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-graph.markLine.data.0.x\">x</a>, <a href=\"#series-graph.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<pre><code>data: [\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 2
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'center'"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
},
"width": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件的宽度。</p>\n",
"defaultValue": "自适应"
},
"height": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>组件的高度。</p>\n",
"defaultValue": "自适应"
},
"color": {
"type": [
"Array"
],
"descriptionCN": "<p>调色盘颜色列表。如果<a href=\"#series-graph.categories\">节点类型</a>没有设置颜色，则会依次循环从该列表中取颜色作为系列颜色。</p>\n<p>默认为：</p>\n<pre><code class=\"lang-js\">[&#39;#c23531&#39;, &#39;#314656&#39;, &#39;#61a0a8&#39;, &#39;#dd8668&#39;, &#39;#91c7ae&#39;, &#39;#6e7074&#39;, &#39;#61a0a8&#39;, &#39;#bda29a&#39;, &#39;#44525d&#39;, &#39;#c4ccd3&#39;]\n</code></pre>\n"
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong> 桑基图 </strong></p>\n<p>是一种特殊的流图, 它主要用来表示原材料、能量等如何从初始形式经过中间过程的加工、转化到达最终形式。</p>\n<p><strong>示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=sankey-energy&edit=1&reset=1\" width=\"700\" height=\"580\" ></iframe>\n\n\n\n<p><br>\n<strong>可视编码：</strong></p>\n<p>桑基图将原数据中的每个<code>node</code>编码成一个小矩形，不同的节点尽量用不同的颜色展示，小矩形旁边的<code>label</code>编码的是节点的名称。</p>\n<p>此外，图中每两个小矩形之间的边编码的是原数据中的<code>link</code>，边的粗细编码的是<code>link</code>中的<code>value</code>。</p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'sankey'"
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 2
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>sankey组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>sankey组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "5%"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>sankey组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
"defaultValue": "20%"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>sankey组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
"defaultValue": "5%"
},
"width": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>sankey组件的宽度。</p>\n",
"defaultValue": null
},
"height": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>sankey组件的高度。</p>\n",
"defaultValue": null
},
"nodeWidth": {
"type": [
"number"
],
"descriptionCN": "<p>图中每个矩形节点的宽度。</p>\n",
"defaultValue": 20
},
"nodeGap": {
"type": [
"number"
],
"descriptionCN": "<p>图中每一列任意两个矩形节点之间的间隔。</p>\n",
"defaultValue": 8
},
"layoutIterations": {
"type": [
"number"
],
"descriptionCN": "<p>布局的迭代次数，用来不断优化图中节点的位置，以减少节点和边之间的相互遮盖。</p>\n<p>默认布局迭代次数：<code>32</code>。</p>\n<p>经测试，布局迭代次数不要低于默认值。</p>\n",
"defaultValue": 32
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p><code>label</code> 描述了每个矩形节点中文本标签的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'right'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>桑基图节点矩形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "'#aaa'"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 1
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>桑基图边的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>桑基图边的颜色。</p>\n",
"defaultValue": "\"'#314656'\""
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的透明度。</p>\n",
"defaultValue": 0.2
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的曲度。</p>\n",
"defaultValue": 0.5
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>桑基图边的颜色。</p>\n",
"defaultValue": "\"'#314656'\""
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的透明度。</p>\n",
"defaultValue": 0.2
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的曲度。</p>\n",
"defaultValue": 0.5
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项可以为单个数值，如：</p>\n<pre><code class=\"lang-js\">[12, 34, 56, 10, 23]\n</code></pre>\n<p>如果需要在数据中加入其它维度给 <a href=\"#visualMap\">visualMap</a> 组件用来映射到颜色等其它图形属性。每个数据项也可以是数组，如：</p>\n<pre><code class=\"lang-js\">[[12, 14], [34, 50], [56, 30], [10, 15], [23, 10]]\n</code></pre>\n<p>这时候可以将每项数组中的第二个值指定给 <a href=\"#visualMap\">visualMap</a> 组件。</p>\n<p>更多时候我们需要指定每个数据项的名称，这时候需要每个项为一个对象：</p>\n<pre><code class=\"lang-js\">[{\n    // 数据项的名称\n    name: &#39;数据1&#39;,\n    // 数据项值8\n    value: 10\n}, {\n    name: &#39;数据2&#39;,\n    value: 20\n}]\n</code></pre>\n<p>需要对个别内容指定进行个性化定义时：</p>\n<pre><code class=\"lang-js\">[{\n    name: &#39;数据1&#39;,\n    value: 10\n}, {\n    // 数据项名称\n    name: &#39;数据2&#39;,\n    value : 56,\n    //自定义特殊 tooltip，仅对该数据项有效\n    tooltip:{},\n    //自定义特殊itemStyle，仅对该item有效\n    itemStyle:{}\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>数据项值。</p>\n"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该节点的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该节点标签的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"nodes": {
"type": [
"Array"
],
"descriptionCN": "<p>同 <a href=\"#series-sankey.data\">data</a></p>\n"
},
"links": {
"type": [
"Array"
],
"descriptionCN": "<p>节点间的关系数据。示例：</p>\n<pre><code class=\"lang-js\">links: [{\n    source: &#39;n1&#39;,\n    target: &#39;n2&#39;\n}, {\n    source: &#39;n2&#39;,\n    target: &#39;n3&#39;\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"source": {
"type": [
"string"
],
"descriptionCN": "<p>边的<a href=\"#series-graph.data.name\">源节点名称</a></p>\n"
},
"target": {
"type": [
"string"
],
"descriptionCN": "<p>边的<a href=\"#series-graph.data.name\">目标节点名称</a></p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>边的数值，决定边的宽度。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>关系边的线条样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>桑基图边的颜色。</p>\n",
"defaultValue": "\"'#314656'\""
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的透明度。</p>\n",
"defaultValue": 0.2
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的曲度。</p>\n",
"defaultValue": 0.5
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>桑基图边的颜色。</p>\n",
"defaultValue": "\"'#314656'\""
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的透明度。</p>\n",
"defaultValue": 0.2
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>桑基图边的曲度。</p>\n",
"defaultValue": 0.5
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
}
}
}
}
}
}
}
},
"edges": {
"type": [
"Array"
],
"descriptionCN": "<p>同 <a href=\"#series-sankey.links\">links</a></p>\n"
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "'linear'"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>漏斗图</strong></p>\n<p><strong>示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=funnel&reset=1&edit=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'funnel'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n"
},
"min": {
"type": [
"number"
],
"descriptionCN": "<p>指定的数据最小值。</p>\n",
"defaultValue": 0
},
"max": {
"type": [
"number"
],
"descriptionCN": "<p>指定的数据最大值。</p>\n",
"defaultValue": 100
},
"minSize": {
"type": [
"string"
],
"descriptionCN": "<p>数据最小值 <a href=\"#series-funnel.min\">min</a> 映射的宽度。</p>\n<p>可以是绝对的像素大小，也可以是相对<a href=\"#series-funnel.width\">布局宽度</a>的百分比，如果需要最小值的图形并不是尖端三角，可通过设置该属性实现。</p>\n",
"defaultValue": "'0%'"
},
"maxSize": {
"type": [
"string"
],
"descriptionCN": "<p>数据最大值 <a href=\"#series-funnel.max\">max</a> 映射的宽度。</p>\n<p>可以是绝对的像素大小，也可以是相对<a href=\"#series-funnel.width\">布局宽度</a>的百分比。</p>\n",
"defaultValue": "'100%'"
},
"sort": {
"type": [
"string"
],
"descriptionCN": "<p>数据排序， 可以取 <code>&#39;ascending&#39;</code>, <code>&#39;descending&#39;</code>。</p>\n",
"defaultValue": "'descending'"
},
"gap": {
"type": [
"number"
],
"descriptionCN": "<p>数据图形间距。</p>\n",
"defaultValue": 0
},
"legendHoverLink": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用<a href=\"#legend\">图例</a> hover时的联动高亮。</p>\n",
"defaultValue": true
},
"funnelAlign": {
"type": [
"string"
],
"descriptionCN": "<p>水平方向对齐布局类型，默认居中对齐，可用选项还有：&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</p>\n",
"defaultValue": "'center'"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>漏斗图图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p><code>&#39;left&#39;</code></p>\n<p>  漏斗图左侧，通过<a href=\"#series-funnel.labelLine\">视觉引导线</a>连到相应的梯形。</p>\n</li>\n<li><p><code>&#39;right&#39;</code></p>\n<p>  漏斗图右侧，通过<a href=\"#series-funnel.labelLine\">视觉引导线</a>连到相应的梯形。</p>\n</li>\n<li><p><code>&#39;inside&#39;</code></p>\n<p>  漏斗图梯形内部。</p>\n</li>\n<li><p><code>&#39;inner&#39;</code> 同 <code>&#39;inside&#39;</code>。</p>\n</li>\n<li><code>&#39;center&#39;</code> 同 <code>&#39;inside&#39;</code>。</li>\n</ul>\n",
"defaultValue": "'outside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n     // 百分比\n     percent: number,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n     // 百分比\n     percent: number,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"labelLine": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的视觉引导线样式，在 <a href=\"#series-funnel.label.normal.position\">label 位置</a> 设置为<code>&#39;left&#39;</code>或者<code>&#39;right&#39;</code>的时候会显示视觉引导线。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "<p>普通状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"length": {
"type": [
"number"
],
"descriptionCN": "<p>视觉引导线第一段的长度。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "<p>高亮状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color",
"Function"
],
"descriptionCN": "<p>图形的颜色。 默认从全局调色盘 <a href=\"#color\">option.color</a> 获取颜色 </p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n<p>支持使用回调函数。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(params: Object) =&gt; Color\n</code></pre>\n<p>传入的是数据项 <code>seriesIndex</code>, <code>dataIndex</code>, <code>data</code>, <code>value</code> 等各个参数。</p>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>系列中的数据内容数组。数组项可以为单个数值，如：</p>\n<pre><code class=\"lang-js\">[12, 34, 56, 10, 23]\n</code></pre>\n<p>如果需要在数据中加入其它维度给 <a href=\"#visualMap\">visualMap</a> 组件用来映射到颜色等其它图形属性。每个数据项也可以是数组，如：</p>\n<pre><code class=\"lang-js\">[[12, 14], [34, 50], [56, 30], [10, 15], [23, 10]]\n</code></pre>\n<p>这时候可以将每项数组中的第二个值指定给 <a href=\"#visualMap\">visualMap</a> 组件。</p>\n<p>更多时候我们需要指定每个数据项的名称，这时候需要每个项为一个对象：</p>\n<pre><code class=\"lang-js\">[{\n    // 数据项的名称\n    name: &#39;数据1&#39;,\n    // 数据项值8\n    value: 10\n}, {\n    name: &#39;数据2&#39;,\n    value: 20\n}]\n</code></pre>\n<p>需要对个别内容指定进行个性化定义时：</p>\n<pre><code class=\"lang-js\">[{\n    name: &#39;数据1&#39;,\n    value: 10\n}, {\n    // 数据项名称\n    name: &#39;数据2&#39;,\n    value : 56,\n    //自定义特殊 tooltip，仅对该数据项有效\n    tooltip:{},\n    //自定义特殊itemStyle，仅对该item有效\n    itemStyle:{}\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>数据项名称。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>数据值。</p>\n"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>单个数据的标签配置。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p><code>&#39;left&#39;</code></p>\n<p>  漏斗图左侧，通过<a href=\"#series-funnel.labelLine\">视觉引导线</a>连到相应的梯形。</p>\n</li>\n<li><p><code>&#39;right&#39;</code></p>\n<p>  漏斗图右侧，通过<a href=\"#series-funnel.labelLine\">视觉引导线</a>连到相应的梯形。</p>\n</li>\n<li><p><code>&#39;inside&#39;</code></p>\n<p>  漏斗图梯形内部。</p>\n</li>\n<li><p><code>&#39;inner&#39;</code> 同 <code>&#39;inside&#39;</code>。</p>\n</li>\n<li><code>&#39;center&#39;</code> 同 <code>&#39;inside&#39;</code>。</li>\n</ul>\n",
"defaultValue": "'outside'"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "",
"defaultValue": false
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"labelLine": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "<p>普通状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"length": {
"type": [
"number"
],
"descriptionCN": "<p>视觉引导线第一段的长度。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "<p>高亮状态下视觉引导线的样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示视觉引导线。</p>\n"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p> 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-funnel.markPoint.data.x\">x</a>, <a href=\"#series-funnel.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-funnel.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-funnel.markLine.data.0.x\">x</a>, <a href=\"#series-funnel.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<pre><code>data: [\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>仪表盘</strong></p>\n<p><strong>示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=gauge-car\" width=\"600\" height=\"500\" ></iframe>\n\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'gauge'"
},
"name": {
"type": [
"string"
],
"descriptionCN": "<p>系列名称，用于<a href=\"#tooltip\">tooltip</a>的显示，<a href=\"#legend\">legend</a> 的图例筛选，在 <code>setOption</code> 更新数据和配置项时用于指定对应的系列。</p>\n<!-- overwrite radius -->"
},
"radius": {
"type": [
"number",
"string"
],
"descriptionCN": "<p>仪表盘半径，可以是相对于容器高宽中较小的一项的一半的百分比，也可以是绝对的数值。</p>\n<p>{{ use partial-legend-hover-link }}</p>\n",
"defaultValue": "'75%'"
},
"startAngle": {
"type": [
"number"
],
"descriptionCN": "<p>仪表盘起始角度。<a href=\"#series-gauge.center\">圆心</a> 正右手侧为<code>0</code>度，正上方为<code>90</code>度，正左手侧为<code>180</code>度。</p>\n",
"defaultValue": 225
},
"endAngle": {
"type": [
"number"
],
"descriptionCN": "<p>仪表盘结束角度。</p>\n",
"defaultValue": -45
},
"clockwise": {
"type": [
"boolean"
],
"descriptionCN": "<p>仪表盘刻度是否是顺时针增长。</p>\n",
"defaultValue": true
},
"min": {
"type": [
"number"
],
"descriptionCN": "<p>最小的数据值，映射到 <a href=\"#series-gauge.minAngle\">minAngle</a>。</p>\n",
"defaultValue": 0
},
"max": {
"type": [
"number"
],
"descriptionCN": "<p>最大的数据值，映射到 <a href=\"#series-gauge.maxAngle\">maxAngle</a>。</p>\n",
"defaultValue": 100
},
"splitNumber": {
"type": [
"number"
],
"descriptionCN": "<p>仪表盘刻度的分割段数。</p>\n",
"defaultValue": 10
},
"axisLine": {
"type": [
"Object"
],
"descriptionCN": "<p>仪表盘轴线相关配置。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示仪表盘轴线。</p>\n",
"defaultValue": true
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>仪表盘轴线样式。</p>\n",
"properties": {
"color": {
"type": [
"Array"
],
"descriptionCN": "<p>仪表盘的轴线可以被分成不同颜色的多段。每段的结束位置和颜色可以通过一个数组来表示。</p>\n<p>默认取值：</p>\n<pre><code class=\"lang-js\">[[0.2, &#39;#91c7ae&#39;], [0.8, &#39;#63869e&#39;], [1, &#39;#c23531&#39;]]\n</code></pre>\n"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>轴线宽度。</p>\n",
"defaultValue": 30,
"properties": {
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
}
}
},
"splitLine": {
"type": [
"Object"
],
"descriptionCN": "<p>分隔线样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示分隔线。</p>\n",
"defaultValue": true
},
"length": {
"type": [
"number"
],
"descriptionCN": "<p>分隔线线长。</p>\n",
"defaultValue": 30
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#eee"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 2
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "'solid'"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"axisTick": {
"type": [
"Object"
],
"descriptionCN": "<p>刻度样式。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示刻度。</p>\n",
"defaultValue": true
},
"splitNumber": {
"type": [
"number"
],
"descriptionCN": "<p>分隔线之间分割的刻度数。</p>\n",
"defaultValue": 5
},
"length": {
"type": [
"number"
],
"descriptionCN": "<p>刻度线长。</p>\n",
"defaultValue": 8
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "#eee"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 1
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "'solid'"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"axisLabel": {
"type": [
"Object"
],
"descriptionCN": "<p>刻度标签。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。\n示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值\nformatter: function (value) {\n    return value + &#39;km/h&#39;;\n}\n</code></pre>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
},
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>刻度颜色</p>\n",
"defaultValue": "'auto'"
}
}
},
"pointer": {
"type": [
"Object"
],
"descriptionCN": "<p>仪表盘指针。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示指针。</p>\n",
"defaultValue": true
},
"length": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>指针长度，可以是绝对数值，也可以是相对于<a href=\"#series-gauge.radius\">半径</a>的半分比。</p>\n",
"defaultValue": "'80%'"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>指针宽度。</p>\n",
"defaultValue": 8
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>仪表盘指针样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>指针颜色，默认取数值所在的<a href=\"#series-gauge.axisLine.lineStyle.color\">区间的颜色</a></p>\n",
"defaultValue": "'auto'"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n<!-- overwrite color -->"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"title": {
"type": [
"Object"
],
"descriptionCN": "<p>仪表盘标题。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标题。</p>\n",
"defaultValue": true
},
"offsetCenter": {
"type": [
"Array"
],
"descriptionCN": "<p>相对于仪表盘中心的偏移位置，数组第一项是水平方向的偏移，第二项是垂直方向的偏移。可以是绝对的数值，也可以是相对于仪表盘半径的百分比。</p>\n",
"defaultValue": "[0, '-40%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "'#333'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 15
}
}
}
}
},
"detail": {
"type": [
"Object"
],
"descriptionCN": "<p>仪表盘详情，用于显示数据。</p>\n",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示详情。</p>\n",
"defaultValue": true
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>详情宽度。</p>\n",
"defaultValue": 100
},
"height": {
"type": [
"number"
],
"descriptionCN": "<p>详情高度。</p>\n",
"defaultValue": 40
},
"backgroundColor": {
"type": [
"Color"
],
"descriptionCN": "<p>详情背景色。</p>\n",
"defaultValue": "'transparent'"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>详情边框宽度。</p>\n",
"defaultValue": 0
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>详情边框颜色。</p>\n",
"defaultValue": "'#ccc'"
},
"offsetCenter": {
"type": [
"Array"
],
"descriptionCN": "<p>相对于仪表盘中心的偏移位置，数组第一项是水平方向的偏移，第二项是垂直方向的偏移。可以是绝对的数值，也可以是相对于仪表盘半径的百分比。</p>\n",
"defaultValue": "[0, '40%']"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文本颜色，默认取数值所在的<a href=\"#series-gauge.axisLine.lineStyle.color\">区间的颜色</a></p>\n",
"defaultValue": "'auto'"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n<!-- overwrite color -->",
"defaultValue": 15
}
}
}
}
},
"markPoint": {
"type": [
"Object"
],
"descriptionCN": "<p>图表标注。</p>\n",
"properties": {
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
"defaultValue": "'pin'"
},
"symbolSize": {
"type": [
"number",
"Array",
"Function"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n<p>如果需要每个数据的图形大小不一样，可以设置为如下格式的回调函数：</p>\n<pre><code class=\"lang-js\">(value: Array|number, params: Object) =&gt; number|Array\n</code></pre>\n<p>其中第一个参数 <code>value</code> 为 <a href=\"#series-.data\">data</a> 中的数据值。第二个参数<code>params</code> 是其它的数据项参数。</p>\n",
"defaultValue": 50
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n",
"defaultValue": "'inside'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，分别表示系列名，数据名，数据值。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {c}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：\n 。</p>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"Array"
],
"descriptionCN": "<p>标注的数据数组。每个数组项是一个对象，有下面几种方式指定标注的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-gauge.markPoint.data.x\">x</a>, <a href=\"#series-gauge.markPoint.data.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">data: [{\n    name: &#39;某个屏幕坐标&#39;,\n    x: 100,\n    y: 100\n}]\n</code></pre>\n",
"items": {
"type": "Object",
"properties": {
"name": {
"type": [
"string"
],
"descriptionCN": "<p>标注名称。</p>\n",
"defaultValue": "''"
},
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"itemStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该标注的样式。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
"defaultValue": "\"#000\""
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
"defaultValue": 0
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": false
},
"position": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标签的位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>[x, y]</p>\n<p>  通过相对的百分比或者绝对像素值表示标签相对于图形包围盒左上角的位置。\n  示例：</p>\n<pre><code class=\"lang-js\">  // 绝对的像素值\n  position: [10, 10],\n  // 相对的百分比\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p>&#39;top&#39;</p>\n</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n<li>&#39;bottom&#39;</li>\n<li>&#39;inside&#39;</li>\n<li>&#39;insideLeft&#39;</li>\n<li>&#39;insideRight&#39;</li>\n<li>&#39;insideTop&#39;</li>\n<li>&#39;insideBottom&#39;</li>\n<li>&#39;insideLeftTop&#39;</li>\n<li>&#39;insideLeftBottom&#39;</li>\n<li>&#39;insideRightTop&#39;</li>\n<li>&#39;insideRightBottom&#39;</li>\n</ul>\n"
},
"textStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>标签的字体样式。</p>\n",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>文字的颜色。</p>\n",
"defaultValue": "\"#fff\""
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"markLine": {
"type": [
"*"
],
"descriptionCN": "<p>图表标线。</p>\n",
"properties": {
"symbol": {
"type": [
"string",
"Array"
],
"descriptionCN": "<p>标线两端的标记类型，可以是一个数组分别指定两端，也可以是单个统一指定，具体格式见 (~series-gauge.markLine.data.0.symbol)。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>标线两端的标记大小，可以是一个数组分别指定两端，也可以是单个统一指定。</p>\n<p><strong>注意：</strong> 这里无法像一般的 symbolSize 那样通过数组分别指定高宽。</p>\n"
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>标线数值的精度，在显示平均值线的时候有用。</p>\n",
"defaultValue": 2
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>标线文本。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "自适应"
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
}
}
}
}
},
"data": {
"type": [
"*"
],
"descriptionCN": "<p>标线的数据数组。每个数组项可以是一个两个值的数组，分别表示线的起点和终点，每一项是一个对象，有下面几种方式指定起点或终点的位置。</p>\n<ol>\n<li>通过 <a href=\"#series-gauge.markLine.data.0.x\">x</a>, <a href=\"#series-gauge.markLine.data.0.y\">y</a> 属性指定相对容器的屏幕坐标，单位像素。</li>\n</ol>\n<p>当多个属性同时存在时，优先级按上述的顺序。</p>\n<pre><code>data: [\n    [{\n        name: &#39;两个屏幕坐标之间的标线&#39;,\n        x: 100,\n        y: 100\n    }, {\n        x: 500,\n        y: 200\n    }]\n]\n</code></pre>",
"properties": {
"p0":{
"type": [
"Object"
],
"descriptionCN": "<p>起点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>起点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>起点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>起点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>起点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
},
"p1":{
"type": [
"Object"
],
"descriptionCN": "<p>终点的数据。</p>\n",
"properties": {
"x": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 x 坐标，单位像素。</p>\n"
},
"y": {
"type": [
"number"
],
"descriptionCN": "<p>相对容器的屏幕 y 坐标，单位像素。</p>\n"
},
"value": {
"type": [
"number"
],
"descriptionCN": "<p>标注值，可以不设。</p>\n"
},
"symbol": {
"type": [
"string"
],
"descriptionCN": "<p>终点标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
},
"symbolSize": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>终点标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n"
},
"symbolRotate": {
"type": [
"number"
],
"descriptionCN": "<p>终点标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
},
"symbolOffset": {
"type": [
"Array"
],
"descriptionCN": "<p>终点标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
"defaultValue": "[0, 0]"
},
"lineStyle": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项线的样式，起点和终点项的<code>lineStyle</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
"defaultValue": "\"#000\""
},
"width": {
"type": [
"number"
],
"descriptionCN": "<p>线宽。</p>\n",
"defaultValue": 0
},
"type": {
"type": [
"string"
],
"descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
"defaultValue": "solid"
},
"shadowBlur": {
"type": [
"number"
],
"descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
},
"shadowColor": {
"type": [
"Color"
],
"descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
},
"shadowOffsetX": {
"type": [
"number"
],
"descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"shadowOffsetY": {
"type": [
"number"
],
"descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
"defaultValue": 0
},
"opacity": {
"type": [
"number"
],
"descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
},
"curveness": {
"type": [
"number"
],
"descriptionCN": "<p>边的曲度，支持从 0 到 1 的值，值越大曲度越大。</p>\n",
"defaultValue": 0
}
}
}
}
},
"label": {
"type": [
"Object"
],
"descriptionCN": "<p>该数据项标签的样式，起点和终点项的<code>label</code>会合并到一起。</p>\n",
"properties": {
"normal": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
},
"emphasis": {
"type": [
"Object"
],
"descriptionCN": "",
"properties": {
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示标签。</p>\n",
"defaultValue": true
},
"position": {
"type": [
"string"
],
"descriptionCN": "<p>标签位置，可选：</p>\n<ul>\n<li><code>&#39;start&#39;</code> 线的起始点。</li>\n<li><code>&#39;end&#39;</code>   线的结束点。</li>\n</ul>\n",
"defaultValue": "'end'"
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>, <code>{d}</code>，分别表示系列名，数据名，数据值，百分比。</p>\n<p> <strong>示例：</strong></p>\n<pre><code class=\"lang-js\"> formatter: &#39;{b}: {d}&#39;\n</code></pre>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array) =&gt; string\n</code></pre>\n<p> 参数 <code>params</code> 是 formatter 需要的单个数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n }\n</code></pre>\n</li>\n</ol>\n<p>formatter 返回的字符串支持用 <code>\\n</code> 换行。</p>\n"
}
}
}
}
}
}
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
},
"animation": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
"defaultValue": true
},
"animationDuration": {
"type": [
"number"
],
"descriptionCN": "<p>初始动画的时长。</p>\n",
"defaultValue": 1000
},
"animationEasing": {
"type": [
"string"
],
"descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
"defaultValue": "cubicOut"
},
"animationDurationUpdate": {
"type": [
"number"
],
"descriptionCN": "<p>数据更新动画的时长。</p>\n",
"defaultValue": 300
},
"animationEasingUpdate": {
"type": [
"string"
],
"descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
"defaultValue": "cubicOut"
}
}
}
]
},
"descriptionCN": "<p>系列列表。每个系列通过 <code>type</code> 决定自己的图表类型</p>\n"
},
"dataZoom": {
"type": "Array",
"items": {
"anyOf": [
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>内置型数据区域缩放组件（dataZoomInside）</strong></p>\n<p>（参考<a href=\"#dataZoom\">数据区域缩放组件（dataZoom）的介绍</a>）</p>\n<p>所谓『内置』，即内置在坐标系中。</p>\n<ul>\n<li><p>平移：在坐标系中滑动拖拽进行数据区域平移。</p>\n</li>\n<li><p>缩放：</p>\n<ul>\n<li><p>PC端：鼠标在坐标系范围内滚轮滚动（MAC触控板类同）</p>\n</li>\n<li><p>移动端：在移动端触屏上，支持两指滑动缩放。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><br>\n<br></p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'inside'"
},
"xAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-inside</code> 组件控制的 <code>x轴</code>（即<a href=\"#xAxis\">xAxis</a>，是直角坐标系中的概念，参见 <a href=\"#grid\">grid</a>）。</p>\n<p>不指定时，当 <a href=\"#dataZoom-inside.orient\">dataZoom-inside.orient</a> 为 <code>&#39;horizontal&#39;</code>时，默认控制所有 <code>xAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    xAxis: [\n        {...}, // 第一个 xAxis\n        {...}, // 第二个 xAxis\n        {...}, // 第三个 xAxis\n        {...}  // 第四个 xAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            xAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 xAxis\n        },\n        { // 第二个 dataZoom 组件\n            xAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 xAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"yAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-inside</code> 组件控制的 <code>y轴</code>（即<a href=\"#yAxis\">yAxis</a>，是直角坐标系中的概念，参见 <a href=\"#grid\">grid</a>）。</p>\n<p>不指定时，当 <a href=\"#dataZoom-inside.orient\">dataZoom-inside.orient</a> 为 <code>&#39;vertical&#39;</code>时，默认控制所有 <code>yAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    yAxis: [\n        {...}, // 第一个 yAxis\n        {...}, // 第二个 yAxis\n        {...}, // 第三个 yAxis\n        {...}  // 第四个 yAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            yAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 yAxis\n        },\n        { // 第二个 dataZoom 组件\n            yAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 yAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"angleAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-inside</code> 组件控制的 <code>角度轴</code>（即<a href=\"#angleAxis\">angleAxis</a>，是极坐标系中的概念，参见 <a href=\"#polar\">polar</a>）。</p>\n<p>不指定时，默认控制所有 <code>angleAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    angleAxis: [\n        {...}, // 第一个 angleAxis\n        {...}, // 第二个 angleAxis\n        {...}, // 第三个 angleAxis\n        {...}  // 第四个 angleAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            angleAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 angleAxis\n        },\n        { // 第二个 dataZoom 组件\n            angleAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 angleAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"radiusAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-inside</code> 组件控制的 <code>半径轴</code>（即<a href=\"#radiusAxis\">radiusAxis</a>，是极坐标系中的概念，参见 <a href=\"#polar\">polar</a>）。</p>\n<p>不指定时，默认控制所有 <code>radiusAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    radiusAxis: [\n        {...}, // 第一个 radiusAxis\n        {...}, // 第二个 radiusAxis\n        {...}, // 第三个 radiusAxis\n        {...}  // 第四个 radiusAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            radiusAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 radiusAxis\n        },\n        { // 第二个 dataZoom 组件\n            radiusAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 radiusAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"filterMode": {
"type": [
"string"
],
"descriptionCN": "<p><code>dataZoom</code> 的运行原理是通过 <code>数据过滤</code> 来达到 <code>数据窗口缩放</code> 的效果。</p>\n<p>数据过滤模式的设置不同，效果也不同。</p>\n<p>可选值为：</p>\n<ul>\n<li><p>&#39;filter&#39;</p>\n<p>  数据窗口外的数据，被 <strong>过滤掉</strong>。这个配置项是最常用的。</p>\n</li>\n<li><p>&#39;empty&#39;</p>\n<p>  数据窗口外的数据，被 <strong>设置为空</strong>。\n  与『过滤掉』的区别是，『设置为空』的数据当空数据展示，也就是说还会占有位置。</p>\n</li>\n</ul>\n<p>如下面的例子，y轴 的 <code>filterMode</code> 被设置为 <code>&#39;empty&#39;</code>，x轴的 <code>filterMode</code> 被设置为 <code>&#39;filter&#39;</code>。当进行对 y轴 进行dataZoom时，尺寸超出 y轴 窗口的柱形，会被『设置为空』，从而柱形在x轴还有占位，只是不显示出来。这样的效果，对于离群点（outlier）过滤功能，比较清晰。</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/bar-dataZoom-filterMode&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n",
"defaultValue": "'filter'"
},
"start": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的起始百分比。范围是：0 ~ 100。</p>\n<p><a href=\"#dataZoom-inside.start\">dataZoom-inside.start</a> 和 <a href=\"#dataZoom-inside.end\">dataZoom-inside.end</a> 共同用 <strong>百分比</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": 0
},
"end": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的结束百分比。范围是：0 ~ 100。</p>\n<p><a href=\"#dataZoom-inside.start\">dataZoom-inside.start</a> 和 <a href=\"#dataZoom-inside.end\">dataZoom-inside.end</a> 共同用 <strong>百分比</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": 100
},
"startValue": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的起始数值。定义了 <code>startValue</code> 时，则 <a href=\"#dataZoom-inside.start\">dataZoom-inside.start</a> 失效。</p>\n<p><a href=\"#dataZoom-inside.startValue\">dataZoom-inside.startValue</a> 和 <a href=\"#dataZoom-inside.endValue\">dataZoom-inside.endValue</a> 共同用 <strong>绝对数值</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": null
},
"endValue": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的结束数值。定义了 <code>endValue</code> 时，则 <a href=\"#dataZoom-inside.end\">dataZoom-inside.end</a> 失效。</p>\n<p><a href=\"#dataZoom-inside.startValue\">dataZoom-inside.startValue</a> 和 <a href=\"#dataZoom-inside.endValue\">dataZoom-inside.endValue</a> 共同用 <strong>绝对数值</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": null
},
"orient": {
"type": [
"string"
],
"descriptionCN": "<p>布局方式是横还是竖。不仅是布局方式，对于直角坐标系而言，也决定了，缺省情况控制横向数轴还是纵向数轴。</p>\n<p>可选值为：</p>\n<ul>\n<li><p><code>&#39;horizontal&#39;</code>：水平。</p>\n</li>\n<li><p><code>&#39;vertical&#39;</code>：竖直。</p>\n</li>\n</ul>\n",
"defaultValue": null
},
"zoomLock": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否锁定选择区域（或叫做数据窗口）的大小。</p>\n<p>如果设置为 <code>true</code> 则锁定选择区域的大小，也就是说，只能平移，不能缩放。</p>\n",
"defaultValue": false
},
"throttle": {
"type": [
"number"
],
"descriptionCN": "<p>设置触发视图刷新的频率。单位为毫秒（ms）。一般不需要更改这个值。</p>\n",
"defaultValue": 100
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>滑动条型数据区域缩放组件（dataZoomSlider）</strong></p>\n<p>（参考<a href=\"#dataZoom\">数据区域缩放组件（dataZoom）的介绍</a>）</p>\n<p><br>\n<br></p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "",
"defaultValue": "'slider'"
},
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示  组件。如果设置为 <code>false</code>，不会显示，但是数据过滤的功能还存在。</p>\n",
"defaultValue": true
},
"backgroundColor": {
"type": [
"Color"
],
"descriptionCN": "<p>组件的背景颜色。</p>\n",
"defaultValue": "'rgba(47,69,84,0)'"
},
"dataBackgroundColor": {
"type": [
"Color"
],
"descriptionCN": "<p>数据阴影的背景颜色。</p>\n",
"defaultValue": "'#ddd'"
},
"fillerColor": {
"type": [
"Color"
],
"descriptionCN": "<p>选中范围的填充颜色。</p>\n",
"defaultValue": "'rgba(47,69,84,0.25)'"
},
"handleColor": {
"type": [
"Color"
],
"descriptionCN": "<p>控制手柄的颜色。</p>\n",
"defaultValue": "'rgba(47,69,84,0.65)'"
},
"handleSize": {
"type": [
"number"
],
"descriptionCN": "<p>控制手柄的尺寸。</p>\n",
"defaultValue": 10
},
"labelPrecision": {
"type": [
"string"
],
"descriptionCN": "<p>显示label的小数精度。默认根据数据自动决定。</p>\n",
"defaultValue": "'auto'"
},
"labelFormatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>显示的label的格式化器。</p>\n<ul>\n<li><p>如果为 <code>string</code>，表示模板，例如：<code>aaaa{value}bbbb</code>，其中<code>{value}</code>会被替换为实际的数值。</p>\n</li>\n<li><p>如果为 <code>Function</code>，表示回调函数，例如：</p>\n</li>\n</ul>\n<pre><code class=\"lang-javascript\">labelFormatter: function (value) {\n    return &#39;aaa&#39; + value + &#39;bbb&#39;; // 返回最终的label内容。\n}\n</code></pre>\n",
"defaultValue": null
},
"showDetail": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示label，即拖拽时候显示详细数值信息。</p>\n",
"defaultValue": true
},
"showDataShadow": {
"type": [
"string"
],
"descriptionCN": "<p>是否在 <code>dataZoom-silder</code> 组件中显示数据阴影。数据阴影可以简单得反应数据走势。</p>\n",
"defaultValue": "'auto'"
},
"realtime": {
"type": [
"boolean"
],
"descriptionCN": "<p>拖动时，是否实时更新系列的视图。如果设置为 <code>false</code>，则只在拖拽结束的时候更新。</p>\n",
"defaultValue": true
},
"textStyle": {
"type": [
"*"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>dataZoom 文字的颜色。</p>\n",
"defaultValue": "#333"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>dataZoom 文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>dataZoom 文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>dataZoom 文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>dataZoom 文字的字体大小</p>\n",
"defaultValue": 12
}
}
},
"xAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-slider</code> 组件控制的 <code>x轴</code>（即<a href=\"#xAxis\">xAxis</a>，是直角坐标系中的概念，参见 <a href=\"#grid\">grid</a>）。</p>\n<p>不指定时，当 <a href=\"#dataZoom-slider.orient\">dataZoom-slider.orient</a> 为 <code>&#39;horizontal&#39;</code>时，默认控制所有 <code>xAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    xAxis: [\n        {...}, // 第一个 xAxis\n        {...}, // 第二个 xAxis\n        {...}, // 第三个 xAxis\n        {...}  // 第四个 xAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            xAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 xAxis\n        },\n        { // 第二个 dataZoom 组件\n            xAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 xAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"yAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-slider</code> 组件控制的 <code>y轴</code>（即<a href=\"#yAxis\">yAxis</a>，是直角坐标系中的概念，参见 <a href=\"#grid\">grid</a>）。</p>\n<p>不指定时，当 <a href=\"#dataZoom-slider.orient\">dataZoom-slider.orient</a> 为 <code>&#39;vertical&#39;</code>时，默认控制所有 <code>yAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    yAxis: [\n        {...}, // 第一个 yAxis\n        {...}, // 第二个 yAxis\n        {...}, // 第三个 yAxis\n        {...}  // 第四个 yAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            yAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 yAxis\n        },\n        { // 第二个 dataZoom 组件\n            yAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 yAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"angleAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-slider</code> 组件控制的 <code>角度轴</code>（即<a href=\"#angleAxis\">angleAxis</a>，是极坐标系中的概念，参见 <a href=\"#polar\">polar</a>）。</p>\n<p>不指定时，默认控制所有 <code>angleAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    angleAxis: [\n        {...}, // 第一个 angleAxis\n        {...}, // 第二个 angleAxis\n        {...}, // 第三个 angleAxis\n        {...}  // 第四个 angleAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            angleAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 angleAxis\n        },\n        { // 第二个 dataZoom 组件\n            angleAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 angleAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"radiusAxisIndex": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>设置 <code>dataZoom-slider</code> 组件控制的 <code>半径轴</code>（即<a href=\"#radiusAxis\">radiusAxis</a>，是极坐标系中的概念，参见 <a href=\"#polar\">polar</a>）。</p>\n<p>不指定时，默认控制所有 <code>radiusAxis</code>。</p>\n<p>如果是 <code>number</code> 表示控制一个轴，如果是 <code>Array</code> 表示控制多个轴。</p>\n<p>例如有如下 ECharts option：</p>\n<pre><code class=\"lang-javascript\">option: {\n    radiusAxis: [\n        {...}, // 第一个 radiusAxis\n        {...}, // 第二个 radiusAxis\n        {...}, // 第三个 radiusAxis\n        {...}  // 第四个 radiusAxis\n    ],\n    dataZoom: [\n        { // 第一个 dataZoom 组件\n            radiusAxisIndex: [0, 2] // 表示这个 dataZoom 组件控制 第一个 和 第三个 radiusAxis\n        },\n        { // 第二个 dataZoom 组件\n            radiusAxisIndex: 3      // 表示这个 dataZoom 组件控制 第四个 radiusAxis\n        }\n    ]\n}\n</code></pre>\n",
"defaultValue": null
},
"filterMode": {
"type": [
"string"
],
"descriptionCN": "<p><code>dataZoom</code> 的运行原理是通过 <code>数据过滤</code> 来达到 <code>数据窗口缩放</code> 的效果。</p>\n<p>数据过滤模式的设置不同，效果也不同。</p>\n<p>可选值为：</p>\n<ul>\n<li><p>&#39;filter&#39;</p>\n<p>  数据窗口外的数据，被 <strong>过滤掉</strong>。这个配置项是最常用的。</p>\n</li>\n<li><p>&#39;empty&#39;</p>\n<p>  数据窗口外的数据，被 <strong>设置为空</strong>。\n  与『过滤掉』的区别是，『设置为空』的数据当空数据展示，也就是说还会占有位置。</p>\n</li>\n</ul>\n<p>如下面的例子，y轴 的 <code>filterMode</code> 被设置为 <code>&#39;empty&#39;</code>，x轴的 <code>filterMode</code> 被设置为 <code>&#39;filter&#39;</code>。当进行对 y轴 进行dataZoom时，尺寸超出 y轴 窗口的柱形，会被『设置为空』，从而柱形在x轴还有占位，只是不显示出来。这样的效果，对于离群点（outlier）过滤功能，比较清晰。</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/bar-dataZoom-filterMode&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n",
"defaultValue": "'filter'"
},
"start": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的起始百分比。范围是：0 ~ 100。</p>\n<p><a href=\"#dataZoom-slider.start\">dataZoom-slider.start</a> 和 <a href=\"#dataZoom-slider.end\">dataZoom-slider.end</a> 共同用 <strong>百分比</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": 0
},
"end": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的结束百分比。范围是：0 ~ 100。</p>\n<p><a href=\"#dataZoom-slider.start\">dataZoom-slider.start</a> 和 <a href=\"#dataZoom-slider.end\">dataZoom-slider.end</a> 共同用 <strong>百分比</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": 100
},
"startValue": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的起始数值。定义了 <code>startValue</code> 时，则 <a href=\"#dataZoom-slider.start\">dataZoom-slider.start</a> 失效。</p>\n<p><a href=\"#dataZoom-slider.startValue\">dataZoom-slider.startValue</a> 和 <a href=\"#dataZoom-slider.endValue\">dataZoom-slider.endValue</a> 共同用 <strong>绝对数值</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": null
},
"endValue": {
"type": [
"number"
],
"descriptionCN": "<p>数据窗口范围的结束数值。定义了 <code>endValue</code> 时，则 <a href=\"#dataZoom-slider.end\">dataZoom-slider.end</a> 失效。</p>\n<p><a href=\"#dataZoom-slider.startValue\">dataZoom-slider.startValue</a> 和 <a href=\"#dataZoom-slider.endValue\">dataZoom-slider.endValue</a> 共同用 <strong>绝对数值</strong> 的形式定义了数据窗口范围。</p>\n",
"defaultValue": null
},
"orient": {
"type": [
"string"
],
"descriptionCN": "<p>布局方式是横还是竖。不仅是布局方式，对于直角坐标系而言，也决定了，缺省情况控制横向数轴还是纵向数轴。</p>\n<p>可选值为：</p>\n<ul>\n<li><p><code>&#39;horizontal&#39;</code>：水平。</p>\n</li>\n<li><p><code>&#39;vertical&#39;</code>：竖直。</p>\n</li>\n</ul>\n",
"defaultValue": null
},
"zoomLock": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否锁定选择区域（或叫做数据窗口）的大小。</p>\n<p>如果设置为 <code>true</code> 则锁定选择区域的大小，也就是说，只能平移，不能缩放。</p>\n",
"defaultValue": false
},
"throttle": {
"type": [
"number"
],
"descriptionCN": "<p>设置触发视图刷新的频率。单位为毫秒（ms）。一般不需要更改这个值。</p>\n",
"defaultValue": 100
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 2
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>dataZoom-slider组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>dataZoom-slider组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "'auto'"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>dataZoom-slider组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>dataZoom-slider组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
"defaultValue": "'auto'"
}
}
}
]
},
"descriptionCN": "<p><code>dataZoomx</code> 组件 用于对数据进行区域缩放，从而能自由关注细节的数据信息，或者概览数据整体。</p>\n<p>现在支持几种子组件：</p>\n<ul>\n<li><p><a href=\"#dataZoom-inside\">内置型数据区域缩放组件（dataZoomInside）</a>：内置于坐标系中。</p>\n</li>\n<li><p><a href=\"#dataZoom-slider\">滑动条型数据区域缩放组件（dataZoomSlider）</a>：有单独的滑动条操作。</p>\n</li>\n<li><p><a href=\"#toolbox.feature.dataZoom\">框选型数据区域缩放组件（dataZoomSelect）</a>：全屏的选框进行数据区域缩放。入口和配置项均在 <code>toolbox</code>中。</p>\n</li>\n</ul>\n<p>如下例子：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/scatter-dataZoom-all&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n\n\n<p><strong>使用注意：</strong></p>\n<ul>\n<li><p><code>dataZoom</code> 主要是对 <code>数轴（axis）</code> 进行操作。</p>\n<p>  可以通过 <a href=\"#dataZoom.xAxisIndex\">dataZoom.xAxisIndex</a> 或 <a href=\"#dataZoom.yAxisIndex\">dataZoom.yAxisIndex</a> 或 <a href=\"#dataZoom.radiusAxisIndex\">dataZoom.radiusAxisIndex</a> 或 <a href=\"#dataZoom.angleAxisIndex\">dataZoom.angleAxisIndex</a> 来指定 <code>dataZoom</code> 控制哪个或哪些数轴。</p>\n</li>\n<li><p><code>dataZoom</code> 组件可 <strong>同时存在多个</strong>，起到共同控制的作用。控制同一个数轴的组件，会自动联动。</p>\n</li>\n<li><p><code>dataZoom</code> 的运行原理是通过 <code>数据过滤</code> 来达到 <code>数据窗口缩放</code> 的效果。</p>\n<p>  数据过滤模式的设置不同，效果也不同，参见：<a href=\"#dataZoom.filterMode\">dataZoom.filterMode</a>。</p>\n</li>\n<li><p><code>dataZoom</code> 的数据窗口范围的设置，目前支持两种形式：</p>\n<ul>\n<li><p>百分比形式：参见 <a href=\"#dataZoom.start\">dataZoom.start</a> 和 <a href=\"#dataZoom.end\">dataZoom.end</a>。</p>\n</li>\n<li><p>绝对数值形式：参见 <a href=\"#dataZoom.startValue\">dataZoom.startValue</a> 和 <a href=\"#dataZoom.endValue\">dataZoom.endValue</a>。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><br>\n<br></p>\n<p>下面是详细介绍：</p>\n"
},
"visualMap": {
"type": "Array",
"items": {
"anyOf": [
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>连续型视觉映射组件（visualMapContinuous）</strong></p>\n<p>（参考<a href=\"#visualMap\">视觉映射组件（visualMap）的介绍</a>）</p>\n<p>展现形式如下图：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/map-visualMap-continuous&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n<p><code>visualMapContinuous</code>中，可以通过 <a href=\"#visualMap.calculable\">visualMap.calculable</a> 来开启或关闭『值域漫游』（即手柄拖拽改变值域的功能）。</p>\n<p><br>\n<br></p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>类型为连续型。</p>\n",
"defaultValue": "continuous"
},
"min": {
"type": [
"number"
],
"descriptionCN": "<p>指定 visualMapContinuous 组件的最小值。<code>&#39;min&#39;</code> 必须用户指定。</p>\n"
},
"max": {
"type": [
"number"
],
"descriptionCN": "<p>指定 visualMapContinuous 组件的最大值。<code>&#39;max&#39;</code> 必须用户指定。</p>\n"
},
"calculable": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否启用值域漫游，即是否有拖拽用的手柄，以及用手柄调整选中范围。</p>\n<p>（注：为兼容 ECharts2，当 <a href=\"#visualMap.type\">visualMap.type</a> 未指定时，假如设置了 <code>&#39;calculable&#39;</code>，则<code>type</code>自动被设置为<code>&#39;continuous&#39;</code>，无视 <a href=\"#visualMap-piecewise.splitNumber\">visualMap-piecewise.splitNumber</a> 等设置。所以，建议使用者不要不指定 <a href=\"#visualMap.type\">visualMap.type</a>，否则表意不清晰。）</p>\n",
"defaultValue": false
},
"realtime": {
"type": [
"boolean"
],
"descriptionCN": "<p>拖拽时，是否实时更新。</p>\n<ul>\n<li>如果为<code>ture</code>则拖拽手柄过程中实时更新图表视图。</li>\n<li>如果为<code>false</code>则拖拽结束时，才更新视图。</li>\n</ul>\n",
"defaultValue": true
},
"inverse": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否反转。</p>\n<p>当<code>inverse</code>为<code>false</code>时，数据大小的位置规则，和直角坐标系相同，即：</p>\n<ul>\n<li>当 <a href=\"#visualMap.orient\">visualMap.orient</a> 为<code>&#39;vertical&#39;</code>时，数据上大下小。</li>\n<li>当 <a href=\"#visualMap.orient\">visualMap.orient</a> 为<code>&#39;horizontal&#39;</code>时，数据右大左小。</li>\n</ul>\n<p>当<code>inverse</code>为<code>true</code>时，相反。</p>\n",
"defaultValue": false
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>数据展示的小数精度，默认为0，无小数点。</p>\n",
"defaultValue": 0
},
"itemWidth": {
"type": [
"number"
],
"descriptionCN": "<p>图形的宽度，即长条的宽度。</p>\n",
"defaultValue": 20
},
"itemHeight": {
"type": [
"number"
],
"descriptionCN": "<p>图形的高度，即长条的高度。</p>\n",
"defaultValue": 140
},
"align": {
"type": [
"*"
],
"descriptionCN": "<p>指定组件中手柄和文字的摆放关系，可选值为：</p>\n<ul>\n<li><code>&#39;auto&#39;</code> 自动决定。</li>\n<li><code>&#39;left&#39;</code> 手柄和label在右，orient 为 horizontal 时有效。</li>\n<li><code>&#39;right&#39;</code> 手柄和label在左，orient 为 horizontal 时有效。</li>\n<li><code>&#39;top&#39;</code> 手柄和label在下，orient 为 vertical 时有效。</li>\n<li><code>&#39;bottom&#39;</code> 手柄和label在上，orient 为 vertical 时有效。</li>\n</ul>\n",
"defaultValue": "auto"
},
"text": {
"type": [
"Array"
],
"descriptionCN": "<p>两端的文本，如 <code>[&#39;High&#39;, &#39;Low&#39;]</code>。<a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/map-visualMap-continuous-text&amp;edit=1&amp;reset=1\" target=\"_blank\">参见例子</a>。</p>\n<p><code>text</code> 中的顺序，其实试试就知道。若要看详细的规则，参见 <a href=\"#visualMap.inverse\">visualMap.inverse</a>。</p>\n",
"defaultValue": null
},
"textGap": {
"type": [
"Array"
],
"descriptionCN": "<p>两端文字主体之间的距离，单位为px。参见 <a href=\"#visualMap-continuous.text\">visualMap-continuous.text</a></p>\n",
"defaultValue": 10
},
"handlePosition": {
"type": [
"string"
],
"descriptionCN": "<p><code>handle</code> 指『拖拽手柄』。<code>handlePosition</code> 指定了手柄的位置。可选值：</p>\n<ul>\n<li><code>&#39;auto&#39;</code>：自动决定。</li>\n<li><code>&#39;left&#39;</code> 或 <code>&#39;right&#39;</code>：当<a href=\"#visualMap-continuous.orient\">visualMap-continuous.orient</a> 为<code>&#39;horizontal&#39;</code>时，有效。</li>\n<li><code>&#39;top&#39;</code> 或 <code>&#39;bottom&#39;</code>：当<a href=\"#visualMap-continuous.orient\">visualMap-continuous.orient</a> 为<code>&#39;vertical&#39;</code>时，有效。</li>\n</ul>\n",
"defaultValue": "'auto'"
},
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示 visualMap-continuous 组件。如果设置为 <code>false</code>，不会显示，但是数据映射的功能还存在。</p>\n",
"defaultValue": true
},
"dimension": {
"type": [
"string"
],
"descriptionCN": "<p>指定用数据的『哪个维度』，映射到视觉元素上。『数据』即 <a href=\"#series.data\">series.data</a>。\n可以把 <a href=\"#series.data\">series.data</a> 理解成一个二维数组，例如：</p>\n<pre><code class=\"lang-javascript\">[\n    [12, 23, 43],\n    [12, 23, 43],\n    [43, 545, 65],\n    [92, 23, 33]\n]\n</code></pre>\n<p>其中每个列是一个维度，即 <code>dimension</code>。\n例如 <code>dimension</code> 为1时，取第二列，映射到视觉元素上。</p>\n",
"defaultValue": 0
},
"seriesIndex": {
"type": [
"number"
],
"descriptionCN": "<p>指定取哪个系列的数据，即哪个系列的 <a href=\"#series.data\">series.data</a>。</p>\n",
"defaultValue": 0
},
"inRange": {
"type": [
"*"
],
"descriptionCN": "<p>定义 <strong>在选中范围中</strong> 的视觉元素。可选的视觉元素有：</p>\n<p><code>图形类别（symbol）</code>、<code>图形大小（symbolSize）</code><br>\n<code>颜色（color）</code>、<code>颜色透明度（colorAlpha）</code>、<br>\n<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code></p>\n<p><code>inRange</code> 能定义目标系列（参见 <a href=\"#visualMap-continuous.seriesIndex\">visualMap-continuous.seriesIndex</a>）视觉形式，也同时定义了 <code>visualMap-continuous</code> 本身的视觉样式。通俗来讲就是，假如 <code>visualMap-continuous</code>控制的是散点图，那么 <code>inRange</code> 同时定义了散点图的 <code>颜色</code>、<code>尺寸</code> 等，也定义了 <code>visualMap-continuous</code> 本身的 <code>颜色</code>、<code>尺寸</code> 等。这二者能对应上。</p>\n<p>定义方式，例如：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        inRange: {\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [30, 100]\n        }\n    }\n]\n</code></pre>\n<p>如果想分别定义 <code>visualMap-continuous</code> 本身的视觉样式和 <code>目标系列</code> 的视觉样式，则这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        target: { // 表示 目标系列 的视觉样式。\n            inRange: {\n                color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n                symbolSize: [60, 200]\n            }\n        },\n        controller: { // 表示 visualMap-continuous 本身的视觉样式。\n            inRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p>或者这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        inRange: { // 表示 目标系列 的视觉样式 和 visualMap-continuous 共有的视觉样式。\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [60, 200]\n        },\n        controller: { // 表示 visualMap-continuous 本身的视觉样式，会覆盖共有的视觉样式。\n            inRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p><strong>关于视觉类型</strong></p>\n<ul>\n<li><p>inRange 中，可以有任意几个的『视觉类型』定义（如 <code>color</code>、<code>symbolSize</code> 等）。这些视觉类型，会被同时采用。</p>\n</li>\n<li><p>每个视觉类型的值，都以 <code>Array</code> 形式表示（只有在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 下会以 <code>Object</code> 形式表示，下面阐述）。如果写成 <code>number</code> 或 <code>string</code>，会转成 <code>Array</code>。</p>\n</li>\n<li><p><code>Array</code> 的内容：</p>\n<ul>\n<li><p>对于 <code>图形大小（symbolSize）</code>、<code>颜色透明度（colorAlpha）</code>、<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code>：</p>\n<p><code>Array</code> 总是：<code>[最小数据值对应的视觉值, 最大数据值对应的视觉值]</code>。</p>\n<p>比如：colorLightness: [0.8, 0.2]，表示所有数据值中，<code>最小数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.8</code>，<code>最大数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.2</code>，中间其他数据值，按照线性计算出映射结果。</p>\n</li>\n<li><p>对于 <code>颜色（color）</code> 或 <code>图形类别（symbol）</code>：</p>\n<p><code>Array</code> 例如：<code>[&#39;color0&#39;, &#39;color1&#39;, &#39;color2&#39;, ...]</code> 或 <code>[&#39;circle&#39;, &#39;rect&#39;, &#39;diamond&#39;, ...]</code>。</p>\n<p>表示，最小数据值，映射到 <code>Array</code> 的第一项，最大数据值映射到 <code>Array</code> 的最后一项。其他值，按照线性计算得到结果。</p>\n</li>\n</ul>\n</li>\n<li><p>在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 模式下，视觉定义采用 <code>Object</code>。例如（<a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/scatter-visualMap-categories&amp;edit=1&amp;reset=1\" target=\"_blank\">参见示例</a>）：</p>\n</li>\n</ul>\n<pre><code class=\"lang-javascript\">inRange: {\n    color: {\n        &#39;优&#39;: &#39;red&#39;,\n        &#39;良&#39;: &#39;black&#39;,\n        &#39;&#39;: &#39;green&#39; // 空字串，表示其他都是 &#39;green&#39;。\n    }\n}\n</code></pre>\n"
},
"outOfRange": {
"type": [
"*"
],
"descriptionCN": "<p>定义 <strong>在选中范围外</strong> 的视觉元素。可选的视觉元素有：</p>\n<p><code>图形类别（symbol）</code>、<code>图形大小（symbolSize）</code><br>\n<code>颜色（color）</code>、<code>颜色透明度（colorAlpha）</code>、<br>\n<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code></p>\n<p><code>outOfRange</code> 能定义目标系列（参见 <a href=\"#visualMap-continuous.seriesIndex\">visualMap-continuous.seriesIndex</a>）视觉形式，也同时定义了 <code>visualMap-continuous</code> 本身的视觉样式。通俗来讲就是，假如 <code>visualMap-continuous</code>控制的是散点图，那么 <code>outOfRange</code> 同时定义了散点图的 <code>颜色</code>、<code>尺寸</code> 等，也定义了 <code>visualMap-continuous</code> 本身的 <code>颜色</code>、<code>尺寸</code> 等。这二者能对应上。</p>\n<p>定义方式，例如：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        outOfRange: {\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [30, 100]\n        }\n    }\n]\n</code></pre>\n<p>如果想分别定义 <code>visualMap-continuous</code> 本身的视觉样式和 <code>目标系列</code> 的视觉样式，则这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        target: { // 表示 目标系列 的视觉样式。\n            outOfRange: {\n                color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n                symbolSize: [60, 200]\n            }\n        },\n        controller: { // 表示 visualMap-continuous 本身的视觉样式。\n            outOfRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p>或者这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        outOfRange: { // 表示 目标系列 的视觉样式 和 visualMap-continuous 共有的视觉样式。\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [60, 200]\n        },\n        controller: { // 表示 visualMap-continuous 本身的视觉样式，会覆盖共有的视觉样式。\n            outOfRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p><strong>关于视觉类型</strong></p>\n<ul>\n<li><p>outOfRange 中，可以有任意几个的『视觉类型』定义（如 <code>color</code>、<code>symbolSize</code> 等）。这些视觉类型，会被同时采用。</p>\n</li>\n<li><p>每个视觉类型的值，都以 <code>Array</code> 形式表示（只有在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 下会以 <code>Object</code> 形式表示，下面阐述）。如果写成 <code>number</code> 或 <code>string</code>，会转成 <code>Array</code>。</p>\n</li>\n<li><p><code>Array</code> 的内容：</p>\n<ul>\n<li><p>对于 <code>图形大小（symbolSize）</code>、<code>颜色透明度（colorAlpha）</code>、<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code>：</p>\n<p><code>Array</code> 总是：<code>[最小数据值对应的视觉值, 最大数据值对应的视觉值]</code>。</p>\n<p>比如：colorLightness: [0.8, 0.2]，表示所有数据值中，<code>最小数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.8</code>，<code>最大数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.2</code>，中间其他数据值，按照线性计算出映射结果。</p>\n</li>\n<li><p>对于 <code>颜色（color）</code> 或 <code>图形类别（symbol）</code>：</p>\n<p><code>Array</code> 例如：<code>[&#39;color0&#39;, &#39;color1&#39;, &#39;color2&#39;, ...]</code> 或 <code>[&#39;circle&#39;, &#39;rect&#39;, &#39;diamond&#39;, ...]</code>。</p>\n<p>表示，最小数据值，映射到 <code>Array</code> 的第一项，最大数据值映射到 <code>Array</code> 的最后一项。其他值，按照线性计算得到结果。</p>\n</li>\n</ul>\n</li>\n<li><p>在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 模式下，视觉定义采用 <code>Object</code>。例如（<a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/scatter-visualMap-categories&amp;edit=1&amp;reset=1\" target=\"_blank\">参见示例</a>）：</p>\n</li>\n</ul>\n<pre><code class=\"lang-javascript\">outOfRange: {\n    color: {\n        &#39;优&#39;: &#39;red&#39;,\n        &#39;良&#39;: &#39;black&#39;,\n        &#39;&#39;: &#39;green&#39; // 空字串，表示其他都是 &#39;green&#39;。\n    }\n}\n</code></pre>\n"
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 4
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": 0
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "auto"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
"defaultValue": "auto"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
"defaultValue": 0
},
"orient": {
"type": [
"string"
],
"descriptionCN": "<p>水平（<code>&#39;horizontal&#39;</code>）或者竖直（<code>&#39;vertical&#39;</code>）。</p>\n",
"defaultValue": "'vertical'"
},
"padding": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>visualMap-continuous内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。</p>\n<p>使用示例：</p>\n<pre><code class=\"lang-js\">// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n    5,  // 上\n    10, // 右\n    5,  // 下\n    10, // 左\n]\n</code></pre>\n",
"defaultValue": 5
},
"backgroundColor": {
"type": [
"Color"
],
"descriptionCN": "<p>背景色。</p>\n",
"defaultValue": "'rgba(0,0,0,0)'"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>边框颜色。</p>\n",
"defaultValue": "'#ccc'"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>边框线宽，单位px。</p>\n",
"defaultValue": 0
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签的格式化工具。</p>\n<ul>\n<li>如果为<code>string</code>，表示模板，例如：<code>aaaa{value}bbbb{value2}</code>。其中 <code>{value}</code> 和 <code>{value2}</code> 是当前的范围大小。</li>\n<li>如果为 <code>Function</code>，表示回调函数，形如：</li>\n</ul>\n<pre><code class=\"lang-javascript\">formatter: function (value, value2) {\n    return &#39;aaaa&#39; + value + &#39;bbbb&#39; + value2; // 范围标签显示内容。\n}\n</code></pre>\n"
},
"color": {
"type": [
"Array"
],
"descriptionCN": "<p>这个配置项，是为了兼容 ECharts2 而存在，ECharts3 中已经不推荐使用。它的功能已经移到了 <a href=\"#visualMap-continuous.inRange\">visualMap-continuous.inRange</a> 和 <a href=\"#visualMap-continuous.outOfRange\">visualMap-continuous.outOfRange</a> 中。</p>\n<p>如果要使用，则须注意，<code>color</code>属性中的顺序是由数值 <code>大</code> 到 <code>小</code>，但是 <a href=\"#visualMap-continuous.inRange\">visualMap-continuous.inRange</a> 或 <a href=\"#visualMap-continuous.outOfRange\">visualMap-continuous.outOfRange</a> 中 <code>color</code> 的顺序，总是由数值 <code>小</code> 到 <code>大</code>。二者不一致。</p>\n",
"defaultValue": "['#bf444c', '#d88273', '#f6efa6']"
},
"textStyle": {
"type": [
"*"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>visualMap 文字的颜色。</p>\n",
"defaultValue": "#333"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>visualMap 文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>visualMap 文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>visualMap 文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>visualMap 文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
},
{
"type": [
"Object"
],
"descriptionCN": "<p><strong>分段型视觉映射组件（visualMapPiecewise）</strong></p>\n<p>（参考<a href=\"#visualMap\">视觉映射组件（visualMap）的介绍</a>）</p>\n<p>展现形式如下图：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/scatter-visualMap-piecewise&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n\n<p>分段型视觉映射组件，有三种模式：</p>\n<ul>\n<li>连续型数据平均分段: 依据 <a href=\"#visualMap-piecewise.splitNumber\">visualMap-piecewise.splitNumber</a> 来自动平均分割成若干块。</li>\n<li>连续型数据自定义分段: 依据 <a href=\"#visualMap-piecewise.pieces\">visualMap-piecewise.pieces</a> 来定义每块范围。</li>\n<li>离散数据（类别性数据）: 类别定义在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 中。</li>\n</ul>\n<p><br>\n<br></p>\n",
"properties": {
"type": {
"type": [
"string"
],
"descriptionCN": "<p>类型为分段型。</p>\n",
"defaultValue": "piecewise"
},
"splitNumber": {
"type": [
"number"
],
"descriptionCN": "<p>对于连续型数据，自动平均切分成几段。默认为5段。\n连续数据的范围需要 <a href=\"#visualMap-piecewise.max\">max</a> 和 <a href=\"#visualMap-piecewise.min\">min</a> 来指定。</p>\n<p>如果设置了 <a href=\"#visualMap-piecewise.pieces\">visualMap-piecewise.pieces</a> 或者 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a>，则 <code>splitNumber</code> 无效。</p>\n",
"defaultValue": 5
},
"pieces": {
"type": [
"Array"
],
"descriptionCN": "<p>自定义『分段式视觉映射组件（visualMapPiecewise）』的每一段的范围，以及每一段的文字，以及每一段的特别的样式。例如：</p>\n<pre><code class=\"lang-javascript\">pieces: [\n    {min: 1500},\n    {min: 900, max: 1500},\n    {min: 310, max: 1000},\n    {min: 200, max: 300},\n    {min: 10, max: 200, label: &#39;10 到 200（自定义label）&#39;},\n    {value: 123, label: &#39;123（自定义特殊颜色）&#39;, color: &#39;grey&#39;},\n    {max: 5}\n]\n</code></pre>\n<p><a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/map-visualMap-pieces&amp;edit=1&amp;reset=1\" target=\"_blank\">参见示例</a></p>\n<p>（注：在 ECharts2 中，<code>pieces</code> 叫做 <code>splitList</code>。现在后者仍兼容，但推荐使用 <code>pieces</code>）</p>\n<p><code>pieces</code> 中的顺序，其实试试就知道。若要看详细的规则，参见 <a href=\"#visualMap.inverse\">visualMap.inverse</a>。</p>\n"
},
"categories": {
"type": [
"Array"
],
"descriptionCN": "<p>用于表示离散型数据（或可以称为类别型数据、枚举型数据）。</p>\n<p>当所指定的维度（<a href=\"#visualMap-piecewise.dimension\">visualMap-piecewise.dimension</a>）的数据为离散型数据时，例如数据值为『优』、『良』等，那么可如下配置：</p>\n<pre><code class=\"lang-javascript\">categories: [&#39;严重污染&#39;, &#39;重度污染&#39;, &#39;中度污染&#39;, &#39;轻度污染&#39;, &#39;良&#39;, &#39;优&#39;],\n</code></pre>\n<p><a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/scatter-visualMap-categories&amp;edit=1&amp;reset=1\" target=\"_blank\">参见示例</a></p>\n<p><code>categories</code> 中的顺序，其实试试就知道。若要看详细的规则，参见 <a href=\"#visualMap.inverse\">visualMap.inverse</a>。</p>\n"
},
"min": {
"type": [
"number"
],
"descriptionCN": "<p>指定 visualMapPiecewise 组件的最小值。参见 <a href=\"#visualMap-piecewise.splitNumber\">visualMap-piecewise.splitNumber</a></p>\n<p>指定了 <a href=\"#visualMap-piecewise.pieces\">visualMap-piecewise.pieces</a> 或 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 时，<code>&#39;min&#39;</code> 不需指定。</p>\n"
},
"max": {
"type": [
"number"
],
"descriptionCN": "<p>指定 visualMapPiecewise 组件的最大值。参见 <a href=\"#visualMap-piecewise.splitNumber\">visualMap-piecewise.splitNumber</a></p>\n<p>指定了 <a href=\"#visualMap-piecewise.pieces\">visualMap-piecewise.pieces</a> 或 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 时，<code>&#39;max&#39;</code>不需指定。</p>\n"
},
"selectedMode": {
"type": [
"string"
],
"descriptionCN": "<p>选择模式，可以是：</p>\n<ul>\n<li><code>&#39;multiple&#39;</code>（多选）。</li>\n<li><code>&#39;single&#39;</code>（单选）。</li>\n</ul>\n",
"defaultValue": "'multiple'"
},
"inverse": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否反转。</p>\n<ul>\n<li><p>当 <a href=\"#visualMap-piecewise.splitNumber\">visualMap-piecewise.splitNumber</a> 模式时，数据大小规则，同 <a href=\"#visualMap-continuous.inverse\">visualMap-continuous.inverse</a>。</p>\n</li>\n<li><p>当 <a href=\"#visualMap-piecewise.pieces\">visualMap-piecewise.pieces</a> 或者 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 模式时，每个块的排布位置，取决于 <code>pieces</code> 或 <code>categories</code> 列表的定义顺序，即：</p>\n<ul>\n<li><p>当<code>inverse</code>为<code>false</code>时：</p>\n<ul>\n<li><p>当 <a href=\"#visualMap.orient\">visualMap.orient</a> 为 <code>&#39;vertical&#39;</code> 时，<code>pieces[0]</code> 或 <code>categories[0]</code>对应『上方』</p>\n</li>\n<li><p>当 <a href=\"#visualMap.orient\">visualMap.orient</a> 为 <code>&#39;horizontal&#39;</code> 时，<code>pieces[0]</code> 或 <code>categories[0]</code> 对应『左方』。</p>\n</li>\n</ul>\n</li>\n<li><p>当 <code>inverse</code> 为 <code>true</code> 时，与上面相反。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>其实没有那么复杂，使用时候，试试就知道了。</p>\n",
"defaultValue": false
},
"precision": {
"type": [
"number"
],
"descriptionCN": "<p>数据展示的小数精度。</p>\n<ul>\n<li><p>当 <a href=\"#visualMap-piecewise.splitNumber\">visualMap-piecewise.splitNumber</a> 模式时，精度根据数据自动适应。</p>\n</li>\n<li><p>当 <a href=\"#visualMap-piecewise.pieces\">visualMap-piecewise.pieces</a> 或者 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 模式时，精度默认为0。</p>\n</li>\n</ul>\n",
"defaultValue": null
},
"itemWidth": {
"type": [
"number"
],
"descriptionCN": "<p>图形的宽度，即每个小块的宽度。</p>\n",
"defaultValue": 20
},
"itemHeight": {
"type": [
"number"
],
"descriptionCN": "<p>图形的高度，即每个小块的高度。</p>\n",
"defaultValue": 14
},
"align": {
"type": [
"*"
],
"descriptionCN": "<p>指定组件中图形（比如小方块）和文字的摆放关系，可选值为：</p>\n<ul>\n<li><code>&#39;auto&#39;</code> 自动决定。</li>\n<li><code>&#39;left&#39;</code> 图形在左文字在右。</li>\n<li><code>&#39;right&#39;</code> 图形在右文字在左。</li>\n</ul>\n",
  "defaultValue": "auto"
},
"text": {
"type": [
"Array"
],
"descriptionCN": "<p>两端的文本，如[&#39;High&#39;, &#39;Low&#39;]。<a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/map-visualMap-piecewise-text&amp;edit=1&amp;reset=1\" target=\"_blank\">参见例子</a>。</p>\n<p><code>text</code> 中的顺序，其实试试就知道。若要看详细的规则，参见 <a href=\"#visualMap.inverse\">visualMap.inverse</a>。</p>\n<p>兼容 ECharts2，当有 <code>text</code> 时，label不显示。</p>\n",
"defaultValue": null
},
"textGap": {
"type": [
"Array"
],
"descriptionCN": "<p>两端文字主体之间的距离，单位为px。参见 <a href=\"#visualMap-piecewise.text\">visualMap-piecewise.text</a></p>\n",
"defaultValue": 10
},
"itemGap": {
"type": [
"*"
],
"descriptionCN": "<p>每一项之间的间隔距离，单位为px。</p>\n",
  "defaultValue":"10"
},
"itemSymbol": {
"type": [
"string"
],
"descriptionCN": "<p>默认的图形。可选值为：\n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>。</p>\n<p>symbol的设置参见 <a href=\"#visualMap-piecewise.inRange\">visualMap-piecewise.inRange</a> 和 <a href=\"#visualMap-piecewise.outOfRange\">visualMap-piecewise.outOfRange</a>。</p>\n<p>当他们没有进行指定时，取此 <code>itemSymbol</code> 为默认值。</p>\n",
"defaultValue": "'roundRect'"
},
"show": {
"type": [
"boolean"
],
"descriptionCN": "<p>是否显示 visualMap-piecewise 组件。如果设置为 <code>false</code>，不会显示，但是数据映射的功能还存在。</p>\n",
"defaultValue": true
},
"dimension": {
"type": [
"string"
],
"descriptionCN": "<p>指定用数据的『哪个维度』，映射到视觉元素上。『数据』即 <a href=\"#series.data\">series.data</a>。\n可以把 <a href=\"#series.data\">series.data</a> 理解成一个二维数组，例如：</p>\n<pre><code class=\"lang-javascript\">[\n    [12, 23, 43],\n    [12, 23, 43],\n    [43, 545, 65],\n    [92, 23, 33]\n]\n</code></pre>\n<p>其中每个列是一个维度，即 <code>dimension</code>。\n例如 <code>dimension</code> 为1时，取第二列，映射到视觉元素上。</p>\n",
"defaultValue": 0
},
"seriesIndex": {
"type": [
"number"
],
"descriptionCN": "<p>指定取哪个系列的数据，即哪个系列的 <a href=\"#series.data\">series.data</a>。</p>\n",
"defaultValue": 0
},
"inRange": {
"type": [
"*"
],
"descriptionCN": "<p>定义 <strong>在选中范围中</strong> 的视觉元素。可选的视觉元素有：</p>\n<p><code>图形类别（symbol）</code>、<code>图形大小（symbolSize）</code><br>\n<code>颜色（color）</code>、<code>颜色透明度（colorAlpha）</code>、<br>\n<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code></p>\n<p><code>inRange</code> 能定义目标系列（参见 <a href=\"#visualMap-piecewise.seriesIndex\">visualMap-piecewise.seriesIndex</a>）视觉形式，也同时定义了 <code>visualMap-piecewise</code> 本身的视觉样式。通俗来讲就是，假如 <code>visualMap-piecewise</code>控制的是散点图，那么 <code>inRange</code> 同时定义了散点图的 <code>颜色</code>、<code>尺寸</code> 等，也定义了 <code>visualMap-piecewise</code> 本身的 <code>颜色</code>、<code>尺寸</code> 等。这二者能对应上。</p>\n<p>定义方式，例如：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        inRange: {\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [30, 100]\n        }\n    }\n]\n</code></pre>\n<p>如果想分别定义 <code>visualMap-piecewise</code> 本身的视觉样式和 <code>目标系列</code> 的视觉样式，则这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        target: { // 表示 目标系列 的视觉样式。\n            inRange: {\n                color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n                symbolSize: [60, 200]\n            }\n        },\n        controller: { // 表示 visualMap-piecewise 本身的视觉样式。\n            inRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p>或者这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        inRange: { // 表示 目标系列 的视觉样式 和 visualMap-piecewise 共有的视觉样式。\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [60, 200]\n        },\n        controller: { // 表示 visualMap-piecewise 本身的视觉样式，会覆盖共有的视觉样式。\n            inRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p><strong>关于视觉类型</strong></p>\n<ul>\n<li><p>inRange 中，可以有任意几个的『视觉类型』定义（如 <code>color</code>、<code>symbolSize</code> 等）。这些视觉类型，会被同时采用。</p>\n</li>\n<li><p>每个视觉类型的值，都以 <code>Array</code> 形式表示（只有在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 下会以 <code>Object</code> 形式表示，下面阐述）。如果写成 <code>number</code> 或 <code>string</code>，会转成 <code>Array</code>。</p>\n</li>\n<li><p><code>Array</code> 的内容：</p>\n<ul>\n<li><p>对于 <code>图形大小（symbolSize）</code>、<code>颜色透明度（colorAlpha）</code>、<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code>：</p>\n<p><code>Array</code> 总是：<code>[最小数据值对应的视觉值, 最大数据值对应的视觉值]</code>。</p>\n<p>比如：colorLightness: [0.8, 0.2]，表示所有数据值中，<code>最小数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.8</code>，<code>最大数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.2</code>，中间其他数据值，按照线性计算出映射结果。</p>\n</li>\n<li><p>对于 <code>颜色（color）</code> 或 <code>图形类别（symbol）</code>：</p>\n<p><code>Array</code> 例如：<code>[&#39;color0&#39;, &#39;color1&#39;, &#39;color2&#39;, ...]</code> 或 <code>[&#39;circle&#39;, &#39;rect&#39;, &#39;diamond&#39;, ...]</code>。</p>\n<p>表示，最小数据值，映射到 <code>Array</code> 的第一项，最大数据值映射到 <code>Array</code> 的最后一项。其他值，按照线性计算得到结果。</p>\n</li>\n</ul>\n</li>\n<li><p>在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 模式下，视觉定义采用 <code>Object</code>。例如（<a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/scatter-visualMap-categories&amp;edit=1&amp;reset=1\" target=\"_blank\">参见示例</a>）：</p>\n</li>\n</ul>\n<pre><code class=\"lang-javascript\">inRange: {\n    color: {\n        &#39;优&#39;: &#39;red&#39;,\n        &#39;良&#39;: &#39;black&#39;,\n        &#39;&#39;: &#39;green&#39; // 空字串，表示其他都是 &#39;green&#39;。\n    }\n}\n</code></pre>\n"
},
"outOfRange": {
"type": [
"*"
],
"descriptionCN": "<p>定义 <strong>在选中范围外</strong> 的视觉元素。可选的视觉元素有：</p>\n<p><code>图形类别（symbol）</code>、<code>图形大小（symbolSize）</code><br>\n<code>颜色（color）</code>、<code>颜色透明度（colorAlpha）</code>、<br>\n<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code></p>\n<p><code>outOfRange</code> 能定义目标系列（参见 <a href=\"#visualMap-piecewise.seriesIndex\">visualMap-piecewise.seriesIndex</a>）视觉形式，也同时定义了 <code>visualMap-piecewise</code> 本身的视觉样式。通俗来讲就是，假如 <code>visualMap-piecewise</code>控制的是散点图，那么 <code>outOfRange</code> 同时定义了散点图的 <code>颜色</code>、<code>尺寸</code> 等，也定义了 <code>visualMap-piecewise</code> 本身的 <code>颜色</code>、<code>尺寸</code> 等。这二者能对应上。</p>\n<p>定义方式，例如：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        outOfRange: {\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [30, 100]\n        }\n    }\n]\n</code></pre>\n<p>如果想分别定义 <code>visualMap-piecewise</code> 本身的视觉样式和 <code>目标系列</code> 的视觉样式，则这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        target: { // 表示 目标系列 的视觉样式。\n            outOfRange: {\n                color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n                symbolSize: [60, 200]\n            }\n        },\n        controller: { // 表示 visualMap-piecewise 本身的视觉样式。\n            outOfRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p>或者这样定义：</p>\n<pre><code class=\"lang-javascript\">visualMap: [\n    {\n        ...,\n        outOfRange: { // 表示 目标系列 的视觉样式 和 visualMap-piecewise 共有的视觉样式。\n            color: [&#39;#121122&#39;, &#39;rgba(3,4,5,0.4)&#39;, &#39;red&#39;],\n            symbolSize: [60, 200]\n        },\n        controller: { // 表示 visualMap-piecewise 本身的视觉样式，会覆盖共有的视觉样式。\n            outOfRange: {\n                symbolSize: [30, 100]\n            }\n        }\n    }\n]\n</code></pre>\n<p><strong>关于视觉类型</strong></p>\n<ul>\n<li><p>outOfRange 中，可以有任意几个的『视觉类型』定义（如 <code>color</code>、<code>symbolSize</code> 等）。这些视觉类型，会被同时采用。</p>\n</li>\n<li><p>每个视觉类型的值，都以 <code>Array</code> 形式表示（只有在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 下会以 <code>Object</code> 形式表示，下面阐述）。如果写成 <code>number</code> 或 <code>string</code>，会转成 <code>Array</code>。</p>\n</li>\n<li><p><code>Array</code> 的内容：</p>\n<ul>\n<li><p>对于 <code>图形大小（symbolSize）</code>、<code>颜色透明度（colorAlpha）</code>、<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code>：</p>\n<p><code>Array</code> 总是：<code>[最小数据值对应的视觉值, 最大数据值对应的视觉值]</code>。</p>\n<p>比如：colorLightness: [0.8, 0.2]，表示所有数据值中，<code>最小数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.8</code>，<code>最大数据值</code> 映射到 <code>颜色明暗</code> 的 <code>0.2</code>，中间其他数据值，按照线性计算出映射结果。</p>\n</li>\n<li><p>对于 <code>颜色（color）</code> 或 <code>图形类别（symbol）</code>：</p>\n<p><code>Array</code> 例如：<code>[&#39;color0&#39;, &#39;color1&#39;, &#39;color2&#39;, ...]</code> 或 <code>[&#39;circle&#39;, &#39;rect&#39;, &#39;diamond&#39;, ...]</code>。</p>\n<p>表示，最小数据值，映射到 <code>Array</code> 的第一项，最大数据值映射到 <code>Array</code> 的最后一项。其他值，按照线性计算得到结果。</p>\n</li>\n</ul>\n</li>\n<li><p>在 <a href=\"#visualMap-piecewise.categories\">visualMap-piecewise.categories</a> 模式下，视觉定义采用 <code>Object</code>。例如（<a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/scatter-visualMap-categories&amp;edit=1&amp;reset=1\" target=\"_blank\">参见示例</a>）：</p>\n</li>\n</ul>\n<pre><code class=\"lang-javascript\">outOfRange: {\n    color: {\n        &#39;优&#39;: &#39;red&#39;,\n        &#39;良&#39;: &#39;black&#39;,\n        &#39;&#39;: &#39;green&#39; // 空字串，表示其他都是 &#39;green&#39;。\n    }\n}\n</code></pre>\n"
},
"zlevel": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
"defaultValue": 0
},
"z": {
"type": [
"number"
],
"descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
"defaultValue": 4
},
"left": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": 0
},
"top": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
"defaultValue": "auto"
},
"right": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
"defaultValue": "auto"
},
"bottom": {
"type": [
"string",
"number"
],
"descriptionCN": "<p>visualMap 组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
"defaultValue": 0
},
"orient": {
"type": [
"string"
],
"descriptionCN": "<p>水平（<code>&#39;horizontal&#39;</code>）或者竖直（<code>&#39;vertical&#39;</code>）。</p>\n",
"defaultValue": "'vertical'"
},
"padding": {
"type": [
"number",
"Array"
],
"descriptionCN": "<p>visualMap-piecewise内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。</p>\n<p>使用示例：</p>\n<pre><code class=\"lang-js\">// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n    5,  // 上\n    10, // 右\n    5,  // 下\n    10, // 左\n]\n</code></pre>\n",
"defaultValue": 5
},
"backgroundColor": {
"type": [
"Color"
],
"descriptionCN": "<p>背景色。</p>\n",
"defaultValue": "'rgba(0,0,0,0)'"
},
"borderColor": {
"type": [
"Color"
],
"descriptionCN": "<p>边框颜色。</p>\n",
"defaultValue": "'#ccc'"
},
"borderWidth": {
"type": [
"number"
],
"descriptionCN": "<p>边框线宽，单位px。</p>\n",
"defaultValue": 0
},
"formatter": {
"type": [
"string",
"Function"
],
"descriptionCN": "<p>标签的格式化工具。</p>\n<ul>\n<li>如果为<code>string</code>，表示模板，例如：<code>aaaa{value}bbbb{value2}</code>。其中 <code>{value}</code> 和 <code>{value2}</code> 是当前的范围大小。</li>\n<li>如果为 <code>Function</code>，表示回调函数，形如：</li>\n</ul>\n<pre><code class=\"lang-javascript\">formatter: function (value, value2) {\n    return &#39;aaaa&#39; + value + &#39;bbbb&#39; + value2; // 范围标签显示内容。\n}\n</code></pre>\n"
},
"color": {
"type": [
"Array"
],
"descriptionCN": "<p>这个配置项，是为了兼容 ECharts2 而存在，ECharts3 中已经不推荐使用。它的功能已经移到了 <a href=\"#visualMap-piecewise.inRange\">visualMap-piecewise.inRange</a> 和 <a href=\"#visualMap-piecewise.outOfRange\">visualMap-piecewise.outOfRange</a> 中。</p>\n<p>如果要使用，则须注意，<code>color</code>属性中的顺序是由数值 <code>大</code> 到 <code>小</code>，但是 <a href=\"#visualMap-piecewise.inRange\">visualMap-piecewise.inRange</a> 或 <a href=\"#visualMap-piecewise.outOfRange\">visualMap-piecewise.outOfRange</a> 中 <code>color</code> 的顺序，总是由数值 <code>小</code> 到 <code>大</code>。二者不一致。</p>\n",
"defaultValue": "['#bf444c', '#d88273', '#f6efa6']"
},
"textStyle": {
"type": [
"*"
],
"descriptionCN": "",
"properties": {
"color": {
"type": [
"Color"
],
"descriptionCN": "<p>visualMap 文字的颜色。</p>\n",
"defaultValue": "#333"
},
"fontStyle": {
"type": [
"string"
],
"descriptionCN": "<p>visualMap 文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontWeight": {
"type": [
"string"
],
"descriptionCN": "<p>visualMap 文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
"defaultValue": "'normal'"
},
"fontFamily": {
"type": [
"string"
],
"descriptionCN": "<p>visualMap 文字的字体系列</p>\n",
"defaultValue": "'sans-serief'"
},
"fontSize": {
"type": [
"number"
],
"descriptionCN": "<p>visualMap 文字的字体大小</p>\n",
"defaultValue": 12
}
}
}
}
}
]
},
"descriptionCN": "<p><code>visualMap</code> 是视觉映射组件，用于进行『视觉编码』，也就是将数据映射到视觉元素（视觉通道）。</p>\n<p>视觉元素可以是：<br></p>\n<p><code>图形类别（symbol）</code>、<code>图形大小（symbolSize）</code><br>\n<code>颜色（color）</code>、<code>颜色透明度（colorAlpha）</code>、<br>\n<code>颜色明暗度（colorLightness）</code>、<code>颜色饱和度（colorSaturation）</code>、<code>色调（colorHue）</code></p>\n<p><code>visualMap</code> 组件可以定义多个，从而可以同时对数据中的多个维度进行视觉映射。</p>\n<p><code>visualMap</code> 组件可以定义为 <a href=\"#visualMap-piecewise\">分段型（visualMapPiecewise）</a> 或 <a href=\"#visualMap-continuous\">连续型（visualMapContinuous）</a>，通过 <code>type</code> 来区分。例如：</p>\n<pre><code class=\"lang-javascript\">option = {\n    visualMap: [\n        { // 第一个 visualMap 组件\n            type: &#39;continuous&#39;, // 定义为连续型 viusalMap\n            ...\n        },\n        { // 第二个 visualMap 组件\n            type: &#39;piecewise&#39;, // 定义为分段型 visualMap\n            ...\n        }\n    ],\n    ...\n};\n</code></pre>\n<p><br>\n<strong>视觉映射方式的配置</strong></p>\n<p>既然是『数据』到『视觉元素』的映射，<code>visualMap</code> 中可以指定数据的『哪个维度』（参见<a href=\"#visualMap.dimension\">visualMap.dimension</a>）映射到哪些『视觉元素』（参见<a href=\"#visualMap.inRange\">visualMap.inRange</a> 和 <a href=\"#visualMap.outOfRange\">visualMap.outOfRange</a>）中。</p>\n<p><br>\n<strong>与 ECharts2 中 dataRange 的关系</strong></p>\n<p><code>visualMap</code> 是由 ECharts2 中的 <code>dataRange</code> 组件改名以及扩展而来。ECharts3里 <code>option</code> 中的 <code>dataRange</code> 配置项仍然被兼容，会自动转换成 <code>visualMap</code> 配置项。在option中推荐写 <code>visualMap</code> 而非 <code>dataRange</code>。</p>\n<p><br>\n<strong>以下是visualMap各组件的详细介绍</strong></p>\n<p><br>\n<br></p>\n"
}
}