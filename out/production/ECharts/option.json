{
  "$schema": "http://echarts.baidu.com/doc/json-schem",
  "option": {
    "type": ["Object"],
    "properties": {
      "title": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>标题组件，包含主标题和副标题。</p>\n<p>在 ECharts 2.x 中单个 ECharts 实例最多只能拥有一个标题组件。但是在 ECharts 3 中可以存在任意多个标题组件，这在需要标题进行排版，或者单个实例中的多个图表都需要标题时会比较有用。</p>\n<p><strong>例如下面不同缓动函数效果的示例，每一个缓动效果图都带有一个标题组件：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=line-easing&edit=1&reset=1\" width=\"700\" height=\"400\" ></iframe>\n\n\n",
        "properties": {
          "show": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否显示标题组件。</p>\n",
            "defaultValue": false
          },
          "text": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>主标题文本，支持使用 <code>\\n</code> 换行。</p>\n",
            "defaultValue": "''"
          },
          "link": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>主标题文本超链接。</p>\n",
            "defaultValue": "''"
          },
          "target": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>指定窗口打开主标题超链接。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><p>&#39;self&#39;</p>\n<p>  当前窗口打开</p>\n</li>\n<li><p>&#39;blank&#39;</p>\n<p>  新窗口打开</p>\n</li>\n</ul>\n",
            "defaultValue": "'blank'"
          },
          "textStyle": {
            "type": [
              "*"
            ],
            "descriptionCN": "",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>主标题文字的颜色。</p>\n",
                "defaultValue": "'#333'"
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>主标题文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>主标题文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>主标题文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>主标题文字的字体大小</p>\n",
                "defaultValue": 18
              }
            }
          },
          "subtext": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>副标题文本，支持使用 <code>\\n</code> 换行。</p>\n",
            "defaultValue": "''"
          },
          "sublink": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>副标题文本超链接。</p>\n",
            "defaultValue": "''"
          },
          "subtarget": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>指定窗口打开副标题超链接，可选：</p>\n<ul>\n<li><p>&#39;self&#39; 当前窗口打开</p>\n</li>\n<li><p>&#39;blank&#39; 新窗口打开</p>\n</li>\n</ul>\n",
            "defaultValue": "'blank'"
          },
          "subtextStyle": {
            "type": [
              "*"
            ],
            "descriptionCN": "",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>副标题文字的颜色。</p>\n",
                "defaultValue": "'#aaa'"
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>副标题文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>副标题文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>副标题文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>副标题文字的字体大小</p>\n",
                "defaultValue": 12
              }
            }
          },
          "padding": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>标题内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。</p>\n<p>使用示例：</p>\n<pre><code class=\"lang-js\">// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n    5,  // 上\n    10, // 右\n    5,  // 下\n    10, // 左\n]\n</code></pre>\n",
            "defaultValue": 5
          },
          "itemGap": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>主副标题之间的间距。</p>\n",
            "defaultValue": 5
          },
          "zlevel": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
            "defaultValue": 0
          },
          "z": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
            "defaultValue": 2
          },
          "left": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "top": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "right": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "bottom": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "backgroundColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>标题背景色，默认透明。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>   ，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code></p>\n</blockquote>\n",
            "defaultValue": "'transparent'"
          },
          "borderColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>标题的边框颜色。支持的颜色格式同 backgroundColor。</p>\n",
            "defaultValue": "'#ccc'"
          },
          "borderWidth": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>标题的边框线宽。</p>\n",
            "defaultValue": 1
          },
          "shadowBlur": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
          },
          "shadowColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
          },
          "shadowOffsetX": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
            "defaultValue": 0
          },
          "shadowOffsetY": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
            "defaultValue": 0
          }
        }
      },
      "grid": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>直角坐标系内绘图网格，单个 grid 内最多可以放置上下两个 X 轴，左右两个 Y 轴。可以在网格上绘制<a href=\"#series-line\">折线图</a>，<a href=\"#series-bar\">柱状图</a>，<a href=\"#series-scatter\">散点图（气泡图）</a>。</p>\n<p>在 ECharts 2.x 里单个 echarts 实例中最多只能存在一个 grid 组件，在 ECharts 3 中可以存在任意个 grid 组件。</p>\n<p><strong>例如下面这个 Anscombe Quartet 的示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=scatter-anscombe-quartet&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
        "properties": {
          "show": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否显示直角坐标系网格。</p>\n",
            "defaultValue": false
          },
          "zlevel": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
            "defaultValue": 0
          },
          "z": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
            "defaultValue": 2
          },
          "left": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "top": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": 60
          },
          "right": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
            "defaultValue": "'10%'"
          },
          "bottom": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
            "defaultValue": 60
          },
          "width": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件的宽度。默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "height": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>grid 组件的高度。默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "containLabel": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>grid 区域是否包含坐标轴的<a href=\"#yAxis.axisLabel\">刻度标签</a>，在无法确定坐标轴标签的宽度，容器有比较小无法预留较多空间的时候，可以设为 <code>true</code> 防止标签溢出容器。</p>\n",
            "defaultValue": false
          },
          "backgroundColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>网格背景色，默认透明。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>   ，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code></p>\n</blockquote>\n",
            "defaultValue": "'transparent'"
          },
          "borderColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>网格的边框颜色。支持的颜色格式同 backgroundColor。</p>\n",
            "defaultValue": "'#ccc'"
          },
          "borderWidth": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>网格的边框线宽。</p>\n",
            "defaultValue": 1
          },
          "shadowBlur": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
          },
          "shadowColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
          },
          "shadowOffsetX": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
            "defaultValue": 0
          },
          "shadowOffsetY": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
            "defaultValue": 0
          }
        }
      },
      "polar": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>极坐标系，可以用于散点图和折线图。每个极坐标系拥有一个<a href=\"#angleAxis\">角度轴</a>和一个<a href=\"#radiusAxis\">半径轴</a>。</p>\n<p><strong>示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=scatter-polar-punchCard&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n\n\n\n",
        "properties": {
          "zlevel": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
            "defaultValue": 0
          },
          "z": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
            "defaultValue": 2
          },
          "center": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>的中心（圆心）坐标，数组的第一项是横坐标，第二项是纵坐标。</p>\n<p>支持设置成百分比，设置成百分比时第一项是相对于容器宽度，第二项是相对于容器高度。</p>\n<p><strong>使用示例：</strong></p>\n<pre><code>// 设置成绝对的像素值\ncenter: [400, 300]\n// 设置成相对的百分比\ncenter: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>",
            "defaultValue": "['50%', '50%']"
          },
          "radius": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>的半径，数组的第一项是内半径，第二项是外半径。</p>\n<p>支持设置成百分比，相对于容器高宽中较小的一项的一半。</p>\n"
          }
        }
      },
      "xAxis": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>直角坐标系 grid 中的 x 轴，单个 grid 组件最多只能放上下两个 x 轴。</p>\n",
        "properties": {
          "gridIndex": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>x 轴所在的 grid 的索引，默认位于第一个 grid。</p>\n",
            "defaultValue": 0
          },
          "position": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>x 轴的位置。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;top&#39;</code></li>\n<li><code>&#39;bottom&#39;</code></li>\n</ul>\n<p>默认 grid 中的第一个 x 轴在 grid 的下方（<code>&#39;bottom&#39;</code>），第二个 x 轴视第一个 x 轴的位置放在另一侧。</p>\n"
          },
          "type": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code>&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据，为该类型时必须通过 <a href=\"#xAxis.data\">data</a> 设置类目数据。</p>\n</li>\n<li><p><code>&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。</p>\n</li>\n<li><p><code>&#39;log&#39;</code>\n  对数轴。适用于对数数据。</p>\n</li>\n</ul>\n",
            "defaultValue": "'category'"
          },
          "name": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称。</p>\n"
          },
          "nameLocation": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称显示位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code>&#39;start&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;end&#39;</code></li>\n</ul>\n",
            "defaultValue": "'start'"
          },
          "nameTextStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴名称的文字样式。</p>\n",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>坐标轴名称文字的颜色。</p>\n",
                "defaultValue": "\"#fff\""
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体大小</p>\n",
                "defaultValue": 12
              }
            }
          },
          "nameGap": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴名称与轴线之间的距离。</p>\n",
            "defaultValue": 15
          },
          "inverse": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否是反向坐标轴。ECharts 3 中新加。</p>\n",
            "defaultValue": false
          },
          "boundaryGap": {
            "type": [
              "boolean",
              "Array"
            ],
            "descriptionCN": "<p>坐标轴两边留白策略，类目轴和非类目轴的设置和表现不一样。</p>\n<p>类目轴中 <code>boundaryGap</code> 可以配置为 <code>true</code> 和 <code>false</code>。默认为 <code>true</code>，这时候<a href=\"#xAxis.axisTick\">刻度</a>只是作为分隔线，标签和数据点都会在两个<a href=\"#xAxis.axisTick\">刻度</a>之间的带(band)中间。</p>\n<p>非类目轴，包括时间，数值，对数轴，<code>boundaryGap</code>是一个两个值的数组，分别表示数据最小值和最大值的延伸范围，可以直接设置数值或者相对的百分比，在设置 <a href=\"#xAxis.min\">min</a> 和 <a href=\"#xAxis.max\">max</a> 后无效。<strong>示例：</strong></p>\n<pre><code class=\"lang-js\">boundaryGap: [&#39;20%&#39;, &#39;20%&#39;]\n</code></pre>\n"
          },
          "min": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最小值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMin&#39;</code>，此时取数据在该轴上的最小值作为最小刻度。</p>\n<p>不设置时会自动计算最小值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "max": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最大值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMax&#39;</code>，此时取数据在该轴上的最大值作为最大刻度。</p>\n<p>不设置时会自动计算最大值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "scale": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>只在数值轴中（<a href=\"#xAxis.type\">type</a>: &#39;value&#39;）有效。</p>\n<p>是否是脱离 0 值比例。设置成 <code>true</code> 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。</p>\n<p>在设置 <a href=\"#xAxis.min\">min</a> 和 <a href=\"#xAxis.max\">max</a> 之后该配置项无效。</p>\n",
            "defaultValue": false
          },
          "splitNumber": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴的分割段数，需要注意的是这个分割段数只是个预估值，最后实际显示的段数会在这个基础上根据分割后坐标轴刻度显示的易读程度作调整。</p>\n<p>在类目轴中无效。</p>\n",
            "defaultValue": 5
          },
          "interval": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴分割间隔。</p>\n<p>因为 <a href=\"#xAxis.splitNumber\">splitNumber</a> 是预估的值，实际根据策略计算出来的刻度可能无法达到想要的效果，这时候可以使用 interval 配合 <a href=\"#xAxis.min\">min</a>, <a href=\"#xAxis.max\">max</a> 强制设定刻度划分，一般不建议使用。</p>\n<p>无法在类目轴中使用。在时间轴（<a href=\"#xAxis.type\">type</a>: &#39;time&#39;）中需要传时间戳，在对数轴（<a href=\"#xAxis.type\">type</a>: &#39;log&#39;）中需要传指数值。</p>\n"
          },
          "axisLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴轴线相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴轴线。</p>\n",
                "defaultValue": true
              },
              "onZero": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>X 轴或者 Y 轴的轴线是否在另一个轴的 0 刻度上，只有在另一个轴为数值轴且包含 0 刻度时有效。</p>\n",
                "defaultValue": true
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴线线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisTick": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴刻度。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度的显示间隔，在类目轴中有效。默认同 <a href=\"#xAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>坐标轴刻度是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "length": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴刻度的长度。</p>\n",
                "defaultValue": 5
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisLabel": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度标签的相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示刻度标签。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>刻度标签是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "rotate": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。</p>\n<p>旋转的角度从 -90 度到 90 度。</p>\n",
                "defaultValue": 0
              },
              "margin": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签与轴线之间的距离。</p>\n",
                "defaultValue": 8
              },
              "formatter": {
                "type": [
                  "string",
                  "Function"
                ],
                "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                "defaultValue": null
              },
              "textStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>文字的颜色。</p>\n",
                    "defaultValue": "'#333'"
                  },
                  "fontStyle": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontWeight": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontFamily": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字的字体系列</p>\n",
                    "defaultValue": "'sans-serief'"
                  },
                  "fontSize": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>文字的字体大小</p>\n",
                    "defaultValue": 12
                  }
                }
              }
            }
          },
          "splitLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔线，默认显示。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔线。</p>\n",
                "defaultValue": false
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔线的显示间隔，在类目轴中有效。默认同 <a href=\"#xAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Array",
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线颜色，可以设置成单个颜色。</p>\n<p>也可以设置成颜色数组，分隔线会按数组中颜色的顺序依次循环设置颜色。</p>\n<p>示例</p>\n<pre><code>splitLine: {\n    lineStyle: {\n        // 使用深浅的间隔色\n        color: [&#39;#aaa&#39;, &#39;#ddd&#39;]\n    }\n}\n</code></pre>",
                    "defaultValue": "['#ccc']"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>分隔线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n<!-- overwrite color -->"
                  }
                }
              }
            }
          },
          "splitArea": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔区域，默认不显示。</p>\n",
            "properties": {
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔区域的显示间隔，在类目轴中有效。默认同 <a href=\"#xAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔区域。</p>\n",
                "defaultValue": false
              },
              "areaStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>分隔区域的样式设置。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Array"
                    ],
                    "descriptionCN": "<p>分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色。</p>\n",
                    "defaultValue": "['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "data": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>类目数据，在类目轴（<a href=\"#xAxis.type\">type</a>: &#39;category&#39;）中有效。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">// 所有类目名称列表\ndata: [&#39;周一&#39;, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n// 每一项也可以是具体的配置项，此时取配置项中的 `value` 为类目名\ndata: [{\n    value: &#39;周一&#39;,\n    // 突出周一\n    textStyle: {\n        fontSize: 20,\n        color: &#39;red&#39;\n    }\n}, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n</code></pre>\n",
            "items": {
              "type": "Object",
              "properties": {
                "value": {
                  "type": [
                    "string"
                  ],
                  "descriptionCN": "<p>单个类目名称。</p>\n"
                },
                "textStyle": {
                  "type": [
                    "Object"
                  ],
                  "descriptionCN": "<p>类目标签的文字样式。</p>\n",
                  "properties": {
                    "color": {
                      "type": [
                        "Color"
                      ],
                      "descriptionCN": "<p>文字的颜色。</p>\n",
                      "defaultValue": "\"#fff\""
                    },
                    "align": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字水平对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;left&#39;</code></li>\n<li><code>&#39;center&#39;</code></li>\n<li><code>&#39;right&#39;</code></li>\n</ul>\n"
                    },
                    "baseline": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字基线对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;top&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;bottom&#39;</code></li>\n</ul>\n"
                    },
                    "fontStyle": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontWeight": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontFamily": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字的字体系列</p>\n",
                      "defaultValue": "'sans-serief'"
                    },
                    "fontSize": {
                      "type": [
                        "number"
                      ],
                      "descriptionCN": "<p>文字的字体大小</p>\n",
                      "defaultValue": 12
                    }
                  }
                }
              }
            }
          }
        }
      },
      "yAxis": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>直角坐标系 grid 中的 y 轴，单个 grid 组件最多只能放左右两个 y 轴。</p>\n",
        "properties": {
          "gridIndex": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>y 轴所在的 grid 的索引，默认位于第一个 grid。</p>\n",
            "defaultValue": 0
          },
          "position": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>y 轴的位置。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;left&#39;</code></li>\n<li><code>&#39;right&#39;</code></li>\n</ul>\n<p>默认 grid 中的第一个 y 轴在 grid 的左侧（<code>&#39;left&#39;</code>），第二个 y 轴视第一个 y 轴的位置放在另一侧。</p>\n"
          },
          "type": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code>&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据，为该类型时必须通过 <a href=\"#yAxis.data\">data</a> 设置类目数据。</p>\n</li>\n<li><p><code>&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。</p>\n</li>\n<li><p><code>&#39;log&#39;</code>\n  对数轴。适用于对数数据。</p>\n</li>\n</ul>\n",
            "defaultValue": "'value'"
          },
          "name": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称。</p>\n"
          },
          "nameLocation": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称显示位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code>&#39;start&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;end&#39;</code></li>\n</ul>\n",
            "defaultValue": "'start'"
          },
          "nameTextStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴名称的文字样式。</p>\n",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>坐标轴名称文字的颜色。</p>\n",
                "defaultValue": "\"#fff\""
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体大小</p>\n",
                "defaultValue": 12
              }
            }
          },
          "nameGap": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴名称与轴线之间的距离。</p>\n",
            "defaultValue": 15
          },
          "inverse": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否是反向坐标轴。ECharts 3 中新加。</p>\n",
            "defaultValue": false
          },
          "boundaryGap": {
            "type": [
              "boolean",
              "Array"
            ],
            "descriptionCN": "<p>坐标轴两边留白策略，类目轴和非类目轴的设置和表现不一样。</p>\n<p>类目轴中 <code>boundaryGap</code> 可以配置为 <code>true</code> 和 <code>false</code>。默认为 <code>true</code>，这时候<a href=\"#yAxis.axisTick\">刻度</a>只是作为分隔线，标签和数据点都会在两个<a href=\"#yAxis.axisTick\">刻度</a>之间的带(band)中间。</p>\n<p>非类目轴，包括时间，数值，对数轴，<code>boundaryGap</code>是一个两个值的数组，分别表示数据最小值和最大值的延伸范围，可以直接设置数值或者相对的百分比，在设置 <a href=\"#yAxis.min\">min</a> 和 <a href=\"#yAxis.max\">max</a> 后无效。<strong>示例：</strong></p>\n<pre><code class=\"lang-js\">boundaryGap: [&#39;20%&#39;, &#39;20%&#39;]\n</code></pre>\n"
          },
          "min": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最小值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMin&#39;</code>，此时取数据在该轴上的最小值作为最小刻度。</p>\n<p>不设置时会自动计算最小值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "max": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最大值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMax&#39;</code>，此时取数据在该轴上的最大值作为最大刻度。</p>\n<p>不设置时会自动计算最大值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "scale": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>只在数值轴中（<a href=\"#yAxis.type\">type</a>: &#39;value&#39;）有效。</p>\n<p>是否是脱离 0 值比例。设置成 <code>true</code> 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。</p>\n<p>在设置 <a href=\"#yAxis.min\">min</a> 和 <a href=\"#yAxis.max\">max</a> 之后该配置项无效。</p>\n",
            "defaultValue": false
          },
          "splitNumber": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴的分割段数，需要注意的是这个分割段数只是个预估值，最后实际显示的段数会在这个基础上根据分割后坐标轴刻度显示的易读程度作调整。</p>\n<p>在类目轴中无效。</p>\n",
            "defaultValue": 5
          },
          "interval": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴分割间隔。</p>\n<p>因为 <a href=\"#yAxis.splitNumber\">splitNumber</a> 是预估的值，实际根据策略计算出来的刻度可能无法达到想要的效果，这时候可以使用 interval 配合 <a href=\"#yAxis.min\">min</a>, <a href=\"#yAxis.max\">max</a> 强制设定刻度划分，一般不建议使用。</p>\n<p>无法在类目轴中使用。在时间轴（<a href=\"#yAxis.type\">type</a>: &#39;time&#39;）中需要传时间戳，在对数轴（<a href=\"#yAxis.type\">type</a>: &#39;log&#39;）中需要传指数值。</p>\n"
          },
          "axisLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴轴线相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴轴线。</p>\n",
                "defaultValue": true
              },
              "onZero": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>X 轴或者 Y 轴的轴线是否在另一个轴的 0 刻度上，只有在另一个轴为数值轴且包含 0 刻度时有效。</p>\n",
                "defaultValue": true
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴线线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisTick": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴刻度。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度的显示间隔，在类目轴中有效。默认同 <a href=\"#yAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>坐标轴刻度是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "length": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴刻度的长度。</p>\n",
                "defaultValue": 5
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisLabel": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度标签的相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示刻度标签。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>刻度标签是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "rotate": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。</p>\n<p>旋转的角度从 -90 度到 90 度。</p>\n",
                "defaultValue": 0
              },
              "margin": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签与轴线之间的距离。</p>\n",
                "defaultValue": 8
              },
              "formatter": {
                "type": [
                  "string",
                  "Function"
                ],
                "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                "defaultValue": null
              },
              "textStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>文字的颜色。</p>\n",
                    "defaultValue": "'#333'"
                  },
                  "fontStyle": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontWeight": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontFamily": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字的字体系列</p>\n",
                    "defaultValue": "'sans-serief'"
                  },
                  "fontSize": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>文字的字体大小</p>\n",
                    "defaultValue": 12
                  }
                }
              }
            }
          },
          "splitLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔线，默认显示。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔线。</p>\n",
                "defaultValue": false
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔线的显示间隔，在类目轴中有效。默认同 <a href=\"#yAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Array",
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线颜色，可以设置成单个颜色。</p>\n<p>也可以设置成颜色数组，分隔线会按数组中颜色的顺序依次循环设置颜色。</p>\n<p>示例</p>\n<pre><code>splitLine: {\n    lineStyle: {\n        // 使用深浅的间隔色\n        color: [&#39;#aaa&#39;, &#39;#ddd&#39;]\n    }\n}\n</code></pre>",
                    "defaultValue": "['#ccc']"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>分隔线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n<!-- overwrite color -->"
                  }
                }
              }
            }
          },
          "splitArea": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔区域，默认不显示。</p>\n",
            "properties": {
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔区域的显示间隔，在类目轴中有效。默认同 <a href=\"#yAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔区域。</p>\n",
                "defaultValue": false
              },
              "areaStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>分隔区域的样式设置。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Array"
                    ],
                    "descriptionCN": "<p>分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色。</p>\n",
                    "defaultValue": "['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "data": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>类目数据，在类目轴（<a href=\"#yAxis.type\">type</a>: &#39;category&#39;）中有效。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">// 所有类目名称列表\ndata: [&#39;周一&#39;, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n// 每一项也可以是具体的配置项，此时取配置项中的 `value` 为类目名\ndata: [{\n    value: &#39;周一&#39;,\n    // 突出周一\n    textStyle: {\n        fontSize: 20,\n        color: &#39;red&#39;\n    }\n}, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n</code></pre>\n",
            "items": {
              "type": "Object",
              "properties": {
                "value": {
                  "type": [
                    "string"
                  ],
                  "descriptionCN": "<p>单个类目名称。</p>\n"
                },
                "textStyle": {
                  "type": [
                    "Object"
                  ],
                  "descriptionCN": "<p>类目标签的文字样式。</p>\n",
                  "properties": {
                    "color": {
                      "type": [
                        "Color"
                      ],
                      "descriptionCN": "<p>文字的颜色。</p>\n",
                      "defaultValue": "\"#fff\""
                    },
                    "align": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字水平对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;left&#39;</code></li>\n<li><code>&#39;center&#39;</code></li>\n<li><code>&#39;right&#39;</code></li>\n</ul>\n"
                    },
                    "baseline": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字基线对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;top&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;bottom&#39;</code></li>\n</ul>\n"
                    },
                    "fontStyle": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontWeight": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontFamily": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字的字体系列</p>\n",
                      "defaultValue": "'sans-serief'"
                    },
                    "fontSize": {
                      "type": [
                        "number"
                      ],
                      "descriptionCN": "<p>文字的字体大小</p>\n",
                      "defaultValue": 12
                    }
                  }
                }
              }
            }
          }
        }
      },
      "radiusAxis": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>极坐标系的半径轴。</p>\n",
        "properties": {
          "polarIndex": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>半径轴所在的极坐标系的索引，默认使用第一个极坐标系。</p>\n",
            "defaultValue": 0
          },
          "type": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code>&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据，为该类型时必须通过 <a href=\"#radiusAxis.data\">data</a> 设置类目数据。</p>\n</li>\n<li><p><code>&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。</p>\n</li>\n<li><p><code>&#39;log&#39;</code>\n  对数轴。适用于对数数据。</p>\n</li>\n</ul>\n",
            "defaultValue": "'value'"
          },
          "name": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称。</p>\n"
          },
          "nameLocation": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称显示位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code>&#39;start&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;end&#39;</code></li>\n</ul>\n",
            "defaultValue": "'start'"
          },
          "nameTextStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴名称的文字样式。</p>\n",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>坐标轴名称文字的颜色。</p>\n",
                "defaultValue": "\"#fff\""
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体大小</p>\n",
                "defaultValue": 12
              }
            }
          },
          "nameGap": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴名称与轴线之间的距离。</p>\n",
            "defaultValue": 15
          },
          "inverse": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否是反向坐标轴。ECharts 3 中新加。</p>\n",
            "defaultValue": false
          },
          "boundaryGap": {
            "type": [
              "boolean",
              "Array"
            ],
            "descriptionCN": "<p>坐标轴两边留白策略，类目轴和非类目轴的设置和表现不一样。</p>\n<p>类目轴中 <code>boundaryGap</code> 可以配置为 <code>true</code> 和 <code>false</code>。默认为 <code>true</code>，这时候<a href=\"#radiusAxis.axisTick\">刻度</a>只是作为分隔线，标签和数据点都会在两个<a href=\"#radiusAxis.axisTick\">刻度</a>之间的带(band)中间。</p>\n<p>非类目轴，包括时间，数值，对数轴，<code>boundaryGap</code>是一个两个值的数组，分别表示数据最小值和最大值的延伸范围，可以直接设置数值或者相对的百分比，在设置 <a href=\"#radiusAxis.min\">min</a> 和 <a href=\"#radiusAxis.max\">max</a> 后无效。<strong>示例：</strong></p>\n<pre><code class=\"lang-js\">boundaryGap: [&#39;20%&#39;, &#39;20%&#39;]\n</code></pre>\n"
          },
          "min": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最小值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMin&#39;</code>，此时取数据在该轴上的最小值作为最小刻度。</p>\n<p>不设置时会自动计算最小值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "max": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最大值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMax&#39;</code>，此时取数据在该轴上的最大值作为最大刻度。</p>\n<p>不设置时会自动计算最大值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "scale": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>只在数值轴中（<a href=\"#radiusAxis.type\">type</a>: &#39;value&#39;）有效。</p>\n<p>是否是脱离 0 值比例。设置成 <code>true</code> 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。</p>\n<p>在设置 <a href=\"#radiusAxis.min\">min</a> 和 <a href=\"#radiusAxis.max\">max</a> 之后该配置项无效。</p>\n",
            "defaultValue": false
          },
          "splitNumber": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴的分割段数，需要注意的是这个分割段数只是个预估值，最后实际显示的段数会在这个基础上根据分割后坐标轴刻度显示的易读程度作调整。</p>\n<p>在类目轴中无效。</p>\n",
            "defaultValue": 5
          },
          "interval": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴分割间隔。</p>\n<p>因为 <a href=\"#radiusAxis.splitNumber\">splitNumber</a> 是预估的值，实际根据策略计算出来的刻度可能无法达到想要的效果，这时候可以使用 interval 配合 <a href=\"#radiusAxis.min\">min</a>, <a href=\"#radiusAxis.max\">max</a> 强制设定刻度划分，一般不建议使用。</p>\n<p>无法在类目轴中使用。在时间轴（<a href=\"#radiusAxis.type\">type</a>: &#39;time&#39;）中需要传时间戳，在对数轴（<a href=\"#radiusAxis.type\">type</a>: &#39;log&#39;）中需要传指数值。</p>\n"
          },
          "axisLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴轴线相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴轴线。</p>\n",
                "defaultValue": true
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴线线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisTick": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴刻度。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度的显示间隔，在类目轴中有效。默认同 <a href=\"#radiusAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>坐标轴刻度是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "length": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴刻度的长度。</p>\n",
                "defaultValue": 5
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisLabel": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度标签的相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示刻度标签。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>刻度标签是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "rotate": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。</p>\n<p>旋转的角度从 -90 度到 90 度。</p>\n",
                "defaultValue": 0
              },
              "margin": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签与轴线之间的距离。</p>\n",
                "defaultValue": 8
              },
              "formatter": {
                "type": [
                  "string",
                  "Function"
                ],
                "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                "defaultValue": null
              },
              "textStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>文字的颜色。</p>\n",
                    "defaultValue": "'#333'"
                  },
                  "fontStyle": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontWeight": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontFamily": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字的字体系列</p>\n",
                    "defaultValue": "'sans-serief'"
                  },
                  "fontSize": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>文字的字体大小</p>\n",
                    "defaultValue": 12
                  }
                }
              }
            }
          },
          "splitLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔线，默认显示。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔线。</p>\n",
                "defaultValue": false
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔线的显示间隔，在类目轴中有效。默认同 <a href=\"#radiusAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Array",
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线颜色，可以设置成单个颜色。</p>\n<p>也可以设置成颜色数组，分隔线会按数组中颜色的顺序依次循环设置颜色。</p>\n<p>示例</p>\n<pre><code>splitLine: {\n    lineStyle: {\n        // 使用深浅的间隔色\n        color: [&#39;#aaa&#39;, &#39;#ddd&#39;]\n    }\n}\n</code></pre>",
                    "defaultValue": "['#ccc']"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>分隔线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n<!-- overwrite color -->"
                  }
                }
              }
            }
          },
          "splitArea": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔区域，默认不显示。</p>\n",
            "properties": {
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔区域的显示间隔，在类目轴中有效。默认同 <a href=\"#radiusAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔区域。</p>\n",
                "defaultValue": false
              },
              "areaStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>分隔区域的样式设置。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Array"
                    ],
                    "descriptionCN": "<p>分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色。</p>\n",
                    "defaultValue": "['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "data": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>类目数据，在类目轴（<a href=\"#radiusAxis.type\">type</a>: &#39;category&#39;）中有效。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">// 所有类目名称列表\ndata: [&#39;周一&#39;, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n// 每一项也可以是具体的配置项，此时取配置项中的 `value` 为类目名\ndata: [{\n    value: &#39;周一&#39;,\n    // 突出周一\n    textStyle: {\n        fontSize: 20,\n        color: &#39;red&#39;\n    }\n}, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n</code></pre>\n",
            "items": {
              "type": "Object",
              "properties": {
                "value": {
                  "type": [
                    "string"
                  ],
                  "descriptionCN": "<p>单个类目名称。</p>\n"
                },
                "textStyle": {
                  "type": [
                    "Object"
                  ],
                  "descriptionCN": "<p>类目标签的文字样式。</p>\n",
                  "properties": {
                    "color": {
                      "type": [
                        "Color"
                      ],
                      "descriptionCN": "<p>文字的颜色。</p>\n",
                      "defaultValue": "\"#fff\""
                    },
                    "align": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字水平对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;left&#39;</code></li>\n<li><code>&#39;center&#39;</code></li>\n<li><code>&#39;right&#39;</code></li>\n</ul>\n"
                    },
                    "baseline": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字基线对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;top&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;bottom&#39;</code></li>\n</ul>\n"
                    },
                    "fontStyle": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontWeight": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontFamily": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字的字体系列</p>\n",
                      "defaultValue": "'sans-serief'"
                    },
                    "fontSize": {
                      "type": [
                        "number"
                      ],
                      "descriptionCN": "<p>文字的字体大小</p>\n",
                      "defaultValue": 12
                    }
                  }
                }
              }
            }
          }
        }
      },
      "angleAxis": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>极坐标系的角度轴。</p>\n",
        "properties": {
          "polarIndex": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>角度轴所在的极坐标系的索引，默认使用第一个极坐标系。</p>\n",
            "defaultValue": 0
          },
          "startAngle": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>其实刻度的角度，默认为 90 度，即圆心的正上方。0 度为圆心的正右方。</p>\n<p>如下示例是 startAngle 为 45 的效果：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/polar-start-angle&edit=1&reset=1\" width=\"400\" height=\"400\" ></iframe>\n\n",
            "defaultValue": 90
          },
          "clockwise": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>刻度增长是否按顺时针，默认顺时针。</p>\n<p>如下示例是 clockwise 为 <code>false</code> （逆时针）的效果：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/polar-anticlockwise&edit=1&reset=1\" width=\"400\" height=\"400\" ></iframe>\n\n\n\n",
            "defaultValue": true
          },
          "type": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code>&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据，为该类型时必须通过 <a href=\"#angleAxis.data\">data</a> 设置类目数据。</p>\n</li>\n<li><p><code>&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。</p>\n</li>\n<li><p><code>&#39;log&#39;</code>\n  对数轴。适用于对数数据。</p>\n</li>\n</ul>\n",
            "defaultValue": "'category'"
          },
          "boundaryGap": {
            "type": [
              "boolean",
              "Array"
            ],
            "descriptionCN": "<p>坐标轴两边留白策略，类目轴和非类目轴的设置和表现不一样。</p>\n<p>类目轴中 <code>boundaryGap</code> 可以配置为 <code>true</code> 和 <code>false</code>。默认为 <code>true</code>，这时候<a href=\"#angleAxis.axisTick\">刻度</a>只是作为分隔线，标签和数据点都会在两个<a href=\"#angleAxis.axisTick\">刻度</a>之间的带(band)中间。</p>\n<p>非类目轴，包括时间，数值，对数轴，<code>boundaryGap</code>是一个两个值的数组，分别表示数据最小值和最大值的延伸范围，可以直接设置数值或者相对的百分比，在设置 <a href=\"#angleAxis.min\">min</a> 和 <a href=\"#angleAxis.max\">max</a> 后无效。<strong>示例：</strong></p>\n<pre><code class=\"lang-js\">boundaryGap: [&#39;20%&#39;, &#39;20%&#39;]\n</code></pre>\n"
          },
          "min": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最小值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMin&#39;</code>，此时取数据在该轴上的最小值作为最小刻度。</p>\n<p>不设置时会自动计算最小值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "max": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最大值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMax&#39;</code>，此时取数据在该轴上的最大值作为最大刻度。</p>\n<p>不设置时会自动计算最大值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "scale": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>只在数值轴中（<a href=\"#angleAxis.type\">type</a>: &#39;value&#39;）有效。</p>\n<p>是否是脱离 0 值比例。设置成 <code>true</code> 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。</p>\n<p>在设置 <a href=\"#angleAxis.min\">min</a> 和 <a href=\"#angleAxis.max\">max</a> 之后该配置项无效。</p>\n",
            "defaultValue": false
          },
          "splitNumber": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴的分割段数，需要注意的是这个分割段数只是个预估值，最后实际显示的段数会在这个基础上根据分割后坐标轴刻度显示的易读程度作调整。</p>\n<p>在类目轴中无效。</p>\n",
            "defaultValue": 5
          },
          "interval": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴分割间隔。</p>\n<p>因为 <a href=\"#angleAxis.splitNumber\">splitNumber</a> 是预估的值，实际根据策略计算出来的刻度可能无法达到想要的效果，这时候可以使用 interval 配合 <a href=\"#angleAxis.min\">min</a>, <a href=\"#angleAxis.max\">max</a> 强制设定刻度划分，一般不建议使用。</p>\n<p>无法在类目轴中使用。在时间轴（<a href=\"#angleAxis.type\">type</a>: &#39;time&#39;）中需要传时间戳，在对数轴（<a href=\"#angleAxis.type\">type</a>: &#39;log&#39;）中需要传指数值。</p>\n"
          },
          "axisLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴轴线相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴轴线。</p>\n",
                "defaultValue": true
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴线线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisTick": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴刻度。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度的显示间隔，在类目轴中有效。默认同 <a href=\"#angleAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>坐标轴刻度是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "length": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴刻度的长度。</p>\n",
                "defaultValue": 5
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisLabel": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度标签的相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示刻度标签。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>刻度标签是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "margin": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签与轴线之间的距离。</p>\n",
                "defaultValue": 8
              },
              "formatter": {
                "type": [
                  "string",
                  "Function"
                ],
                "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                "defaultValue": null
              },
              "textStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>文字的颜色。</p>\n",
                    "defaultValue": "'#333'"
                  },
                  "fontStyle": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontWeight": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontFamily": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字的字体系列</p>\n",
                    "defaultValue": "'sans-serief'"
                  },
                  "fontSize": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>文字的字体大小</p>\n",
                    "defaultValue": 12
                  }
                }
              }
            }
          },
          "splitLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔线，默认显示。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔线。</p>\n",
                "defaultValue": false
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔线的显示间隔，在类目轴中有效。默认同 <a href=\"#angleAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Array",
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线颜色，可以设置成单个颜色。</p>\n<p>也可以设置成颜色数组，分隔线会按数组中颜色的顺序依次循环设置颜色。</p>\n<p>示例</p>\n<pre><code>splitLine: {\n    lineStyle: {\n        // 使用深浅的间隔色\n        color: [&#39;#aaa&#39;, &#39;#ddd&#39;]\n    }\n}\n</code></pre>",
                    "defaultValue": "['#ccc']"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>分隔线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>分隔线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n<!-- overwrite color -->"
                  }
                }
              }
            }
          },
          "splitArea": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴在 <a href=\"#grid\">grid</a> 区域中的分隔区域，默认不显示。</p>\n",
            "properties": {
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴分隔区域的显示间隔，在类目轴中有效。默认同 <a href=\"#angleAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示分隔区域。</p>\n",
                "defaultValue": false
              },
              "areaStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>分隔区域的样式设置。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Array"
                    ],
                    "descriptionCN": "<p>分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色。</p>\n",
                    "defaultValue": "['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "data": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>类目数据，在类目轴（<a href=\"#angleAxis.type\">type</a>: &#39;category&#39;）中有效。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">// 所有类目名称列表\ndata: [&#39;周一&#39;, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n// 每一项也可以是具体的配置项，此时取配置项中的 `value` 为类目名\ndata: [{\n    value: &#39;周一&#39;,\n    // 突出周一\n    textStyle: {\n        fontSize: 20,\n        color: &#39;red&#39;\n    }\n}, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n</code></pre>\n",
            "items": {
              "type": "Object",
              "properties": {
                "value": {
                  "type": [
                    "string"
                  ],
                  "descriptionCN": "<p>单个类目名称。</p>\n"
                },
                "textStyle": {
                  "type": [
                    "Object"
                  ],
                  "descriptionCN": "<p>类目标签的文字样式。</p>\n",
                  "properties": {
                    "color": {
                      "type": [
                        "Color"
                      ],
                      "descriptionCN": "<p>文字的颜色。</p>\n",
                      "defaultValue": "\"#fff\""
                    },
                    "align": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字水平对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;left&#39;</code></li>\n<li><code>&#39;center&#39;</code></li>\n<li><code>&#39;right&#39;</code></li>\n</ul>\n"
                    },
                    "baseline": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字基线对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;top&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;bottom&#39;</code></li>\n</ul>\n"
                    },
                    "fontStyle": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontWeight": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontFamily": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字的字体系列</p>\n",
                      "defaultValue": "'sans-serief'"
                    },
                    "fontSize": {
                      "type": [
                        "number"
                      ],
                      "descriptionCN": "<p>文字的字体大小</p>\n",
                      "defaultValue": 12
                    }
                  }
                }
              }
            }
          }
        }
      },
      "legend": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>图例组件。</p>\n<p>图例组件展现了不同系列的标记(symbol)，颜色和名字。可以通过点击图例控制哪些系列不显示。</p>\n<p>ECharts 3 中单个 echarts 实例中可以存在多个图例组件，会方便多个图例的布局。</p>\n",
        "properties": {
          "show": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "",
            "defaultValue": true
          },
          "zlevel": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
            "defaultValue": 0
          },
          "z": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
            "defaultValue": 2
          },
          "left": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "top": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "right": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "bottom": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "orient": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>图例列表的布局朝向。</p>\n<p>可选：</p>\n<ul>\n<li>&#39;horizontal&#39;</li>\n<li>&#39;vertical&#39;</li>\n</ul>\n",
            "defaultValue": "'horizontal'"
          },
          "align": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>图例标记和文本的对齐。默认自动，根据组件的位置和 orient 决定，当组件的 <a href=\"#legend.left\">left</a> 值为 &#39;right&#39; 以及纵向布局（<a href=\"#legend.orient\">orient</a> 为  &#39;vertical&#39;）的时候为右对齐，及为 &#39;right&#39;。</p>\n<p>可选：</p>\n<ul>\n<li>&#39;auto&#39;</li>\n<li>&#39;left&#39;</li>\n<li>&#39;right&#39;</li>\n</ul>\n",
            "defaultValue": "'auto'"
          },
          "padding": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图例内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。</p>\n<p>使用示例：</p>\n<pre><code class=\"lang-js\">// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n    5,  // 上\n    10, // 右\n    5,  // 下\n    10, // 左\n]\n</code></pre>\n",
            "defaultValue": 5
          },
          "itemGap": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图例每项之间的间隔。横向布局时为水平间隔，纵向布局时为纵向间隔。</p>\n",
            "defaultValue": 10
          },
          "itemWidth": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图例标记的图形宽度。</p>\n",
            "defaultValue": 25
          },
          "itemHeight": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图例标记的图形高度。</p>\n",
            "defaultValue": 14
          },
          "formatter": {
            "type": [
              "string",
              "Function"
            ],
            "descriptionCN": "<p>图例文本的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为图例名称 {name}\nformatter: &#39;Legend {name}&#39;\n// 使用回调函数\nformatter: function (name) {\n    return &#39;Legend &#39; + name;\n}\n</code></pre>\n",
            "defaultValue": null
          },
          "selectedMode": {
            "type": [
              "string",
              "boolean"
            ],
            "descriptionCN": "<p>图例选择的模式，默认开启图例选择，可以设成 <code>false</code> 关闭。</p>\n<p>除此之外也可以设成 <code>&#39;single&#39;</code> 或者  <code>&#39;multiple&#39;</code> 使用单选或者多选模式。</p>\n",
            "defaultValue": true
          },
          "selected": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>图例选中状态表。</p>\n<p>示例：</p>\n<pre><code>selected: {\n    // 选中&#39;系列1&#39;\n    &#39;系列1&#39;: true,\n    // 不选中&#39;系列2&#39;\n    &#39;系列2&#39;: false\n}\n</code></pre>"
          },
          "textStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>图例的公用文本样式。</p>\n",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>文字的颜色。</p>\n",
                "defaultValue": "\"#fff\""
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>文字的字体大小</p>\n",
                "defaultValue": 12
              }
            }
          },
          "data": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>图例的数据数组。数组项通常为一个字符串，每一项代表一个系列的 <code>name</code>（如果是<a href=\"#series-pie\">饼图</a>，也可以是饼图单个数据的 <code>name</code>）。图例组件会自动获取对应系列的颜色，图形标记（symbol）作为自己绘制的颜色和标记，特殊字符串 <code>&#39;&#39;</code>（空字符串）或者 <code>&#39;\\n&#39;</code> (换行字符串)用于图例的换行。</p>\n<p>如果要设置单独一项的样式，也可以把该项写成配置项对象。此时必须使用 <code>name</code> 属性对应表示系列的 <code>name</code>。</p>\n<p>示例</p>\n<pre><code>data: [{\n    name: &#39;系列1&#39;,\n    // 强制设置图形为圆。\n    icon: &#39;circle&#39;,\n    // 设置文本为红色\n    textStyle: {\n        color: &#39;red&#39;\n    }\n}]\n</code></pre>",
            "items": {
              "type": "Object",
              "properties": {
                "name": {
                  "type": [
                    "string"
                  ],
                  "descriptionCN": "<p>图例项的名称，对应系列的 <code>name</code>（如果是饼图，也可以是饼图单个数据的 <code>name</code>）。</p>\n"
                },
                "icon": {
                  "type": [
                    "string"
                  ],
                  "descriptionCN": "<p>图例项的 icon。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
                },
                "textStyle": {
                  "type": [
                    "Object"
                  ],
                  "descriptionCN": "<p>图例项的文本样式。</p>\n"
                }
              }
            }
          },
          "backgroundColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>图例背景色，默认透明。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>   ，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code></p>\n</blockquote>\n",
            "defaultValue": "'transparent'"
          },
          "borderColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>图例的边框颜色。支持的颜色格式同 backgroundColor。</p>\n",
            "defaultValue": "'#ccc'"
          },
          "borderWidth": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图例的边框线宽。</p>\n",
            "defaultValue": 1
          },
          "shadowBlur": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
          },
          "shadowColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
          },
          "shadowOffsetX": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
            "defaultValue": 0
          },
          "shadowOffsetY": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
            "defaultValue": 0
          }
        }
      },
      "tooltip": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>提示框组件。</p>\n",
        "properties": {
          "show": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否显示提示框组件，包括提示框浮层和 <a href=\"#tooltip.axisPointer\">axisPointer</a>。</p>\n",
            "defaultValue": true
          },
          "showContent": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否显示提示框浮层，默认显示。只需tooltip触发事件或显示axisPointer而不需要显示内容时可配置该项为<code>false</code>。</p>\n",
            "defaultValue": true
          },
          "trigger": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>触发类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>&#39;item&#39;</code></p>\n<p>  数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用。</p>\n</li>\n<li><p><code>&#39;axis&#39;</code></p>\n<p>  坐标轴触发，主要在柱状图，折线图等会使用类目轴的图表中使用。</p>\n<p>  在 ECharts 2.x 中只支持类目轴上使用 axis trigger，在 ECharts 3 中支持在<a href=\"#grid\">直角坐标系</a>和<a href=\"#polar\">极坐标系</a>上的所有类型的轴。并且可以通过 <a href=\"#tooltip.axisPointer.axis\">axisPointer.axis</a> 指定坐标轴。</p>\n</li>\n</ul>\n",
            "defaultValue": "'item'"
          },
          "triggerOn": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>提示框触发的条件，可选：</p>\n<ul>\n<li><p><code>&#39;mousemove&#39;</code></p>\n<p>  鼠标移动时触发。</p>\n</li>\n<li><p><code>&#39;click&#39;</code></p>\n<p>  鼠标点击时触发。</p>\n</li>\n</ul>\n<p>该属性为 ECharts 3.0 中新加。</p>\n",
            "defaultValue": "'mousemove'"
          },
          "alwaysShowContent": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否永远显示提示框内容，默认情况下在移出可触发提示框区域后 <a href=\"#tooltip.hideDelay\">一定时间</a> 后隐藏，设置为 <code>true</code> 可以保证一直显示提示框内容。</p>\n<p>该属性为 ECharts 3.0 中新加。</p>\n",
            "defaultValue": false
          },
          "hideDelay": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>浮层隐藏的延迟，单位为 ms，在 <a href=\"#tooltip.alwaysShowContent\">alwaysShowContent</a> 为 <code>true</code> 的时候无效。</p>\n",
            "defaultValue": 100
          },
          "enterable": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>鼠标是否可进入提示框浮层中，默认为false，如需详情内交互，如添加链接，按钮，可设置为 <code>true</code>。</p>\n",
            "defaultValue": true
          },
          "position": {
            "type": [
              "string",
              "Array"
            ],
            "descriptionCN": "<p>提示框浮层的位置，默认不设置时位置会跟随鼠标的位置。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>Array</code></p>\n<p>  通过数组表示提示框浮层的位置，支持数字设置绝对位置，百分比设置相对位置。</p>\n<p>  示例:</p>\n<pre><code class=\"lang-js\">  // 绝对位置，相对于容器左侧 10px, 上侧 10 px\n  position: [10, 10]\n  // 相对位置，放置在容器正中间\n  position: [&#39;50%&#39;, &#39;50%&#39;]\n</code></pre>\n</li>\n<li><p><code>&#39;inside&#39;</code></p>\n<p>  鼠标所在图形的内部中心位置，只在 <a href=\"#tooltip.trigger\">trigger</a> 为<code>&#39;item&#39;</code>的时候有效。</p>\n</li>\n<li><p><code>&#39;top&#39;</code></p>\n<p>  鼠标所在图形上侧，只在 <a href=\"#tooltip.trigger\">trigger</a> 为<code>&#39;item&#39;</code>的时候有效。</p>\n</li>\n<li><p><code>&#39;left&#39;</code></p>\n<p>  鼠标所在图形左侧，只在 <a href=\"#tooltip.trigger\">trigger</a> 为<code>&#39;item&#39;</code>的时候有效。</p>\n</li>\n<li><p><code>&#39;right&#39;</code></p>\n<p>  鼠标所在图形右侧，只在 <a href=\"#tooltip.trigger\">trigger</a> 为<code>&#39;item&#39;</code>的时候有效。</p>\n</li>\n<li><p><code>&#39;bottom&#39;</code></p>\n<p>  鼠标所在图形底侧，只在 <a href=\"#tooltip.trigger\">trigger</a> 为<code>&#39;item&#39;</code>的时候有效。</p>\n</li>\n</ul>\n"
          },
          "transitionDuration": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>提示框浮层的移动动画过渡时间，单位是 s，设置为 0 的时候会紧跟着鼠标移动。</p>\n",
            "defaultValue": 0.4
          },
          "formatter": {
            "type": [
              "string",
              "Function"
            ],
            "descriptionCN": "<p>提示框浮层内容格式器，支持字符串模板和回调函数两种形式。</p>\n<ol>\n<li><p>字符串模板。</p>\n<p> 模板变量有 <code>{a}</code>, <code>{b}</code>，<code>{c}</code>，<code>{d}</code>，<code>{e}</code>，分别表示系列名，数据名，数据值等。\n 在 <a href=\"#tooltip.trigger\">trigger</a> 为 <code>&#39;axis&#39;</code> 的时候，会有多个系列的数据，此时可以通过 <code>{a0}</code>, <code>{a1}</code>, <code>{a2}</code> 这种后面加索引的方式表示系列的索引。\n 不同图表类型下的 <code>{a}</code>，<code>{b}</code>，<code>{c}</code>，<code>{d}</code> 含义不一样。\n 其中变量<code>{a}</code>, <code>{b}</code>, <code>{c}</code>, <code>{d}</code>在不同图表类型下代表数据含义为：</p>\n<ul>\n<li><p>折线（区域）图、柱状（条形）图、K线图 : <code>{a}</code>（系列名称），<code>{b}</code>（类目值），<code>{c}</code>（数值）, <code>{d}</code>（无）</p>\n</li>\n<li><p>散点图（气泡）图 : <code>{a}</code>（系列名称），<code>{b}</code>（数据名称），<code>{c}</code>（数值数组）, <code>{d}</code>（无）</p>\n</li>\n<li><p>地图 : <code>{a}</code>（系列名称），<code>{b}</code>（区域名称），<code>{c}</code>（合并数值）, <code>{d}</code>（无）</p>\n</li>\n<li><p>饼图、仪表盘、漏斗图: <code>{a}</code>（系列名称），<code>{b}</code>（数据项名称），<code>{c}</code>（数值）, <code>{d}</code>（百分比）</p>\n<p>更多其它图表模板变量的含义可以见相应的图表的 label.normal.formatter 配置项。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"lang-js\">formatter: &#39;{b0}: {c0}&lt;br /&gt;{b1}: {c1}&#39;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>回调函数。</p>\n<p> 回调函数格式：</p>\n<pre><code class=\"lang-js\"> (params: Object|Array, ticket: string, callback: (ticket: string, html: string)) =&gt; string\n</code></pre>\n<p> 第一个参数 <code>params</code> 是 formatter 需要的数据集。格式如下：</p>\n<pre><code class=\"lang-js\"> {\n     // 系列在传入的 option.series 中的 index\n     seriesIndex: number,\n     // 系列名称\n     seriesName: string,\n     // 数据名，类目名\n     name: string,\n     // 数据在传入的 data 数组中的 index\n     dataIndex: number,\n     // 传入的原始数据项\n     data: Object,\n     // 传入的数据值\n     value: number|Array,\n\n     // 饼图的百分比\n     percent: number,\n\n }\n</code></pre>\n<p> 在 <a href=\"#tooltip.trigger\">trigger</a> 为 <code>&#39;axis&#39;</code> 的时候 <code>params</code> 是多个系列的数据数组。</p>\n<p> <strong>注：</strong> ECharts 2.x 使用数组表示各参数的方式不再支持。</p>\n<p> 第二个参数 <code>ticket</code> 是异步回调标识，配合第三个参数 <code>callback</code> 使用。\n 第三个参数 <code>callback</code> 是异步回调，在提示框浮层内容是异步获取的时候，可以通过 callback 传入上述的 <code>ticket</code> 和 <code>html</code> 更新提示框浮层内容。</p>\n<p> 示例：</p>\n<pre><code class=\"lang-js\"> formatter: function (params, ticket, callback) {\n     $.get(&#39;detail?name=&#39; + params.name, function (content) {\n         callback(ticket, toHTML(content));\n     });\n     return &#39;Loading&#39;;\n }\n</code></pre>\n</li>\n</ol>\n"
          },
          "backgroundColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>提示框浮层的背景颜色。</p>\n",
            "defaultValue": "'rgba(50,50,50,0.7)'"
          },
          "borderColor": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>提示框浮层的边框颜色。</p>\n",
            "defaultValue": "'#333'"
          },
          "borderWidth": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>提示框浮层的边框宽。</p>\n",
            "defaultValue": 0
          },
          "padding": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>提示框浮层内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。</p>\n<p>使用示例：</p>\n<pre><code class=\"lang-js\">// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n    5,  // 上\n    10, // 右\n    5,  // 下\n    10, // 左\n]\n</code></pre>\n",
            "defaultValue": 5
          },
          "textStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>提示框浮层的文本样式。</p>\n",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>文字的颜色。</p>\n",
                "defaultValue": "'#fff'"
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>文字的字体大小</p>\n",
                "defaultValue": 14
              }
            }
          },
          "axisPointer": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴指示器配置项，在 <a href=\"#tooltip.trigger\">trigger</a> 为 <code>&#39;axis&#39;</code> 时有效。</p>\n",
            "properties": {
              "type": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>指示器类型。</p>\n<p>可选</p>\n<ul>\n<li><p><code>&#39;line&#39;</code> 直线指示器</p>\n</li>\n<li><p><code>&#39;cross&#39;</code> 十字准星指示器</p>\n</li>\n<li><p><code>&#39;shadow&#39;</code> 阴影指示器</p>\n</li>\n</ul>\n",
                "defaultValue": "'line'"
              },
              "axis": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>指示器的坐标轴。可以是 <code>&#39;x&#39;</code>, <code>&#39;y&#39;</code>, <code>&#39;radius&#39;</code>, <code>&#39;angle&#39;</code>。默认取类目轴或者时间轴。</p>\n",
                "defaultValue": "'auto'"
              },
              "animation": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
                "defaultValue": true
              },
              "animationDuration": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>初始动画的时长。</p>\n",
                "defaultValue": 1000
              },
              "animationEasing": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
                "defaultValue": "cubicOut"
              },
              "animationDurationUpdate": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>数据更新动画的时长。</p>\n",
                "defaultValue": 300
              },
              "animationEasingUpdate": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
                "defaultValue": "cubicOut"
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p><a href=\"#tooltip.axisPointer.type\">axisPointer.type</a> 为 <code>&#39;line&#39;</code> 时有效。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "#555"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "solid"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              },
              "crossStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p><a href=\"#tooltip.axisPointer.type\">axisPointer.type</a> 为 <code>&#39;cross&#39;</code> 时有效。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "#555"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "dashed"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  },
                  "textStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>十字准星准星上的文字样式。</p>\n",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>文字的颜色。</p>\n",
                        "defaultValue": "\"#fff\""
                      },
                      "fontStyle": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontWeight": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontFamily": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字的字体系列</p>\n",
                        "defaultValue": "'sans-serief'"
                      },
                      "fontSize": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>文字的字体大小</p>\n",
                        "defaultValue": 12
                      }
                    }
                  }
                }
              },
              "shadowStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p><a href=\"#tooltip.axisPointer.type\">axisPointer.type</a> 为 <code>&#39;shadow&#39;</code> 时有效。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>填充的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'rgba(150,150,150,0.3)"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          }
        }
      },
      "toolbox": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>工具栏。内置有<a href=\"#toolbox.feature.saveAsImage\">导出图片</a>，<a href=\"#toolbox.feature.dataView\">数据视图</a>，<a href=\"#toolbox.feature.magicType\">动态类型切换</a>，<a href=\"#toolbox.feature.dataZoom\">数据区域缩放</a>，<a href=\"#toolbox.feature.reset\">重置</a>五个工具。</p>\n<p><strong>如下示例：</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=line-marker&reset=1&edit=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
        "properties": {
          "show": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否显示工具栏组件。</p>\n",
            "defaultValue": true
          },
          "orient": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>工具栏 icon 的布局朝向。</p>\n<p>可选：</p>\n<ul>\n<li>&#39;horizontal&#39;</li>\n<li>&#39;vertical&#39;</li>\n</ul>\n",
            "defaultValue": "'horizontal'"
          },
          "itemSize": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>工具栏 icon 的大小。</p>\n",
            "defaultValue": 15
          },
          "itemGap": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>工具栏 icon 每项之间的间隔。横向布局时为水平间隔，纵向布局时为纵向间隔。</p>\n",
            "defaultValue": 10
          },
          "showTitle": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否在鼠标 hover 的时候显示每个工具 icon 的标题。</p>\n",
            "defaultValue": true
          },
          "feature": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>各工具配置项</p>\n",
            "properties": {
              "saveAsImage": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>保存为图片。</p>\n",
                "properties": {
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>保存的图片格式。支持 <code>&#39;png&#39;</code> 和 <code>&#39;jpeg&#39;</code>。</p>\n",
                    "defaultValue": "'png'"
                  },
                  "backgroundColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>保存的图片背景色，默认使用 <a href=\"#backgroundColor\">option.backgroundColor</a>，如果<code>backgroundColor</code>不存在的话会取白色。</p>\n",
                    "defaultValue": "'auto'"
                  },
                  "excludeComponents": {
                    "type": [
                      "Array"
                    ],
                    "descriptionCN": "<p>保存为图片时忽略的组件列表，默认忽略工具栏。</p>\n",
                    "defaultValue": "['toolbox']"
                  },
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示该工具。</p>\n",
                    "defaultValue": true
                  },
                  "title": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "",
                    "defaultValue": "'保存为图片'"
                  },
                  "icon": {
                    "type": [
                      "*"
                    ],
                    "descriptionCN": "<p>Icon 的 path 字符串，ECharts 3 中支持使用自定义的 svg path 作为 icon，格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
                  },
                  "iconStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>保存为图片 icon 样式设置。</p>\n",
                    "properties": {
                      "normal": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "#666"
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 1
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      },
                      "emphasis": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "\"#000\""
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "restore": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>配置项还原。</p>\n",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示该工具。</p>\n",
                    "defaultValue": true
                  },
                  "title": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "",
                    "defaultValue": "'还原'"
                  },
                  "icon": {
                    "type": [
                      "*"
                    ],
                    "descriptionCN": "<p>Icon 的 path 字符串，ECharts 3 中支持使用自定义的 svg path 作为 icon，格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
                  },
                  "iconStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>还原 icon 样式设置。</p>\n",
                    "properties": {
                      "normal": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "#666"
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 1
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      },
                      "emphasis": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "\"#000\""
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "dataView": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>数据视图工具，可以展现当前图表所用的数据，编辑后可以动态更新。</p>\n",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示该工具。</p>\n",
                    "defaultValue": true
                  },
                  "title": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "",
                    "defaultValue": "'数据视图'"
                  },
                  "icon": {
                    "type": [
                      "*"
                    ],
                    "descriptionCN": "<p>Icon 的 path 字符串，ECharts 3 中支持使用自定义的 svg path 作为 icon，格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
                  },
                  "iconStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>数据视图 icon 样式设置。</p>\n",
                    "properties": {
                      "normal": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "#666"
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 1
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      },
                      "emphasis": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "\"#000\""
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      }
                    }
                  },
                  "readOnly": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否不可编辑（只读）。</p>\n",
                    "defaultValue": false
                  },
                  "lang": {
                    "type": [
                      "Array"
                    ],
                    "descriptionCN": "<p>数据视图上有三个话术，默认是[&#39;数据视图&#39;, &#39;关闭&#39;, &#39;刷新&#39;]。</p>\n",
                    "defaultValue": "['数据视图', '关闭', '刷新']"
                  },
                  "backgroundColor": {
                    "type": [
                      "*"
                    ],
                    "descriptionCN": "<p>数据视图浮层背景色。</p>\n",
                    "defaultValue":"#fff"
                  },
                  "textareaColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>数据视图浮层文本输入区背景色。</p>\n",
                    "defaultValue":"#fff"
                  },
                  "textareaBorderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>数据视图浮层文本输入区边框颜色。</p>\n",
                    "defaultValue":"#333"
                  },
                  "textColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>文本颜色。</p>\n",
                    "defaultValue":"#000"
                  },
                  "buttonColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>按钮颜色。</p>\n",
                    "defaultValue":"#c23531"
                  },
                  "buttonTextColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>按钮文本颜色。</p>\n",
                    "defaultValue":"#fff"
                  }
                }
              },
              "dataZoom": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>数据区域缩放。目前只支持直角坐标系的缩放。</p>\n",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示该工具。</p>\n",
                    "defaultValue": true
                  },
                  "title": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>缩放和还原的标题文本。</p>\n",
                    "properties": {
                      "zoom": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "",
                        "defaultValue": "'区域缩放'"
                      },
                      "back": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "",
                        "defaultValue": "'区域缩放还原'"
                      }
                    }
                  },
                  "icon": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>缩放和还原的 icon path。</p>\n",
                    "properties": {
                      "zoom": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": ""
                      },
                      "back": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": ""
                      }
                    }
                  },
                  "iconStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>数据区域缩放 icon 样式设置。</p>\n",
                    "properties": {
                      "normal": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "#666"
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 1
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      },
                      "emphasis": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "\"#000\""
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      }
                    }
                  },
                  "xAxisIndex": {
                    "type": [
                      "number",
                      "Array"
                    ],
                    "descriptionCN": "<p>指定 哪些 <a href=\"#xAxis\">xAxis</a> 被控制。如果缺省则控制所有的x轴。</p>\n"
                  },
                  "yAxisIndex": {
                    "type": [
                      "number",
                      "Array"
                    ],
                    "descriptionCN": "<p>指定 哪些 <a href=\"#yAxis\">yAxis</a> 被控制。如果缺省则控制所有的y轴。</p>\n"
                  }
                }
              },
              "magicType": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>动态类型切换\n<strong>示例：</strong></p>\n<pre><code class=\"lang-js\">feature: {\n    magicType: {\n        type: [&#39;line&#39;, &#39;bar&#39;, &#39;stack&#39;, &#39;tiled&#39;]\n    }\n}\n</code></pre>\n",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示该工具。</p>\n",
                    "defaultValue": true
                  },
                  "type": {
                    "type": [
                      "Array"
                    ],
                    "descriptionCN": "<p>启用的动态类型，包括<code>&#39;line&#39;</code>（切换为折线图）, <code>&#39;bar&#39;</code>（切换为柱状图）, <code>&#39;stack&#39;</code>（切换为堆叠模式）, <code>&#39;tiled&#39;</code>（切换为平铺模式）。</p>\n"
                  },
                  "title": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>各个类型的标题文本，可以分别配置。</p>\n",
                    "properties": {
                      "line": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "",
                        "defaultValue": "'切换为折线图'"
                      },
                      "bar": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "",
                        "defaultValue": "'切换为柱状图'"
                      },
                      "stack": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "",
                        "defaultValue": "'切换为堆叠'"
                      },
                      "tiled": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "",
                        "defaultValue": "'切换为平铺'"
                      }
                    }
                  },
                  "icon": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>各个类型的 icon path，可以分别配置。</p>\n",
                    "properties": {
                      "line": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": ""
                      },
                      "bar": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": ""
                      },
                      "stack": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": ""
                      },
                      "tiled": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": ""
                      }
                    }
                  },
                  "iconStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>动态类型切换 icon 样式设置。</p>\n",
                    "properties": {
                      "normal": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "#666"
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 1
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      },
                      "emphasis": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": "",
                        "properties": {
                          "color": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                            "defaultValue": "自适应"
                          },
                          "borderColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                            "defaultValue": "\"#000\""
                          },
                          "borderWidth": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowBlur": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                          },
                          "shadowColor": {
                            "type": [
                              "Color"
                            ],
                            "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                          },
                          "shadowOffsetX": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "shadowOffsetY": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                            "defaultValue": 0
                          },
                          "opacity": {
                            "type": [
                              "number"
                            ],
                            "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                          }
                        }
                      }
                    }
                  },
                  "option": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>各个类型的专有配置项。在切换到某类型的时候会合并相应的配置项。</p>\n",
                    "properties": {
                      "line": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": ""
                      },
                      "bar": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": ""
                      },
                      "stack": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": ""
                      },
                      "tiled": {
                        "type": [
                          "Object"
                        ],
                        "descriptionCN": ""
                      }
                    }
                  },
                  "seriesIndex": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>各个类型对应的系列的列表。</p>\n",
                    "properties": {
                      "line": {
                        "type": [
                          "Array"
                        ],
                        "descriptionCN": ""
                      },
                      "bar": {
                        "type": [
                          "Array"
                        ],
                        "descriptionCN": ""
                      },
                      "stack": {
                        "type": [
                          "Array"
                        ],
                        "descriptionCN": ""
                      },
                      "tiled": {
                        "type": [
                          "Array"
                        ],
                        "descriptionCN": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "iconStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>公用的 icon 样式设置。</p>\n",
            "properties": {
              "normal": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "自适应"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                    "defaultValue": "#666"
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                    "defaultValue": 1
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              },
              "emphasis": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "自适应"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                    "defaultValue": "\"#000\""
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "zlevel": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
            "defaultValue": 0
          },
          "z": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
            "defaultValue": 2
          },
          "left": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>工具栏组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "top": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>工具栏组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "right": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>工具栏组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "bottom": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>工具栏组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          }
        }
      },
      "geo": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>地理坐标系组件。</p>\n<p>地理坐标系组件用于地图的绘制，支持在地理坐标系上绘制<a href=\"#series-scatter\">散点图</a>，<a href=\"#series-lines\">线集</a>。</p>\n<p><strong>在地理坐标系中使用散点图的示例:</strong></p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=scatter-map&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n",
        "properties": {
          "show": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否显示地理坐标系组件。</p>\n",
            "defaultValue": true
          },
          "map": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>地图类型。</p>\n<p>ECharts 3 中因为地图精度的提高，不再内置地图数据增大代码体积，你可以在<a href=\"http://ecomfe.github.io/echarts-builder-web/map3.html\" target=\"_blank\">地图下载界面</a>下载到需要的地图文件引入并注册到 ECharts 中。</p>\n<p>ECharts 中提供了两种格式的地图数据，一种是可以直接 script 标签引入的 js 文件，引入后会自动注册地图名字和数据。还有一种是 JSON 文件，需要通过 jquery 等工具异步加载后手动注册。</p>\n<p>下面是两种类型的使用示例：</p>\n<p><strong> JavaScript 引入示例 </strong></p>\n<pre><code class=\"lang-html\">&lt;script src=&quot;echarts.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;map/js/china.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\nvar chart = echarts.init(document.getElmentById(&#39;main&#39;));\nchart.setOption({\n    series: [{\n        type: &#39;map&#39;,\n        map: &#39;china&#39;\n    }]\n});\n&lt;/script&gt;\n</code></pre>\n<p><strong> JSON 引入示例 </strong></p>\n<pre><code class=\"lang-js\">$.get(&#39;map/json/china.json&#39;, function (chinaJson) {\n    echarts.registerMap(&#39;china&#39;, chinaJson);\n    var chart = echarts.init(document.getElmentById(&#39;main&#39;));\n    chart.setOption({\n        series: [{\n            type: &#39;map&#39;,\n            map: &#39;china&#39;\n        }]\n    });\n});\n</code></pre>\n<p>ECharts 使用 <a href=\"http://geojson.org/\" target=\"_blank\">geoJSON</a> 格式的数据作为地图的轮廓，除了上述数据，你也可以通过其它手段获取地图的 <a href=\"http://geojson.org/\" target=\"_blank\">geoJSON</a> 数据注册到 ECharts 中。参见示例 <a href=\"http://echarts.baidu.com/gallery/editor.html?c=map-usa\" target=\"_blank\">USA Population Estimates</a></p>\n",
            "defaultValue": "''"
          },
          "roam": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否开启鼠标缩放和平移漫游。默认不开启。如果只想要开启缩放或者平移，可以设置成 <code>&#39;scale&#39;</code> 或者 <code>&#39;move&#39;</code>。设置成 <code>true</code> 为都开启</p>\n",
            "defaultValue": false
          },
          "label": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>图形上的文本标签，课用于说明图形的一些数据信息，比如值，名称等，<code>label</code>选项在 ECharts 2.x 中放置于<code>itemStyle.normal</code>下，在 ECharts 3 中为了让整个配置项结构更扁平合理，<code>label</code>被拿出来跟 <code>itemStyle</code> 平级，并且跟 <code>itemStyle</code> 一样拥有 <code>normal</code>, <code>emphasis</code> 两个状态。</p>\n",
            "properties": {
              "normal": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否在普通状态下显示标签。</p>\n",
                    "defaultValue": false
                  },
                  "textStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>普通状态下的标签文本样式。</p>\n",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>文字的颜色。</p>\n",
                        "defaultValue": "\"#fff\""
                      },
                      "fontStyle": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontWeight": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontFamily": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字的字体系列</p>\n",
                        "defaultValue": "'sans-serief'"
                      },
                      "fontSize": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>文字的字体大小</p>\n",
                        "defaultValue": 12
                      }
                    }
                  }
                }
              },
              "emphasis": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否在高亮状态下显示标签。</p>\n",
                    "defaultValue": false
                  },
                  "textStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "<p>高亮状态下的标签文本样式。</p>\n",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>文字的颜色。</p>\n",
                        "defaultValue": "\"#fff\""
                      },
                      "fontStyle": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontWeight": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontFamily": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字的字体系列</p>\n",
                        "defaultValue": "'sans-serief'"
                      },
                      "fontSize": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>文字的字体大小</p>\n",
                        "defaultValue": 12
                      }
                    }
                  }
                }
              }
            }
          },
          "itemStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>地图区域的多边形 图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
            "properties": {
              "normal": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>普通状态下的多边形样式。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "自适应"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                    "defaultValue": "\"#000\""
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              },
              "emphasis": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>高亮状态下的多边形样式。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "自适应"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                    "defaultValue": "\"#000\""
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>描边线宽。为 0 时无描边。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              },
              "zlevel": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
                "defaultValue": 0
              },
              "z": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
                "defaultValue": 2
              },
              "left": {
                "type": [
                  "string",
                  "number"
                ],
                "descriptionCN": "<p>组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
                "defaultValue": "'auto'"
              },
              "top": {
                "type": [
                  "string",
                  "number"
                ],
                "descriptionCN": "<p>组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
                "defaultValue": "'auto'"
              },
              "right": {
                "type": [
                  "string",
                  "number"
                ],
                "descriptionCN": "<p>组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
                "defaultValue": "'auto'"
              },
              "bottom": {
                "type": [
                  "string",
                  "number"
                ],
                "descriptionCN": "<p>组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
                "defaultValue": "'auto'"
              }
            }
          }
        }
      },
      "parallel": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p><strong>平行坐标系介绍</strong></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Parallel_coordinates\" target=\"_blank\">平行坐标系（Parallel Coordinates）</a> 是一种常用的可视化高维数据的图表。</p>\n<p>例如 <a href=\"#series-parallel.data\">series-parallel.data</a> 中有如下数据：</p>\n<pre><code class=\"lang-javascript\">[\n    [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n    [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n    [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n    [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n    { // 数据项也可以是 Object，从而里面能含有对线条的特殊设置。\n        value: [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;]\n        lineStyle: {...},\n    }\n    ...\n]\n</code></pre>\n<p>数据中，每一行是一个『数据项』，每一列属于一个『维度』。（例如上面数据每一列的含义分别是：『日期』,『AQI指数』, 『PM2.5』, 『PM10』, 『一氧化碳值』, 『二氧化氮值』, 『二氧化硫值』）。</p>\n<p>平行坐标系适于对这种多维数据进行可视化分析。每一个维度（每一列）对应一个坐标轴，每一个『数据项』是一条线，贯穿多个坐标轴。在坐标轴上，可以进行数据选取等操作。如下：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/parallel-all&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n\n\n<p><strong>配置方式概要</strong></p>\n<p>『平行坐标系』的 <code>option</code> 基本配置如下例：</p>\n<pre><code class=\"lang-javascript\">option = {\n    parallelAxis: [                     // 这是一个个『坐标轴』的定义\n        {dim: 0, name: schema[0].text}, // 每个『坐标轴』有个 &#39;dim&#39; 属性，表示坐标轴的维度号。\n        {dim: 1, name: schema[1].text},\n        {dim: 2, name: schema[2].text},\n        {dim: 3, name: schema[3].text},\n        {dim: 4, name: schema[4].text},\n        {dim: 5, name: schema[5].text},\n        {dim: 6, name: schema[6].text},\n        {dim: 7, name: schema[7].text,\n            type: &#39;category&#39;,           // 坐标轴也可以支持类别型数据\n            data: [&#39;优&#39;, &#39;良&#39;, &#39;轻度污染&#39;, &#39;中度污染&#39;, &#39;重度污染&#39;, &#39;严重污染&#39;]\n        }\n    ],\n    parallel: {                         // 这是『坐标系』的定义\n        left: &#39;5%&#39;,                     // 平行坐标系的位置设置\n        right: &#39;13%&#39;,\n        bottom: &#39;10%&#39;,\n        top: &#39;20%&#39;,\n        parallelAxisDefault: {          // 『坐标轴』的公有属性可以配置在这里避免重复书写\n            type: &#39;value&#39;,\n            nameLocation: &#39;end&#39;,\n            nameGap: 20\n        }\n    },\n    series: [                           // 这里三个系列共用一个平行坐标系\n        {\n            name: &#39;北京&#39;,\n            type: &#39;parallel&#39;,           // 这个系列类型是 &#39;parallel&#39;\n            data: [\n                [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n                [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n                ...\n            ]\n        },\n        {\n            name: &#39;上海&#39;,\n            type: &#39;parallel&#39;,\n            data: [\n                [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n                [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n                ...\n            ]\n        },\n        {\n            name: &#39;广州&#39;,\n            type: &#39;parallel&#39;,\n            data: [\n                [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n                [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;],\n                ...\n            ]\n        }\n    ]\n};\n</code></pre>\n<p>需要涉及到三个组件：<a href=\"#parallel\">parallel</a>、<a href=\"#parallelAxis\">parallelAxis</a>、<a href=\"#series-parallel\">series-parallel</a></p>\n<ul>\n<li><p><a href=\"#parallel\">parallel</a></p>\n<p>  这个配置项是平行坐标系的『坐标系』本身。一个系列（<code>series</code>）或多个系列（如上图中的『北京』、『上海』、『广州』分别各是一个系列）可以共用这个『坐标系』。</p>\n<p>  和其他坐标系一样，坐标系也可以创建多个。</p>\n<p>  位置设置，也是放在这里进行。</p>\n</li>\n<li><p><a href=\"#parallelAxis\">parallelAxis</a></p>\n<p>  这个是『坐标系』中的坐标轴的配置。自然，需要有多个坐标轴。</p>\n<p>  其中有 <a href=\"#parallelAxis.parallelIndex\">parallelAxis.parallelIndex</a> 属性，指定这个『坐标轴』在哪个『坐标系』中。默认使用第一个『坐标系』。</p>\n</li>\n<li><p><a href=\"#series-parallel\">series-parallel</a></p>\n<p>  这个是『系列』的定义。系列被画到『坐标系』上。</p>\n<p>  其中有 <a href=\"#series-parallel.parallelIndex\">series-parallel.parallelIndex</a> 属性，指定使用哪个『坐标系』。默认使用第一个『坐标系』。</p>\n</li>\n</ul>\n<p><strong>配置注意和最佳实践</strong></p>\n<p>配置多个 <a href=\"#parallelAxis\">parallelAxis</a> 时，有些值一样的属性，如果书写多遍则比较繁琐，那么可以放置在 <a href=\"#parallel.parallelAxisDefault\">parallel.parallelAxisDefault</a> 里。在坐标轴初始化前，<code>parallelAxisDefault</code> 里的配置项，会分别融合进 <a href=\"#parallelAxis\">parallelAxis</a>，形成最终的坐标轴的配置。</p>\n<p><br>\n<br></p>\n",
        "properties": {
          "zlevel": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
            "defaultValue": 0
          },
          "z": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
            "defaultValue": 2
          },
          "left": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>parallel 组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "top": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>parallel 组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": 60
          },
          "right": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>parallel 组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
            "defaultValue": 80
          },
          "bottom": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>parallel 组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n",
            "defaultValue": 60
          },
          "width": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>parallel 组件的宽度。默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "height": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>parallel 组件的高度。默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "layout": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>布局方式，可选值为：</p>\n<ul>\n<li><p><code>&#39;horizontal&#39;</code>：水平排布各个坐标轴。</p>\n</li>\n<li><p><code>&#39;vertical&#39;</code>：竖直排布各个坐标轴。</p>\n</li>\n</ul>\n",
          "defaultValue": "horizontal"
          },
          "parallelAxisDefault": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>配置多个 <a href=\"#parallelAxis\">parallelAxis</a> 时，有些值一样的属性，如果书写多遍则比较繁琐，那么可以放置在 <a href=\"#parallel.parallelAxisDefault\">parallel.parallelAxisDefault</a> 里。在坐标轴初始化前，<code>parallelAxisDefault</code> 里的配置项，会分别融合进 <a href=\"#parallelAxis\">parallelAxis</a>，形成最终的坐标轴的配置。</p>\n<p><a href=\"http://echarts.baidu.com/gallery/editor.html?c=doc-example/parallel-all&amp;edit=1&amp;reset=1\" target=\"_blank\">参见示例</a></p>\n<p><br></p>\n",
            "properties": {
              "type": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code>&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据，为该类型时必须通过 <a href=\"#parallelAxis.data\">data</a> 设置类目数据。</p>\n</li>\n<li><p><code>&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。</p>\n</li>\n<li><p><code>&#39;log&#39;</code>\n  对数轴。适用于对数数据。</p>\n</li>\n</ul>\n",
                "defaultValue": "value"
              },
              "name": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称。</p>\n"
              },
              "nameLocation": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称显示位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code>&#39;start&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;end&#39;</code></li>\n</ul>\n",
                "defaultValue": "'start'"
              },
              "nameTextStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>坐标轴名称的文字样式。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴名称文字的颜色。</p>\n",
                    "defaultValue": "\"#fff\""
                  },
                  "fontStyle": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴名称文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontWeight": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴名称文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontFamily": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴名称文字的字体系列</p>\n",
                    "defaultValue": "'sans-serief'"
                  },
                  "fontSize": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴名称文字的字体大小</p>\n",
                    "defaultValue": 12
                  }
                }
              },
              "nameGap": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴名称与轴线之间的距离。</p>\n",
                "defaultValue": 15
              },
              "inverse": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否是反向坐标轴。ECharts 3 中新加。</p>\n",
                "defaultValue": false
              },
              "boundaryGap": {
                "type": [
                  "boolean",
                  "Array"
                ],
                "descriptionCN": "<p>坐标轴两边留白策略，类目轴和非类目轴的设置和表现不一样。</p>\n<p>类目轴中 <code>boundaryGap</code> 可以配置为 <code>true</code> 和 <code>false</code>。默认为 <code>true</code>，这时候<a href=\"#parallelAxis.axisTick\">刻度</a>只是作为分隔线，标签和数据点都会在两个<a href=\"#parallelAxis.axisTick\">刻度</a>之间的带(band)中间。</p>\n<p>非类目轴，包括时间，数值，对数轴，<code>boundaryGap</code>是一个两个值的数组，分别表示数据最小值和最大值的延伸范围，可以直接设置数值或者相对的百分比，在设置 <a href=\"#parallelAxis.min\">min</a> 和 <a href=\"#parallelAxis.max\">max</a> 后无效。<strong>示例：</strong></p>\n<pre><code class=\"lang-js\">boundaryGap: [&#39;20%&#39;, &#39;20%&#39;]\n</code></pre>\n"
              },
              "min": {
                "type": [
                  "number",
                  "string"
                ],
                "descriptionCN": "<p>坐标轴刻度最小值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMin&#39;</code>，此时取数据在该轴上的最小值作为最小刻度。</p>\n<p>不设置时会自动计算最小值保证坐标轴刻度的均匀分布。</p>\n",
                "defaultValue": "'auto'"
              },
              "max": {
                "type": [
                  "number",
                  "string"
                ],
                "descriptionCN": "<p>坐标轴刻度最大值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMax&#39;</code>，此时取数据在该轴上的最大值作为最大刻度。</p>\n<p>不设置时会自动计算最大值保证坐标轴刻度的均匀分布。</p>\n",
                "defaultValue": "'auto'"
              },
              "scale": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>只在数值轴中（<a href=\"#parallelAxis.type\">type</a>: &#39;value&#39;）有效。</p>\n<p>是否是脱离 0 值比例。设置成 <code>true</code> 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。</p>\n<p>在设置 <a href=\"#parallelAxis.min\">min</a> 和 <a href=\"#parallelAxis.max\">max</a> 之后该配置项无效。</p>\n",
                "defaultValue": false
              },
              "splitNumber": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴的分割段数，需要注意的是这个分割段数只是个预估值，最后实际显示的段数会在这个基础上根据分割后坐标轴刻度显示的易读程度作调整。</p>\n<p>在类目轴中无效。</p>\n",
                "defaultValue": 5
              },
              "interval": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴分割间隔。</p>\n<p>因为 <a href=\"#parallelAxis.splitNumber\">splitNumber</a> 是预估的值，实际根据策略计算出来的刻度可能无法达到想要的效果，这时候可以使用 interval 配合 <a href=\"#parallelAxis.min\">min</a>, <a href=\"#parallelAxis.max\">max</a> 强制设定刻度划分，一般不建议使用。</p>\n<p>无法在类目轴中使用。在时间轴（<a href=\"#parallelAxis.type\">type</a>: &#39;time&#39;）中需要传时间戳，在对数轴（<a href=\"#parallelAxis.type\">type</a>: &#39;log&#39;）中需要传指数值。</p>\n"
              },
              "axisLine": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>坐标轴轴线相关设置。</p>\n",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示坐标轴轴线。</p>\n",
                    "defaultValue": true
                  },
                  "lineStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>坐标轴线线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                        "defaultValue": "'#333'"
                      },
                      "width": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>坐标轴线线宽。</p>\n",
                        "defaultValue": 1
                      },
                      "type": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>坐标轴线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'solid'"
                      },
                      "shadowBlur": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                      },
                      "shadowColor": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                      },
                      "shadowOffsetX": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                        "defaultValue": 0
                      },
                      "shadowOffsetY": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                        "defaultValue": 0
                      },
                      "opacity": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                      }
                    }
                  }
                }
              },
              "axisTick": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>坐标轴刻度相关设置。</p>\n",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示坐标轴刻度。</p>\n",
                    "defaultValue": true
                  },
                  "interval": {
                    "type": [
                      "number",
                      "Function"
                    ],
                    "descriptionCN": "<p>坐标轴刻度的显示间隔，在类目轴中有效。默认同 <a href=\"#parallelAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                    "defaultValue": "'auto'"
                  },
                  "inside": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>坐标轴刻度是否朝内，默认朝外。</p>\n",
                    "defaultValue": false
                  },
                  "length": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴刻度的长度。</p>\n",
                    "defaultValue": 5
                  },
                  "lineStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>坐标轴刻度线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                        "defaultValue": "'#333'"
                      },
                      "width": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>坐标轴刻度线宽。</p>\n",
                        "defaultValue": 1
                      },
                      "type": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>坐标轴刻度线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'solid'"
                      },
                      "shadowBlur": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                      },
                      "shadowColor": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                      },
                      "shadowOffsetX": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                        "defaultValue": 0
                      },
                      "shadowOffsetY": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                        "defaultValue": 0
                      },
                      "opacity": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                      }
                    }
                  }
                }
              },
              "axisLabel": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>坐标轴刻度标签的相关设置。</p>\n",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示刻度标签。</p>\n",
                    "defaultValue": true
                  },
                  "interval": {
                    "type": [
                      "number",
                      "Function"
                    ],
                    "descriptionCN": "<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                    "defaultValue": "'auto'"
                  },
                  "inside": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>刻度标签是否朝内，默认朝外。</p>\n",
                    "defaultValue": false
                  },
                  "rotate": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。</p>\n<p>旋转的角度从 -90 度到 90 度。</p>\n",
                    "defaultValue": 0
                  },
                  "margin": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>刻度标签与轴线之间的距离。</p>\n",
                    "defaultValue": 8
                  },
                  "formatter": {
                    "type": [
                      "string",
                      "Function"
                    ],
                    "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                    "defaultValue": null
                  },
                  "textStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>文字的颜色。</p>\n",
                        "defaultValue": "'#333'"
                      },
                      "fontStyle": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontWeight": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontFamily": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>文字的字体系列</p>\n",
                        "defaultValue": "'sans-serief'"
                      },
                      "fontSize": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>文字的字体大小</p>\n",
                        "defaultValue": 12
                      }
                    }
                  }
                }
              },
              "data": {
                "type": [
                  "Array"
                ],
                "descriptionCN": "<p>类目数据，在类目轴（<a href=\"#parallelAxis.type\">type</a>: &#39;category&#39;）中有效。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">// 所有类目名称列表\ndata: [&#39;周一&#39;, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n// 每一项也可以是具体的配置项，此时取配置项中的 `value` 为类目名\ndata: [{\n    value: &#39;周一&#39;,\n    // 突出周一\n    textStyle: {\n        fontSize: 20,\n        color: &#39;red&#39;\n    }\n}, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n</code></pre>\n",
                "items": {
                  "type": "Object",
                  "properties": {
                    "value": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>单个类目名称。</p>\n"
                    },
                    "textStyle": {
                      "type": [
                        "Object"
                      ],
                      "descriptionCN": "<p>类目标签的文字样式。</p>\n",
                      "properties": {
                        "color": {
                          "type": [
                            "Color"
                          ],
                          "descriptionCN": "<p>文字的颜色。</p>\n",
                          "defaultValue": "\"#fff\""
                        },
                        "align": {
                          "type": [
                            "string"
                          ],
                          "descriptionCN": "<p>文字水平对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;left&#39;</code></li>\n<li><code>&#39;center&#39;</code></li>\n<li><code>&#39;right&#39;</code></li>\n</ul>\n"
                        },
                        "baseline": {
                          "type": [
                            "string"
                          ],
                          "descriptionCN": "<p>文字基线对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;top&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;bottom&#39;</code></li>\n</ul>\n"
                        },
                        "fontStyle": {
                          "type": [
                            "string"
                          ],
                          "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                          "defaultValue": "'normal'"
                        },
                        "fontWeight": {
                          "type": [
                            "string"
                          ],
                          "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                          "defaultValue": "'normal'"
                        },
                        "fontFamily": {
                          "type": [
                            "string"
                          ],
                          "descriptionCN": "<p>文字的字体系列</p>\n",
                          "defaultValue": "'sans-serief'"
                        },
                        "fontSize": {
                          "type": [
                            "number"
                          ],
                          "descriptionCN": "<p>文字的字体大小</p>\n",
                          "defaultValue": 12
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parallelAxis": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>这个组件是平行坐标系中的坐标轴。</p>\n<p><strong>平行坐标系介绍</strong></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Parallel_coordinates\" target=\"_blank\">平行坐标系（Parallel Coordinates）</a> 是一种常用的可视化高维数据的图表。</p>\n<p>例如 <a href=\"#series-parallel.data\">series-parallel.data</a> 中有如下数据：</p>\n<pre><code class=\"lang-javascript\">[\n    [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n    [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n    [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n    [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n    { // 数据项也可以是 Object，从而里面能含有对线条的特殊设置。\n        value: [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;]\n        lineStyle: {...},\n    }\n    ...\n]\n</code></pre>\n<p>数据中，每一行是一个『数据项』，每一列属于一个『维度』。（例如上面数据每一列的含义分别是：『日期』,『AQI指数』, 『PM2.5』, 『PM10』, 『一氧化碳值』, 『二氧化氮值』, 『二氧化硫值』）。</p>\n<p>平行坐标系适于对这种多维数据进行可视化分析。每一个维度（每一列）对应一个坐标轴，每一个『数据项』是一条线，贯穿多个坐标轴。在坐标轴上，可以进行数据选取等操作。如下：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/parallel-all&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n\n\n<p><strong>配置方式概要</strong></p>\n<p>『平行坐标系』的 <code>option</code> 基本配置如下例：</p>\n<pre><code class=\"lang-javascript\">option = {\n    parallelAxis: [                     // 这是一个个『坐标轴』的定义\n        {dim: 0, name: schema[0].text}, // 每个『坐标轴』有个 &#39;dim&#39; 属性，表示坐标轴的维度号。\n        {dim: 1, name: schema[1].text},\n        {dim: 2, name: schema[2].text},\n        {dim: 3, name: schema[3].text},\n        {dim: 4, name: schema[4].text},\n        {dim: 5, name: schema[5].text},\n        {dim: 6, name: schema[6].text},\n        {dim: 7, name: schema[7].text,\n            type: &#39;category&#39;,           // 坐标轴也可以支持类别型数据\n            data: [&#39;优&#39;, &#39;良&#39;, &#39;轻度污染&#39;, &#39;中度污染&#39;, &#39;重度污染&#39;, &#39;严重污染&#39;]\n        }\n    ],\n    parallel: {                         // 这是『坐标系』的定义\n        left: &#39;5%&#39;,                     // 平行坐标系的位置设置\n        right: &#39;13%&#39;,\n        bottom: &#39;10%&#39;,\n        top: &#39;20%&#39;,\n        parallelAxisDefault: {          // 『坐标轴』的公有属性可以配置在这里避免重复书写\n            type: &#39;value&#39;,\n            nameLocation: &#39;end&#39;,\n            nameGap: 20\n        }\n    },\n    series: [                           // 这里三个系列共用一个平行坐标系\n        {\n            name: &#39;北京&#39;,\n            type: &#39;parallel&#39;,           // 这个系列类型是 &#39;parallel&#39;\n            data: [\n                [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n                [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n                ...\n            ]\n        },\n        {\n            name: &#39;上海&#39;,\n            type: &#39;parallel&#39;,\n            data: [\n                [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n                [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n                ...\n            ]\n        },\n        {\n            name: &#39;广州&#39;,\n            type: &#39;parallel&#39;,\n            data: [\n                [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n                [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;],\n                ...\n            ]\n        }\n    ]\n};\n</code></pre>\n<p>需要涉及到三个组件：<a href=\"#parallel\">parallel</a>、<a href=\"#parallelAxis\">parallelAxis</a>、<a href=\"#series-parallel\">series-parallel</a></p>\n<ul>\n<li><p><a href=\"#parallel\">parallel</a></p>\n<p>  这个配置项是平行坐标系的『坐标系』本身。一个系列（<code>series</code>）或多个系列（如上图中的『北京』、『上海』、『广州』分别各是一个系列）可以共用这个『坐标系』。</p>\n<p>  和其他坐标系一样，坐标系也可以创建多个。</p>\n<p>  位置设置，也是放在这里进行。</p>\n</li>\n<li><p><a href=\"#parallelAxis\">parallelAxis</a></p>\n<p>  这个是『坐标系』中的坐标轴的配置。自然，需要有多个坐标轴。</p>\n<p>  其中有 <a href=\"#parallelAxis.parallelIndex\">parallelAxis.parallelIndex</a> 属性，指定这个『坐标轴』在哪个『坐标系』中。默认使用第一个『坐标系』。</p>\n</li>\n<li><p><a href=\"#series-parallel\">series-parallel</a></p>\n<p>  这个是『系列』的定义。系列被画到『坐标系』上。</p>\n<p>  其中有 <a href=\"#series-parallel.parallelIndex\">series-parallel.parallelIndex</a> 属性，指定使用哪个『坐标系』。默认使用第一个『坐标系』。</p>\n</li>\n</ul>\n<p><strong>配置注意和最佳实践</strong></p>\n<p>配置多个 <a href=\"#parallelAxis\">parallelAxis</a> 时，有些值一样的属性，如果书写多遍则比较繁琐，那么可以放置在 <a href=\"#parallel.parallelAxisDefault\">parallel.parallelAxisDefault</a> 里。在坐标轴初始化前，<code>parallelAxisDefault</code> 里的配置项，会分别融合进 <a href=\"#parallelAxis\">parallelAxis</a>，形成最终的坐标轴的配置。</p>\n<p><br>\n<br></p>\n",
        "properties": {
          "dim": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴的维度号。</p>\n<p>例如 <a href=\"#series-parallel.data\">series-parallel.data</a> 中有如下数据：</p>\n<pre><code class=\"lang-javascript\">[\n    [1,  55,  9,   56,  0.46,  18,  6,  &#39;良&#39;],\n    [2,  25,  11,  21,  0.65,  34,  9,  &#39;优&#39;],\n    [3,  56,  7,   63,  0.3,   14,  5,  &#39;良&#39;],\n    [4,  33,  7,   29,  0.33,  16,  6,  &#39;优&#39;],\n    { // 数据项也可以是 Object，从而里面能含有对线条的特殊设置。\n        value: [5,  42,  24,  44,  0.76,  40,  16, &#39;优&#39;]\n        lineStyle: {...},\n    }\n    ...\n]\n</code></pre>\n<p>数据中，每一行是一个『数据项』，每一列属于一个『维度』。（例如上面数据每一列的含义分别是：『日期』,『AQI指数』, 『PM2.5』, 『PM10』, 『一氧化碳值』, 『二氧化氮值』, 『二氧化硫值』）。</p>\n<p><code>dim</code> 定义了数据的哪个维度（即哪个『列』）会对应到此坐标轴上。</p>\n<p>从 <code>0</code> 开始计数。例如，假设坐标轴的 <code>dim</code> 为 <code>1</code>，则表示数据中的第二列会对应到此坐标轴上。</p>\n"
          },
          "parallelIndex": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>用于定义『坐标轴』对应到哪个『坐标系』中。</p>\n<p>比如有如下配置：</p>\n<pre><code class=\"lang-javascript\">myChart.setOption({\n    parallel: [\n        {...},                      // 第一个平行坐标系\n        {...}                       // 第二个平行坐标系\n    ],\n    parallelAxis: [\n        {parallelIndex: 1, ...},    // 第一个坐标轴，对应到第二个平行坐标系\n        {parallelIndex: 0, ...},    // 第二个坐标轴，对应到第一个平行坐标系\n        {parallelIndex: 1, ...},    // 第三个坐标轴，对应到第二个平行坐标系\n        {parallelIndex: 0, ...}     // 第四个坐标轴，对应到第一个平行坐标系\n    ],\n    ...\n});\n</code></pre>\n<p>只有一个平行坐标系时可不用设置，自动取默认值 <code>0</code>。</p>\n",
            "defaultValue": 0
          },
          "areaSelectStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>在坐标轴上可以进行框选，这里是一些框选的设置。</p>\n<p><br></p>\n",
            "properties": {
              "width": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>框选范围的宽度。</p>\n",
                "defaultValue": 20
              },
              "borderWidth": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>选框的边框宽度。</p>\n",
                "defaultValue": 1
              },
              "borderColor": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>选框的边框颜色。</p>\n",
                "defaultValue": "'rgba(160,197,232)'"
              },
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>选框的填充色。</p>\n",
                "defaultValue": "'rgba(160,197,232)'"
              },
              "opacity": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>选框的透明度。</p>\n",
                "defaultValue": 0.3
              }
            }
          },
          "type": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴类型。</p>\n<p>可选：</p>\n<ul>\n<li><p><code>&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code>&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据，为该类型时必须通过 <a href=\"#parallelAxis.data\">data</a> 设置类目数据。</p>\n</li>\n<li><p><code>&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。</p>\n</li>\n<li><p><code>&#39;log&#39;</code>\n  对数轴。适用于对数数据。</p>\n</li>\n</ul>\n",
            "defaultValue": "value"
          },
          "name": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称。</p>\n"
          },
          "nameLocation": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>坐标轴名称显示位置。</p>\n<p><strong>可选：</strong></p>\n<ul>\n<li><code>&#39;start&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;end&#39;</code></li>\n</ul>\n",
            "defaultValue": "'start'"
          },
          "nameTextStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴名称的文字样式。</p>\n",
            "properties": {
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>坐标轴名称文字的颜色。</p>\n",
                "defaultValue": "\"#fff\""
              },
              "fontStyle": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontWeight": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                "defaultValue": "'normal'"
              },
              "fontFamily": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体系列</p>\n",
                "defaultValue": "'sans-serief'"
              },
              "fontSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴名称文字的字体大小</p>\n",
                "defaultValue": 12
              }
            }
          },
          "nameGap": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴名称与轴线之间的距离。</p>\n",
            "defaultValue": 15
          },
          "inverse": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否是反向坐标轴。ECharts 3 中新加。</p>\n",
            "defaultValue": false
          },
          "boundaryGap": {
            "type": [
              "boolean",
              "Array"
            ],
            "descriptionCN": "<p>坐标轴两边留白策略，类目轴和非类目轴的设置和表现不一样。</p>\n<p>类目轴中 <code>boundaryGap</code> 可以配置为 <code>true</code> 和 <code>false</code>。默认为 <code>true</code>，这时候<a href=\"#parallelAxis.axisTick\">刻度</a>只是作为分隔线，标签和数据点都会在两个<a href=\"#parallelAxis.axisTick\">刻度</a>之间的带(band)中间。</p>\n<p>非类目轴，包括时间，数值，对数轴，<code>boundaryGap</code>是一个两个值的数组，分别表示数据最小值和最大值的延伸范围，可以直接设置数值或者相对的百分比，在设置 <a href=\"#parallelAxis.min\">min</a> 和 <a href=\"#parallelAxis.max\">max</a> 后无效。<strong>示例：</strong></p>\n<pre><code class=\"lang-js\">boundaryGap: [&#39;20%&#39;, &#39;20%&#39;]\n</code></pre>\n"
          },
          "min": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最小值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMin&#39;</code>，此时取数据在该轴上的最小值作为最小刻度。</p>\n<p>不设置时会自动计算最小值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "max": {
            "type": [
              "number",
              "string"
            ],
            "descriptionCN": "<p>坐标轴刻度最大值，在类目轴中无效。</p>\n<p>可以设置成特殊值 <code>&#39;dataMax&#39;</code>，此时取数据在该轴上的最大值作为最大刻度。</p>\n<p>不设置时会自动计算最大值保证坐标轴刻度的均匀分布。</p>\n",
            "defaultValue": "'auto'"
          },
          "scale": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>只在数值轴中（<a href=\"#parallelAxis.type\">type</a>: &#39;value&#39;）有效。</p>\n<p>是否是脱离 0 值比例。设置成 <code>true</code> 后坐标刻度不会强制包含零刻度。在双数值轴的散点图中比较有用。</p>\n<p>在设置 <a href=\"#parallelAxis.min\">min</a> 和 <a href=\"#parallelAxis.max\">max</a> 之后该配置项无效。</p>\n",
            "defaultValue": false
          },
          "splitNumber": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴的分割段数，需要注意的是这个分割段数只是个预估值，最后实际显示的段数会在这个基础上根据分割后坐标轴刻度显示的易读程度作调整。</p>\n<p>在类目轴中无效。</p>\n",
            "defaultValue": 5
          },
          "interval": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>坐标轴分割间隔。</p>\n<p>因为 <a href=\"#parallelAxis.splitNumber\">splitNumber</a> 是预估的值，实际根据策略计算出来的刻度可能无法达到想要的效果，这时候可以使用 interval 配合 <a href=\"#parallelAxis.min\">min</a>, <a href=\"#parallelAxis.max\">max</a> 强制设定刻度划分，一般不建议使用。</p>\n<p>无法在类目轴中使用。在时间轴（<a href=\"#parallelAxis.type\">type</a>: &#39;time&#39;）中需要传时间戳，在对数轴（<a href=\"#parallelAxis.type\">type</a>: &#39;log&#39;）中需要传指数值。</p>\n"
          },
          "axisLine": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴轴线相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴轴线。</p>\n",
                "defaultValue": true
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴线线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴线线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴线线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisTick": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示坐标轴刻度。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度的显示间隔，在类目轴中有效。默认同 <a href=\"#parallelAxis.axisLabel.interval\">axisLabel.interval</a> 一样。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>坐标轴刻度是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "length": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>坐标轴刻度的长度。</p>\n",
                "defaultValue": 5
              },
              "lineStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#333'"
                  },
                  "width": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线宽。</p>\n",
                    "defaultValue": 1
                  },
                  "type": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>坐标轴刻度线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'solid'"
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "axisLabel": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>坐标轴刻度标签的相关设置。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示刻度标签。</p>\n",
                "defaultValue": true
              },
              "interval": {
                "type": [
                  "number",
                  "Function"
                ],
                "descriptionCN": "<p>坐标轴刻度标签的显示间隔，在类目轴中有效。</p>\n<p>默认会采用标签不重叠的策略间隔显示标签，可以设置成 0 强制显示所有标签。</p>\n<p>可以用数值表示间隔的数据，也可以通过回调函数控制。回调函数格式如下：</p>\n<pre><code class=\"lang-js\">(index:number, value: string) =&gt; boolean\n</code></pre>\n<p>第一个参数是类目的 index，第二个值是类目名称，如果跳过则返回 <code>false</code>。</p>\n",
                "defaultValue": "'auto'"
              },
              "inside": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>刻度标签是否朝内，默认朝外。</p>\n",
                "defaultValue": false
              },
              "rotate": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。</p>\n<p>旋转的角度从 -90 度到 90 度。</p>\n",
                "defaultValue": 0
              },
              "margin": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>刻度标签与轴线之间的距离。</p>\n",
                "defaultValue": 8
              },
              "formatter": {
                "type": [
                  "string",
                  "Function"
                ],
                "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                "defaultValue": null
              },
              "textStyle": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>文字的颜色。</p>\n",
                    "defaultValue": "'#333'"
                  },
                  "fontStyle": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontWeight": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                    "defaultValue": "'normal'"
                  },
                  "fontFamily": {
                    "type": [
                      "string"
                    ],
                    "descriptionCN": "<p>文字的字体系列</p>\n",
                    "defaultValue": "'sans-serief'"
                  },
                  "fontSize": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>文字的字体大小</p>\n",
                    "defaultValue": 12
                  }
                }
              }
            }
          },
          "data": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>类目数据，在类目轴（<a href=\"#parallelAxis.type\">type</a>: &#39;category&#39;）中有效。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">// 所有类目名称列表\ndata: [&#39;周一&#39;, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n// 每一项也可以是具体的配置项，此时取配置项中的 `value` 为类目名\ndata: [{\n    value: &#39;周一&#39;,\n    // 突出周一\n    textStyle: {\n        fontSize: 20,\n        color: &#39;red&#39;\n    }\n}, &#39;周二&#39;, &#39;周三&#39;, &#39;周四&#39;, &#39;周五&#39;, &#39;周六&#39;, &#39;周日&#39;]\n</code></pre>\n",
            "items": {
              "type": "Object",
              "properties": {
                "value": {
                  "type": [
                    "string"
                  ],
                  "descriptionCN": "<p>单个类目名称。</p>\n"
                },
                "textStyle": {
                  "type": [
                    "Object"
                  ],
                  "descriptionCN": "<p>类目标签的文字样式。</p>\n",
                  "properties": {
                    "color": {
                      "type": [
                        "Color"
                      ],
                      "descriptionCN": "<p>文字的颜色。</p>\n",
                      "defaultValue": "\"#fff\""
                    },
                    "align": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字水平对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;left&#39;</code></li>\n<li><code>&#39;center&#39;</code></li>\n<li><code>&#39;right&#39;</code></li>\n</ul>\n"
                    },
                    "baseline": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字基线对齐方式，默认自动。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;top&#39;</code></li>\n<li><code>&#39;middle&#39;</code></li>\n<li><code>&#39;bottom&#39;</code></li>\n</ul>\n"
                    },
                    "fontStyle": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontWeight": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                      "defaultValue": "'normal'"
                    },
                    "fontFamily": {
                      "type": [
                        "string"
                      ],
                      "descriptionCN": "<p>文字的字体系列</p>\n",
                      "defaultValue": "'sans-serief'"
                    },
                    "fontSize": {
                      "type": [
                        "number"
                      ],
                      "descriptionCN": "<p>文字的字体大小</p>\n",
                      "defaultValue": 12
                    }
                  }
                }
              }
            }
          }
        }
      },
      "timeline": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p><code>timeline</code> 组件，提供了在多个 <code>ECharts option</code> 间进行切换、播放等操作的功能。</p>\n<p>示例效果如下：</p>\n<iframe data-src=\"http://echarts.baidu.com/gallery/view.html?c=doc-example/mix-timeline-all&edit=1&reset=1\" width=\"600\" height=\"400\" ></iframe>\n\n\n<p><code>timeline</code> 和其他组件有些不同，它需要操作『多个option』。\n假设，我们把 ECharts 的传统的option称为 <code>原子option</code>，那么使用 <code>timeline</code> 时，传入 ECharts 的 option 就成为了一个集合多个 <code>原子option</code> 的 <code>复合option</code>。如下示例：</p>\n<pre><code class=\"lang-javascript\">// 如下，baseOption 是一个 『原子option』，options 数组中的每一项也是一个 『原子option』。\n// 每个『原子option』中就是本文档中描述的各种配置项。\nmyChart.setOption(\n    {\n        baseOption: {\n            timeline: {\n                ...,\n                data: [&#39;2002-01-01&#39;, &#39;2003-01-01&#39;, &#39;2004-01-01&#39;]\n            },\n            title: {\n                subtext: &#39;数据来自国家统计局&#39;\n            },\n            grid: {...},\n            xAxis: [...],\n            yAxis: [...],\n            series: [\n                { // 系列一的一些其他配置\n                    type: &#39;bar&#39;,\n                    ...\n                },\n                { // 系列二的一些其他配置\n                    type: &#39;line&#39;,\n                    ...\n                },\n                { // 系列三的一些其他配置\n                    type: &#39;pie&#39;,\n                    ...\n                }\n            ]\n        },\n        options: [\n            { // 这是&#39;2002-01-01&#39; 对应的 option\n                title: {\n                    text: &#39;2002年统计值&#39;\n                },\n                series: [\n                    {data: []}, // 系列一的数据\n                    {data: []}, // 系列二的数据\n                    {data: []}  // 系列三的数据\n                ]\n            },\n            { // 这是&#39;2003-01-01&#39; 对应的 option\n                title: {\n                    text: &#39;2003年统计值&#39;\n                },\n                series: [\n                    {data: []},\n                    {data: []},\n                    {data: []}\n                ]\n            },\n            { // 这是&#39;2004-01-01&#39; 对应的 option\n                title: {\n                    text: &#39;2004年统计值&#39;\n                },\n                series: [\n                    {data: []},\n                    {data: []},\n                    {data: []}\n                ]\n            }\n        ]\n    }\n);\n</code></pre>\n<p>在上例中，<code>timeline.data</code> 中的每一项，对应于 <code>options</code> 数组中的每个 <code>option</code>。</p>\n<p><br>\n<strong>使用注意与最佳实践：</strong></p>\n<ul>\n<li><p>公有的配置项，推荐配置在 <code>baseOption</code> 中。<code>timeline</code> 播放切换时，会把 <code>options</code> 数组中的对应的 <code>option</code>，与 <code>baseOption</code> 进行 merge 形成最终的 <code>option</code>。</p>\n</li>\n<li><p><code>options</code> 数组中，如果某一数组项中配置了某个属性，那么其他数组项中也必须配置某个属性，而不能缺省。否则这个属性的执行效果会遗留。</p>\n</li>\n</ul>\n<p><br>\n<strong>与 ECharts2 的兼容性：</strong></p>\n<ul>\n<li><p>ECharts3 中不再支持 timeline.notMerge 参数，也就是不支持 notMerge 模式。如果遇到这种场景需要使用，可在外部进行option管理，并用 setOption(option, true) 这样的notMerge方式设置。</p>\n</li>\n<li><p>ECharts3 和 ECharts2 相比，timeline 属性的定义位置有所不同，移到了 <code>baseOption</code> 中，统一作为一个普通的组件看待。但是，仍然兼容 ECharts2 的 timeline 定义位置，只是不再推荐这样写。</p>\n</li>\n</ul>\n",
        "properties": {
          "show": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>是否显示 <code>timeline</code> 组件。如果设置为<code>false</code>，不会显示，但是功能还存在。</p>\n",
            "defaultValue": true
          },
          "type": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>这个属性目前只支持为 <code>slider</code>，不需要更改。</p>\n",
            "defaultValue": "'slider'"
          },
          "axisType": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>轴的类型。可选值为：</p>\n<ul>\n<li><p><code>&#39;value&#39;</code>\n  数值轴，适用于连续数据。</p>\n</li>\n<li><p><code>&#39;category&#39;</code>\n  类目轴，适用于离散的类目数据。</p>\n</li>\n<li><p><code>&#39;time&#39;</code>\n  时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。</p>\n</li>\n</ul>\n",
            "defaultValue": "'time'"
          },
          "currentIndex": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>表示当前选中项是哪项。比如，<code>currentIndex</code> 为 <code>0</code> 时，表示当前选中项为 <code>timeline.data[0]</code>（即使用 <code>options[0]</code>）。</p>\n",
            "defaultValue": 0
          },
          "autoPlay": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>表示是否自动播放。</p>\n",
            "defaultValue": false
          },
          "rewind": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>表示是否反向播放。</p>\n",
            "defaultValue": false
          },
          "loop": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<p>表示是否循环播放。</p>\n",
            "defaultValue": true
          },
          "playInterval": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>表示播放的速度（跳动的间隔），单位毫秒（ms）。</p>\n",
            "defaultValue": 2000
          },
          "realTime: true,": {
            "type": [
              "*"
            ],
            "descriptionCN": "<p>拖动圆点的时候，是否实时更新视图。</p>\n"
          },
          "controlPosition": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>表示『播放』按钮的位置。可选值：<code>&#39;left&#39;</code>、<code>&#39;right&#39;</code>。</p>\n",
            "defaultValue": "'left'"
          },
          "zlevel": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的 zlevel 值。</p>\n<p><code>zlevel</code>用于 Canvas 分层，不同<code>zlevel</code>值的图形会放置在不同的 Canvas 中，Canvas 分层是一种常见的优化手段。我们可以把一些图形变化频繁（例如有动画）的组件设置成一个单独的<code>zlevel</code>。需要注意的是过多的 Canvas 会引起内存开销的增大，在手机端上需要谨慎使用以防崩溃。</p>\n<p>zlevel 大的 Canvas 会放在 zlevel 小的 Canvas 的上面。</p>\n",
            "defaultValue": 0
          },
          "z": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>组件的所有图形的<code>z</code>值。控制图形的前后顺序。<code>z</code>值小的图形会被<code>z</code>值大的图形覆盖。</p>\n<p><code>z</code>相比<code>zlevel</code>优先级更低，而且不会创建新的 Canvas。</p>\n",
            "defaultValue": 2
          },
          "left": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>timeline组件离容器左侧的距离。</p>\n<p>left 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>。</p>\n<p>如果 left 的值为<code>&#39;left&#39;</code>, <code>&#39;center&#39;</code>, <code>&#39;right&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "top": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>timeline组件离容器上侧的距离。</p>\n<p>top 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比，也可以是 <code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>。</p>\n<p>如果 top 的值为<code>&#39;top&#39;</code>, <code>&#39;middle&#39;</code>, <code>&#39;bottom&#39;</code>，组件会根据相应的位置自动对齐。</p>\n",
            "defaultValue": "'auto'"
          },
          "right": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>timeline组件离容器右侧的距离。</p>\n<p>right 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "bottom": {
            "type": [
              "string",
              "number"
            ],
            "descriptionCN": "<p>timeline组件离容器下侧的距离。</p>\n<p>bottom 的值可以是像 <code>20</code> 这样的具体像素值，可以是像 <code>&#39;20%&#39;</code> 这样相对于容器高宽的百分比。</p>\n<p>默认自适应。</p>\n",
            "defaultValue": "'auto'"
          },
          "padding": {
            "type": [
              "number",
              "Array"
            ],
            "descriptionCN": "<p>timeline内边距，单位px，默认各方向内边距为5，接受数组分别设定上右下左边距。</p>\n<p>使用示例：</p>\n<pre><code class=\"lang-js\">// 设置内边距为 5\npadding: 5\n// 设置上下的内边距为 5，左右的内边距为 10\npadding: [5, 10]\n// 分别设置四个方向的内边距\npadding: [\n    5,  // 上\n    10, // 右\n    5,  // 下\n    10, // 左\n]\n</code></pre>\n",
            "defaultValue": 5
          },
          "orient": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>摆放方式，可选值有：</p>\n<ul>\n<li><code>&#39;vertical&#39;</code>：竖直放置。</li>\n<li><code>&#39;horizontal&#39;</code>：水平放置。</li>\n</ul>\n",
            "defaultValue": "'horizontal'"
          },
          "inverse": {
            "type": [
              "boolean"
            ],
            "descriptionCN": "<ul>\n<li>是否反向放置 <code>timeline</code>，反向则首位颠倒过来。</li>\n</ul>\n",
            "defaultValue": false
          },
          "symbol": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>timeline标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
            "defaultValue": "'emptyCircle'"
          },
          "symbolSize": {
            "type": [
              "number",
              "Array"
            ],
            "descriptionCN": "<p>timeline标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n",
            "defaultValue": 10
          },
          "symbolRotate": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>timeline标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
          },
          "symbolOffset": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p>timeline标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
            "defaultValue": "[0, 0]"
          },
          "lineStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示轴线。可以设置为 <code>false</code> 不显示轴线，则可以做出不同的样式效果。</p>\n",
                "defaultValue": true
              },
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>timeline 线的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                "defaultValue": "'#304654'"
              },
              "width": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>timeline 线宽。</p>\n",
                "defaultValue": 2
              },
              "type": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>timeline 线的类型。</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;solid&#39;</code></li>\n<li><code>&#39;dashed&#39;</code></li>\n<li><code>&#39;dotted&#39;</code></li>\n</ul>\n",
                "defaultValue": "solid"
              },
              "shadowBlur": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
              },
              "shadowColor": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
              },
              "shadowOffsetX": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                "defaultValue": 0
              },
              "shadowOffsetY": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                "defaultValue": 0
              },
              "opacity": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
              }
            }
          },
          "label": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>轴的文本标签。有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是文本正常的样式，<code>emphasis</code> 是文本高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为文本的样式。</p>\n",
            "properties": {
              "position": {
                "type": [
                  "string",
                  "number"
                ],
                "descriptionCN": "<p>可选的配置方式：</p>\n<ul>\n<li><p><code>&#39;auto&#39;</code>：\n  完全自动决定。</p>\n</li>\n<li><p><code>&#39;left&#39;</code>：\n  贴左边界放置。\n  当 <a href=\"#timeline.orient\">timline.orient</a> 为 <code>&#39;horizontal&#39;</code> 时有效。</p>\n</li>\n<li><p><code>&#39;right&#39;</code>：当 <a href=\"#timeline.orient\">timline.orient</a> 为 <code>&#39;horizontal&#39;</code> 时有效。\n  贴右边界放置。</p>\n</li>\n<li><p><code>&#39;top&#39;</code>：\n  贴上边界放置。\n  当 <a href=\"#timeline.orient\">timline.orient</a> 为 <code>&#39;vertical&#39;</code> 时有效。</p>\n</li>\n<li><p><code>&#39;bottom&#39;</code>：\n  贴下边界放置。\n  当 <a href=\"#timeline.orient\">timline.orient</a> 为 <code>&#39;vertical&#39;</code> 时有效。</p>\n</li>\n<li><p><code>number</code>：\n  指定某个数值时，表示 <code>label</code> 和轴的距离。为 <code>0</code> 时则和坐标轴重合，可以为正负值，决定 <code>label</code> 在坐标轴的哪一边。</p>\n</li>\n</ul>\n",
                "defaultValue": "'auto'"
              },
              "normal": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示 label。</p>\n",
                    "defaultValue": true
                  },
                  "interval": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "descriptionCN": "<p><code>label</code> 的间隔。当指定为数值时，例如指定为 <code>2</code>，则每隔两个显示一个 label。</p>\n",
                    "defaultValue": "'auto'"
                  },
                  "rotate": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p><code>label</code> 的旋转角度。正值表示逆时针旋转。</p>\n",
                    "defaultValue": 0
                  },
                  "formatter": {
                    "type": [
                      "string",
                      "Function"
                    ],
                    "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                    "defaultValue": null
                  },
                  "textStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>timeline.lable.normal文字的颜色。</p>\n",
                        "defaultValue": "'#304654'"
                      },
                      "fontStyle": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>timeline.lable.normal文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontWeight": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>timeline.lable.normal文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontFamily": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>timeline.lable.normal文字的字体系列</p>\n",
                        "defaultValue": "'sans-serief'"
                      },
                      "fontSize": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>timeline.lable.normal文字的字体大小</p>\n",
                        "defaultValue": 12
                      }
                    }
                  }
                }
              },
              "emphasis": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "show": {
                    "type": [
                      "boolean"
                    ],
                    "descriptionCN": "<p>是否显示 label。</p>\n",
                    "defaultValue": true
                  },
                  "interval": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "descriptionCN": "<p><code>label</code> 的间隔。当指定为数值时，例如指定为 <code>2</code>，则每隔两个显示一个 label。</p>\n",
                    "defaultValue": "'auto'"
                  },
                  "rotate": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p><code>label</code> 的旋转角度。正值表示逆时针旋转。</p>\n",
                    "defaultValue": 0
                  },
                  "formatter": {
                    "type": [
                      "string",
                      "Function"
                    ],
                    "descriptionCN": "<p>刻度标签的内容格式器，支持字符串模板和回调函数两种形式。</p>\n<p>示例:</p>\n<pre><code class=\"lang-js\">// 使用字符串模板，模板变量为刻度默认标签 {value}\nformatter: &#39;{value} kg&#39;\n\n// 使用函数模板，函数参数分别为刻度数值（类目），刻度的索引\nformatter: function (value, index) {\n    // 格式化成月/日，只在第一个刻度显示年份\n    var date = new Date(value);\n    var texts = [(date.getMonth() + 1), date.getDate()];\n    if (idx === 0) {\n        texts.unshift(date.getYear());\n    }\n    return texts.join(&#39;/&#39;);\n}\n</code></pre>\n",
                    "defaultValue": null
                  },
                  "textStyle": {
                    "type": [
                      "Object"
                    ],
                    "descriptionCN": "",
                    "properties": {
                      "color": {
                        "type": [
                          "Color"
                        ],
                        "descriptionCN": "<p>timeline.lable.emphasis文字的颜色。</p>\n",
                        "defaultValue": "'#c23531'"
                      },
                      "fontStyle": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>timeline.lable.emphasis文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontWeight": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>timeline.lable.emphasis文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
                        "defaultValue": "'normal'"
                      },
                      "fontFamily": {
                        "type": [
                          "string"
                        ],
                        "descriptionCN": "<p>timeline.lable.emphasis文字的字体系列</p>\n",
                        "defaultValue": "'sans-serief'"
                      },
                      "fontSize": {
                        "type": [
                          "number"
                        ],
                        "descriptionCN": "<p>timeline.lable.emphasis文字的字体大小</p>\n",
                        "defaultValue": 12
                      }
                    }
                  }
                }
              }
            }
          },
          "itemStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>timeline  图形样式，有 <code>normal</code> 和 <code>emphasis</code> 两个状态，<code>normal</code> 是图形正常的样式，<code>emphasis</code> 是图形高亮的样式，比如鼠标悬浮或者图例联动高亮的时候会使用 <code>emphasis</code> 作为图形的样式。</p>\n",
            "properties": {
              "normal": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>timeline 图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#304654'"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>timeline 图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                    "defaultValue": "\"#000\""
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>timeline 描边线宽。为 0 时无描边。</p>\n",
                    "defaultValue": 1
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              },
              "emphasis": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>timeline 图形的颜色。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n",
                    "defaultValue": "'#c23531'"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>timeline 图形的描边颜色。支持的格式同<code>color</code>。</p>\n",
                    "defaultValue": "\"#000\""
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>timeline 描边线宽。为 0 时无描边。</p>\n",
                    "defaultValue": 1
                  },
                  "shadowBlur": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形阴影的模糊大小。该属性配合 <code>shadowColor</code>,<code>shadowOffsetX</code>, <code>shadowOffsetY</code> 一起设置图形的阴影效果。</p>\n<p>示例：</p>\n<pre><code class=\"lang-js\">itemStyle: {\n    normal: {\n        shadowColor: &#39;rgba(0, 0, 0, 0.5)&#39;,\n        shadowBlur: 10\n    }\n}\n</code></pre>\n"
                  },
                  "shadowColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>阴影颜色。支持的格式同<code>color</code>。</p>\n"
                  },
                  "shadowOffsetX": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影水平方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "shadowOffsetY": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>阴影垂直方向上的偏移距离。</p>\n",
                    "defaultValue": 0
                  },
                  "opacity": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。</p>\n"
                  }
                }
              }
            }
          },
          "checkpointStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>『当前项』（<code>checkpoint</code>）的图形样式。</p>\n",
            "properties": {
              "symbol": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>timeline.checkpointStyle 标记的图形。</p>\n<p>可选自带的标记类型， 有 \n<code>&#39;circle&#39;</code>, <code>&#39;rect&#39;</code>, <code>&#39;roundRect&#39;</code>, <code>&#39;triangle&#39;</code>, <code>&#39;diamond&#39;</code>, <code>&#39;pin&#39;</code>, <code>&#39;arrow&#39;</code></p>\n<p>也可以通过 <code>&#39;image://url&#39;</code> 设置为图片，其中 url 为图片的链接。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n",
                "defaultValue": "'circle'"
              },
              "symbolSize": {
                "type": [
                  "number",
                  "Array"
                ],
                "descriptionCN": "<p>timeline.checkpointStyle 标记的大小，可以设置成诸如 <code>10</code> 这样单一的数字，也可以用数组分开表示高和宽，例如 <code>[20, 10]</code> 表示标记宽为<code>20</code>，高为<code>10</code>。</p>\n",
                "defaultValue": 13
              },
              "symbolRotate": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>timeline.checkpointStyle 标记的旋转角度。注意在 <code>markLine</code> 中当 <code>symbol</code> 为 <code>&#39;arrow&#39;</code> 时会忽略 <code>symbolRotate</code> 强制设置为切线的角度。</p>\n"
              },
              "symbolOffset": {
                "type": [
                  "Array"
                ],
                "descriptionCN": "<p>timeline.checkpointStyle 标记相对于原本位置的偏移。默认情况下，标记会居中置放在数据对应的位置，但是如果 symbol 是自定义的矢量路径或者图片，就有可能不希望 symbol 居中。这时候可以使用该配置项配置 symbol 相对于原本居中的偏移，可以是绝对的像素值，也可以是相对的百分比。</p>\n<p>例如 <code>[0, &#39;50%&#39;]</code> 就是把自己向上移动了一半的位置，在 symbol 图形是气泡的时候可以让图形下端的箭头对准数据点。</p>\n",
                "defaultValue": "[0, 0]"
              },
              "color": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p><code>timeline</code>组件中『当前项』（<code>checkpoint</code>）的颜色。</p>\n",
                "defaultValue": "'#c23531'"
              },
              "borderWidth": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p><code>timeline</code>组件中『当前项』（<code>checkpoint</code>）的边框宽度。</p>\n",
                "defaultValue": 5
              },
              "borderColor": {
                "type": [
                  "Color"
                ],
                "descriptionCN": "<p><code>timeline</code>组件中『当前项』（<code>checkpoint</code>）的边框颜色。</p>\n",
                "defaultValue": "'rgba(194,53,49, 0.5)'"
              },
              "animation": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p><code>timeline</code>组件中『当前项』（<code>checkpoint</code>）在 <code>timeline</code> 播放切换中的移动，是否有动画。</p>\n",
                "defaultValue": true
              },
              "animationDuration": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p><code>timeline</code>组件中『当前项』（<code>checkpoint</code>）的动画时长。</p>\n",
                "defaultValue": 300
              },
              "animationEasing: 'quinticInOut'": {
                "type": [
                  "*"
                ],
                "descriptionCN": "<p><code>timeline</code>组件中『当前项』（<code>checkpoint</code>）的动画的缓动效果。不同的缓动效果可以参考 <a href=\"http://echarts.baidu.com/gallery/view.html?c=line-easing\" target=\"_blank\">缓动示例</a>。</p>\n"
              }
            }
          },
          "controlStyle": {
            "type": [
              "Object"
            ],
            "descriptionCN": "<p>『控制按钮』的样式。『控制按钮』包括：『播放按钮』、『前进按钮』、『后退按钮』。</p>\n",
            "properties": {
              "show": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示『控制按钮』。设置为 <code>false</code> 则全不显示。</p>\n",
                "defaultValue": true
              },
              "showPlayBtn": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示『播放按钮』。</p>\n",
                "defaultValue": true
              },
              "showPrevBtn": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示『后退按钮』。</p>\n",
                "defaultValue": true
              },
              "showNextBtn": {
                "type": [
                  "boolean"
                ],
                "descriptionCN": "<p>是否显示『前进按钮』。</p>\n",
                "defaultValue": true
              },
              "itemSize": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>『控制按钮』的尺寸，单位为像素（px）。</p>\n",
                "defaultValue": 22
              },
              "itemGap": {
                "type": [
                  "number"
                ],
                "descriptionCN": "<p>『控制按钮』的间隔，单位为像素（px）。</p>\n",
                "defaultValue": 12
              },
              "position": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>『控制按钮』的位置。</p>\n<ul>\n<li><p>当 <a href=\"#timeline.orient\">timeline.orient</a> 为 <code>&#39;horizontal&#39;</code>时，<code>&#39;left&#39;</code>、<code>&#39;right&#39;</code>有效。</p>\n</li>\n<li><p>当 <a href=\"#timeline.orient\">timeline.orient</a> 为 <code>&#39;vertical&#39;</code>时，<code>&#39;top&#39;</code>、<code>&#39;bottom&#39;</code>有效。</p>\n</li>\n</ul>\n",
                "defaultValue": "'left'"
              },
              "playIcon": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>『播放按钮』的『可播放状态』的图形。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
              },
              "stopIcon": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>『播放按钮』的『可停止状态』的图形。</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
              },
              "prevIcon": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>『后退按钮』的图形</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
              },
              "nextIcon": {
                "type": [
                  "string"
                ],
                "descriptionCN": "<p>『前进按钮』的图形</p>\n<p>在 ECharts 3 里可以通过 <code>&#39;path://&#39;</code> 设置为任意的矢量路径，这种方式相比于图片来说不用担心因为缩放而产生锯齿或模糊，而且可以设置为任意颜色。路径图形会自适应调整为合适（如果是 symbol 的话就是 symbolSize）的大小。路径的格式参见 <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" target=\"_blank\">SVG PathData</a>。可以从 Adobe Illustrator 等工具编辑导出。</p>\n"
              },
              "normal": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>控制按钮的『正常状态』的样式。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>按钮颜色。</p>\n",
                    "defaultValue": "'#304654'"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>按钮边框颜色。</p>\n",
                    "defaultValue": "'#304654'"
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>按钮边框线宽。</p>\n",
                    "defaultValue": 1
                  }
                }
              },
              "emphasis": {
                "type": [
                  "Object"
                ],
                "descriptionCN": "<p>控制按钮的『高亮状态』的样式（hover时）。</p>\n",
                "properties": {
                  "color": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>按钮颜色。</p>\n",
                    "defaultValue": "'#c23531'"
                  },
                  "borderColor": {
                    "type": [
                      "Color"
                    ],
                    "descriptionCN": "<p>按钮边框颜色。</p>\n",
                    "defaultValue": "'#c23531'"
                  },
                  "borderWidth": {
                    "type": [
                      "number"
                    ],
                    "descriptionCN": "<p>按钮边框线宽。</p>\n",
                    "defaultValue": 2
                  }
                }
              }
            }
          },
          "data": {
            "type": [
              "Array"
            ],
            "descriptionCN": "<p><code>timeline</code> 数据。<code>Array</code> 的每一项，可以是直接的数值。\n如果需要对每个数据项单独进行样式定义，则数据项写成 <code>Object</code>。<code>Object</code>中，<code>value</code>属性为数值。其他属性如下例子，可以覆盖 <code>timeline</code> 中的属性配置。</p>\n<p>如下例：</p>\n<pre><code class=\"lang-javascript\">[\n    &#39;2002-01-01&#39;,\n    &#39;2003-01-01&#39;,\n    &#39;2004-01-01&#39;,\n    {\n        value: &#39;2005-01-01&#39;,\n        tooltip: {          // 让鼠标悬浮到此项时能够显示 `tooltip`。\n            formatter: &#39;{b} xxxx&#39;\n        },\n        symbol: &#39;diamond&#39;,  // 此项的图形的特别设置。\n        symbolSize: 16      // 此项的图形大小的特别设置。\n    },\n    &#39;2006-01-01&#39;,\n    &#39;2007-01-01&#39;,\n    &#39;2008-01-01&#39;,\n    &#39;2009-01-01&#39;,\n    &#39;2010-01-01&#39;,\n    {\n        value: &#39;2011-01-01&#39;,\n        tooltip: {          // 让鼠标悬浮到此项时能够显示 `tooltip`。\n            formatter: function (params) {\n                return params.name + &#39;xxxx&#39;;\n            }\n        },\n        symbol: &#39;diamond&#39;,\n        symbolSize: 18\n    },\n]\n</code></pre>\n"
          }
        }
      },
      "color": {
        "type": [
          "Array"
        ],
        "descriptionCN": "<p>调色盘颜色列表。如果系列没有设置颜色，则会依次循环从该列表中取颜色作为系列颜色。</p>\n<p>默认为：</p>\n<pre><code class=\"lang-js\">[&#39;#c23531&#39;, &#39;#314656&#39;, &#39;#61a0a8&#39;, &#39;#dd8668&#39;, &#39;#91c7ae&#39;, &#39;#6e7074&#39;, &#39;#61a0a8&#39;, &#39;#bda29a&#39;, &#39;#44525d&#39;, &#39;#c4ccd3&#39;]\n</code></pre>\n"
      },
      "backgroundColor": {
        "type": [
          "Color"
        ],
        "descriptionCN": "<p>背景色，默认无背景。</p>\n<blockquote>\n<p>颜色可以使用 RGB 表示，比如 <code>&#39;rgb(128, 128, 128)&#39;</code>，如果想要加上 alpha 通道，可以使用 RGBA，比如 <code>&#39;rgba(128, 128, 128, 0.5)&#39;</code>，也可以使用十六进制格式，比如 <code>&#39;#ccc&#39;</code>。</p>\n</blockquote>\n"
      },
      "textStyle": {
        "type": [
          "Object"
        ],
        "descriptionCN": "<p>全局的字体样式。</p>\n",
        "properties": {
          "color": {
            "type": [
              "Color"
            ],
            "descriptionCN": "<p>文字的颜色。</p>\n",
            "defaultValue": "\"#fff\""
          },
          "fontStyle": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>文字字体的风格</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;italic&#39;</code></li>\n<li><code>&#39;oblique&#39;</code></li>\n</ul>\n",
            "defaultValue": "'normal'"
          },
          "fontWeight": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>文字字体的粗细</p>\n<p>可选：</p>\n<ul>\n<li><code>&#39;normal&#39;</code></li>\n<li><code>&#39;bold&#39;</code></li>\n<li><code>&#39;bolder&#39;</code></li>\n<li><code>&#39;lighter&#39;</code></li>\n<li>100 | 200 | 300 | 400...</li>\n</ul>\n",
            "defaultValue": "'normal'"
          },
          "fontFamily": {
            "type": [
              "string"
            ],
            "descriptionCN": "<p>文字的字体系列</p>\n",
            "defaultValue": "'sans-serief'"
          },
          "fontSize": {
            "type": [
              "number"
            ],
            "descriptionCN": "<p>文字的字体大小</p>\n",
            "defaultValue": 12
          }
        }
      },
      "animation": {
        "type": [
          "boolean"
        ],
        "descriptionCN": "<p>是否开启动画，默认开启。</p>\n",
        "defaultValue": true
      },
      "animationDuration": {
        "type": [
          "number"
        ],
        "descriptionCN": "<p>初始动画的时长。</p>\n",
        "defaultValue": 1000
      },
      "animationEasing": {
        "type": [
          "string"
        ],
        "descriptionCN": "<p>初始动画的缓动效果。不同的缓动效果可以参考 <a href=\"line-easing\" target=\"_blank\">缓动示例</a>。</p>\n",
        "defaultValue": "cubicOut"
      },
      "animationDurationUpdate": {
        "type": [
          "number"
        ],
        "descriptionCN": "<p>数据更新动画的时长。</p>\n",
        "defaultValue": 300
      },
      "animationEasingUpdate": {
        "type": [
          "string"
        ],
        "descriptionCN": "<p>数据更新动画的缓动效果。</p>\n",
        "defaultValue": "cubicOut"
      }
    }
  }
}